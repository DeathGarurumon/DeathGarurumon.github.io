[{"content":"","date":"2025-07-23","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":" 苦海无涯～ 只工作不玩耍，聪明绝命也变傻～\n这里致力于发现和发布一些有趣的事物！\n","date":"2025-07-23","externalUrl":null,"permalink":"/play/","section":"Funny","summary":"","title":"Funny","type":"play"},{"content":"","date":"2025-07-23","externalUrl":null,"permalink":"/tags/psychology/","section":"Tags","summary":"","title":"Psychology","type":"tags"},{"content":"","date":"2025-07-23","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2025-07-23","externalUrl":null,"permalink":"/categories/thinking/","section":"Categories","summary":"","title":"Thinking","type":"categories"},{"content":" 这个栏目中会搜集许多生活实用小知识，虽然也会将自己的经验分享，但更多的是别人的经验，在此收藏，以备不时之需。 前言 # 日常生活中离不开做饭，而想要做饭就离不开基础的柴米油盐，今天重点学习的是米、面、油的挑选方法。\n1. 米 # 中国是个产粮大国，米的种类便也五花八门，各地的都有，价格也不尽相同。原来买米都是去粮店买散装的大米，一般也都是本地产的，只能凭肉眼观察；而现在买米也可以网购，去超市也有包装，可以阅读其相关属性来判断米的好坏。\n1. 执行标准 # 米袋子上都会注明执行标准，如图：\n这里的执行标准代表大米的产地：\n执行标准 大米种类 特点 GB/T 1354 普通大米 价格便宜、口感普通 GB/T 19266 五常大米 颗粒饱满、气味清香、营养丰富 GB/T 18824 盘锦大米 颗粒饱满、气味清香、大小适中 GB/T 20040 方正大米 口感香甜、饭粒润滑柔软 GB/T 22438 原阳黄金晴 软糯可口、筋道绵弹、入口回甘 DB46/T 239 定安富硒大米 DB31/T 908 松江大米 还有其他许多地方标准的大米，但常见的大米就是前五种。\n不同产地的大米的口感会有差异，但不能完全代表品质，即普通大米并不一定比五常大米差，品质的优劣需要看大米的质量等级。\n2. 米的种类 # 首先介绍一下米的种类，北方产的米多为粳米，南方产的米多为籼米，还有一种南北都有的糯米/江米（用于粽子、麻薯、八宝粥等特殊用途）。\n粳米形状短粗胖，煮饭时加水不需要太多，口感就很软糯；籼米形状细长，煮饭是加水要多一些，口感偏硬。\n粳米代表品种：长粒香、稻花香、珍珠米、小町香等，一般为东北产，适合蒸饭和煮粥；\n籼米代表品种：丝苗米、油粘米、月芽米、泰国香米，一般为两广地区产，适合炒饭和煲仔饭。\n3. 质量等级 # 对于普通大米（1354）来说，按加工精度分为一等、二等、三等；对于五常大米（19266），分为优质一等、优质二等。\n加工精度为一等、二等的，基本没有米皮；而三等可能还会带有米皮。\n五常大米的配料表是水稻，一般还会注明水稻品种；而其他大米的配料表就是大米。\n五常大米的包装上还会有防伪标识：\n4. 散装大米 # 虽说包装上的信息已经很多了，但想要真正了解大米的品质还得看大米本身。如果我们想要辨别大米品质或者买散装米，应该从以下几个方面来看。\n硬度：一般新米比陈米硬；水分低的米比高的硬；晚米比早米硬 腹白：大米腹部通常有一个不透明的白斑，腹白越小越好，没有腹白最好 爆腰：米粒上有一条或多条横裂纹，爆腰越少越好，没有爆腰最好 黄粒：黄色米粒不好吃 挑选时，区分新米和陈米的方法：\n抓一把大米，双手用力搓，闻一闻，如果是舒服好闻的米香，则为新米；否则为陈米 新米硬度很高，不容易碎；如果一搓就碎则为陈米 新米颜色比较浅，一般是白色或淡黄色，而且有光泽；陈米颜色比较深，表面有沟纹 新米一般为 10-12 月上市，包装上一般有新米标志 5. 价格 # 价格方面其实没有一个确定的数值，不同季节、不同地区、不同品类、不同质量的大米都是不同的价格。但一般来说，普通大米都是 2-3 元/斤，优质的大米（如五常大米）一般在 4-6 元/斤，平时的标价可能更高，但可以等打折促销时购买，这时的价格一般比较正常。\n2. 面 # 1. 执行标准 # 面袋子上也都会注明执行标准，区别在于筋性（蛋白质含量）。我们买面粉是为了做面食，因此需要和面、发面等，而面团的聚合程度就与筋性有关。\n不同的食品对于筋性的要求不同，一般越大的面团要求的筋性就越高。\n执行标准 筋性 特点 用途 GB/T 8608 低筋 颜色洁白、粉质细腻、易结块 饼干曲奇、桃酥蛋挞等松软食品 GB/T 1355 中筋 颜色乳白、质感适中 馒头、包子、饺子、面条等家常食品 GB/T 8607 高筋 颜色偏黄、粉质粗糙、不易结块 面包、蛋糕、点心、披萨等筋道食品 NY/T 421 绿色无添加 孕妇、小孩等人群 其他还有一类专用的小麦粉：以 LS/T 开头，专用来做某种面食，但一般有添加剂。\n2. 产地 # 中国有四大麦区，覆盖许多省市，比较常见的面粉产地有：新疆、河北、山东、河南、山西、安徽、湖北、江苏、四川、陕西等，其中新疆的最优。\n3. 种类 # 面粉分为小麦粉和全麦粉。小麦粉是将麦子的麸皮和胚芽去掉后打磨的，营养单一但口感细腻；全麦粉则是将整个小麦粒打磨，营养价值高但口感粗糙、不好消化。\n4. 质量等级 # 面粉一般就分为四个等级：特制一等、特制二等、标准粉、普通粉，等级越高，质量越好。\n5. 价格 # 面的价格通常比米要便宜一些，通常在 2 元/斤左右。\n3. 油 # 做饭离不开油，油的品质更是重中之重。\n1. 执行标准 # 执行标准 食用油类别 耐热性 GB/T 2716 调和油 中 GB/T 19111 纯玉米油 低 GB/T 1536 纯菜籽油 中 GB/T 1535 纯大豆油 低 GB/T 1534 纯花生油 高 GB/T 11765 纯山茶花油 低 这里的执行标准没有太大作用，只需要与类别对应即可。\n值得注意的是尽量不买调和油，一般调和油是大豆油居多，夹杂其他的油类，但现有方法无法检验出调和油中究竟有什么油，因此不能保证油的质量。\n另外日常生活中可以不同的油轮换着吃，避免因为某种油的长期摄入导致某些疾病的发生。\n耐热性高的油可以爆炒、煎炸烤；耐热性中的油适合日常炒菜；而耐热性低的油适合凉拌、低温清炒、煲汤等。\n2. 生产工艺 # 食用油的生产有两种工艺：浸出与压榨。浸出一般是化学方法浸出，可能有添加剂；压榨一般是物理方法，更加安全。\n3. 原料 # 一般加工原料就分为转基因和非转基因，转基因的原料是指用基因工程使得品种产量增加，可能有潜在风险，而非转基因更加安全。\n4. 质量等级 # 食用油的等级分为一级、二级、三级、四级，等级越高，颜色越深，其杂质也越多，油烟也越大。购买时应尽量选择一级、二级，颜色浅的油。\n5. 价格 # 一般来说，食用油的价格为 10 元/升 左右，优质的油会贵一些，一般不会超过 15 元/升。\n参考文献 # 1.青年大学习之米面油挑选方法 - 小黑盒\n2.青年大学习之如何挑选新鲜好大米 - 小红书\n3.米圈江湖｜南vs北，教你4步选米不踩坑！ - 小红书\n4.【厨房小白必看！3分钟学会挑对面粉】 - 小红书\n5.新手入门不迷糊！教你2招买对面粉 - 小红书\n6.食用油的区别用途速查表 - 小红书\n","date":"2025-07-23","externalUrl":null,"permalink":"/play/youth_learning_1/","section":"Funny","summary":"","title":"青年大学习之米面油的挑选方法","type":"play"},{"content":" 欢迎来到 DeathGarurumon 的 Blog 在文章中，你能看到学术和技术分享 # 在娱乐中，有不少闲谈和娱乐的内容 # 但如果你想要了解更多关于我的信息 # 可以点击关于，进入我的秘密里世界 # 页面左下角有一个 标签 按钮，点击后可以跳转到所有标签界面。 # 在左下角还有一个 分类 按钮，点击后可以跳转到所有类别界面。 # 最近的文章 3D 语义场景补全（Semantic Scene Completion，SSC）入门 loading \u0026middot; loading AI Embodied AI 青年大学习之米面油的挑选方法 loading \u0026middot; loading Thinking Psychology 如何拥有快乐人生？ loading \u0026middot; loading Thinking How ","date":"2025-07-23","externalUrl":null,"permalink":"/","section":"主页","summary":"","title":"主页","type":"page"},{"content":" 3D 语义场景补全（Semantic Scene Completion，SSC）入门 0. 前言 # 在具身智能的语义感知的文章中，我们在 2.4 节中提到了用高斯方法进行语义表示：\n具身智能中的语义感知（Semantic-aware）——占用表示与鸟瞰表示 loading \u0026middot; loading AI Embodied AI 这里我们再具体介绍一下语义场景补全（SSC）的概念和分支。\n1. SSC 概念 # SSC（Semantic Scene Completion）的意思是语义场景补全，目的是从不完整的观测数据中重建出完整且具有语义标签的三维场景。简单来说就是给定单帧或多帧的图像，预测出场景的 3D 重建表示已经每一部分的语义分类信息。\n近年来，SSC 的主流输入方式是多模态输入，如 RGB 图像、深度图、点云图、体素、TSDF（Truncated Signed Distance Function）表示等。融合不同模态的感知信息有助于弥补单模态下的视角遮挡、几何歧义和语义模糊等问题。\n2. MonoScene # MonoScene 与之前的 SSC 相关工作的区别是，它是第一个不依赖于深度相机或雷达传感器作为输入的模型。MonoScene 只需要输入单帧 RGB 图像，即可实现端到端的 SSC，并且同时支持室内和室外场景。\n原论文在这里：《MonoScene: Monocular 3D Semantic Scene Completion》\n1. 主体框架 # MonoScene 的主体框架如图所示：\n输入为单帧的 RGB 图像，输入到一个 2D Unet 中提取不同分辨率下的图像特征；接着送入 FLoSP（Features Line of Sight Projection）模块，将 2D 特征转换为 3D 特征；接着经过 3D Unet 加强深度维度之间的联系，在其中插入 3D CRP（Context Relation Prior）模块用来提升空间语义的响应能力；最后在补全头（Completion head）中输出 3D 语义。\n2. 2D Unet 模块 # 这里使用的 2D Unet 是基于 EfficientNet-B7 的预训练模型，目的就是提取原始图片在不同分辨率下的特征（卷积次数不同）。\n3. FLoSP 模块 # FLoSP（Features Line of Sight Projection）叫做特征视线投影，是 MonoScene 的核心模块，如图所示：\nFLoSP 模块的主要目的就是将 2D 特征变成 3D 特征，但比较容易想到的是从 3D 特征投影到 2D 特征，于是 MonoScene 就寻找了一个 3D 到 2D 的逆过程，具体实现如下：\n首先，通过前面的 2D Unet 将原始图像提取成不同分辨率的特征图（例如 2x2 卷积，卷积一次缩小一倍，卷积两次则缩小两倍），不同的分辨率叫做不同的尺度（scale），尺度集合为 \\(S={1,2,4,8}\\)，即原图、\\(\\frac{1}{2}\\)、\\(\\frac{1}{4}\\)、\\(\\frac{1}{8}\\) 下采样。得到的不同尺度 \\(s\\) 的特征图记为 \\(F^s_ {2D} \\)。\n之后，对于目标 3D 体素网格中的每个体素中心 \\(v\\)，通过相机内参和外参的调节，投影到 2D 图像平面（\\(\\rho(·)\\)）。在每个尺度的特征图上，对投影点 \\(p\\) 进行双线性插值（即 \\(x\\)、\\(y\\) 轴分别插值，这里的插值指的是对于投影点左右的相邻像素的特征值进行加权平均），若 \\(p\\) 超过图像范围，则置零向量。插值后得到体素在特征图上的采样（\\(\\Phi(·)\\)）。\n对同一个体素，融合所有尺度的采样特征，从而得到该体素的 3D 特征。将所有的体素计算完毕后，即可得到整体环境的 3D 特征。\n之所以能够实现 3D 到 2D 的逆过程，是因为选择了不同的尺度，使得分辨率高的尺度能够获取图像的细节，而分辨率低的尺度能够获取图像的语义信息，将各种分辨率的信息融合，则可以还原出比较真实的特征。再将此特征通过投影的反向作用在体素上，则可以还原三维特征。\n4. 3D Unet 与 3D CRP 模块 # 这个模块的细节如图所示：\n这里的 3D Unet 是一个自定义的浅层网络，只有两层。通过使用 3D ASPP 和 Softmax 层的补全头，从 3D Unet 输出的特征处理中获得 SSC 的输出 \\(\\hat{y}\\)。\n3D CRP（Context Relation Prior）是 3D 上下文关系先验层，它的作用是解决因遮挡、视野限制和投影歧义导致的空间-语义不一致问题。\n传统 3D 卷积的感受野有限，难以捕捉大范围的语义关联，而 3D CRP 通过建立体素间的关系矩阵，学习场景中所有所有体素对的语义相关性，使网络能够基于全局上下文推理遮挡区域的语义。\n3D CRP 在 3D Unet 的瓶颈层，因此输入为分辨率较低的特征图。将特征图空间划分为边长为 \\(s\\) 的超体素（Super Voxel），则每个超体素包含 \\(s^3\\) 个体素。关系矩阵 \\(\\hat{A}^m\\) 的每个元素都描述当前体素与超体素内其他体素的语义关系，如图所示：\n图(a)中表示两个体素间的四种关系：\\(f_ s\\)（空空相似）、\\(f_ d\\)（空绿相异）、\\(o_ s\\)（绿绿相似）、\\(o_ d\\)（黄绿相异），空指的是空白语义，黄绿是两种不同的语义。\n图(b)中表示一个体素与超体素的语义关系，为了降低开销，只预测该体素与超体素中体素有什么关系，既不用表示重复值，也不用管每个体素的具体位置。这相当于一个多标签分类，得到的特征与每个体素原始的特征拼接，即相当于对原始局部信息的全局补充。\n这样的过程也可视作一种空间的注意力机制。\n5. 网络训练和实验 # 网络和代码部分在这里：MonoScene/ at master · astra-vision/MonoScene\n标准交叉熵损失（Cross-Entropy Loss，\\(L_ {ce}\\)）：逐个体素优化类别预测概率，约束局部体素的语义准确性\n场景类亲和损失（Scene-Class Affinity Loss，\\(L_ {scal}\\)）：解决类别不平衡和全局语义一致性问题\n视锥比例损失（Frustums Proportion Loss，\\(L_ {fp}\\)）：解决单视角遮挡的歧义问题，通过约束图像局部区域对应视锥内的类别分布间接监督\n关系损失（Relation Loss，\\(L_ {rel}\\)）：监督 3D CRP 模块，学习体素间的空间-语义关系\n最终总的损失函数为以上损失函数的加权和。\n视锥比例损失的示意图如下：\n3. Symphonies # Symphonies（Scene-from-Insts），意思是从实例（物体）中获取场景。\n在它之前的 SSC 方法（如 MonoScene）通常依赖体素级特征聚合和逆透视映射（IPM），而忽略了以实例为中心的语义（instance-centric semantics）和更广泛的上下文（broader context），因此 Symphonies 通过上下文实例查询（Contextual Instance Queries）和串行注意力机制（Serial Instance-Propagated Attentions）实现以实例为中心的 SSC 方法，如图：\n原论文在此：《Symphonize 3D Semantic Scene Completion with Contextual Instance Queries》\n1. 主体框架 # 单独的体素建模很难考虑更广泛的上下文，而 Symphonies 的建模弥补了低级表示与高级语义监督差距，加强了特征从 2D 图像到 3D 场景的迁移。\n如图，图像首先输入骨干网络（ResNet-50）用来特征提取，然后输入到实例感知图像编码器（Instance-Aware Image Encoder）中提取多尺度图像特征 \\(F^{2D}\\)，这个 Encoder 是可变形的 Transformer encoder。与 MonoScene 不同的是，实例感知编码器能自适应地聚焦实例区域，而不是固定的尺度。由于进行过 2D 全景分割的预训练，该编码器能够在没有实例级监督的情况下有效获取实例信息。\n之后将其输入到 Symphonies Decoder 中，其中包含串行的多个交叉注意力和自注意力机制，最终可以通过实例查询（Instance Queries）建立 2D 到 3D 的网络。\n最后将网络接到分割头（Segmentation Head）上输出每个体素的语义信息。\n2. Voxel Proposal Layer # Voxel Proposal Layer 是体素提议层，它的作用是通过深度预测信息（Depth Prediction）来校正初始的体素网格，如图：\n体素提议层的输入之一是原始图片经过特征提取后的多尺度图像特征（Multi-Scale Image Feature），这里的多尺度图像特征主要包含不同程度的实例信息。\n同时，可学习嵌入被用于稀疏的实例查询（Instance Queries）集合和体素场景表示（Voxels）中，将体素场景表示和多尺度图像特征输入到体素提议层中进行深度校正。体素提议层使用隐式表面上的图像特征初始化建议后体素（Proposed Voxels）。\n3. Symphonies Decoder # Symphonies Decoder 层通过引入串行注意力传播模块（Serial Attention Propagation），在多尺度特征、实例查询和场景特征间建立迭代交互：\n实例-图像（Instance-Image）交叉注意力 场景-实例（Scene-Instance）交叉注意力 场景（Scene）自注意力 实例-场景（Instance-Scene）交叉注意力 实例（Instance）自注意力 这个迭代过程不断地通过实例查询，引导图像特征传播到场景特征，同时从两种模态中聚合实例语义。最后输出到分割头中进行体素的语义分类。\n4. 训练过程 # 这里选用的损失函数和 MonoScene 类似，数据与代码在这里：hustvl/Symphonies\n4. EmbodiedOcc # EmbodiedOcc 意思是具身占用预测，它的特点是数据输入方式偏具身方式，即是实时连续变化的图像序列，根据连续输入的图像，实时预测空间的占用，如图：\n原论文：《EmbodiedOcc: Embodied 3D Occupancy Prediction for Vision-based Online Scene Understanding》\nEmbodiedOcc 着眼于室内场景，在此之前的方法基本都是采用单帧或多帧的完整视图进行离线的全景感知，但实际情况中智能体是渐进探索未知环境的，具身任务需要在此条件下实时更新局部观测，因此为了实现在线的具身探索，提出了 EmbodiedOcc 方法。\n1. 主体框架 # 如图所示，输入是随时间而变化的，每个时间节点的输入都是在上一个节点的基础上移动了一部分，二者之间有联系的部分也有新增的部分，当一个场景被重复探索时，应该对这个场景的预测更加准确，因此需要保证模型具有一定的记忆性。\nEmbodiedOcc 的场景表示是继承的 GaussianFormer，因此同样使用 3D 高斯，映射到体素占用时使用的也是 Gaussian Splatting 方法。\n具体来说，首先将 \\(T\\) 时刻的图像输入（\\(I_ {mono}\\)）放入预训练的深度预测模型（Pretrained Depth Model）得到深度图 \\(D_ {metric}\\)，将其和高斯查询向量（Gaussians to Queries）输入到深度预测层（Depth Prediction），使得每个高斯向量与对应的深度感知（Depth Aware）向量拼接，使得 3D 高斯带有深度信息。\n同时将 \\(I_ {mono}\\) 放入 Image Encoder 中提取多尺度特征，这里的多尺度特征也是以实例为主进行的 3D 高斯初始化。经过 Self-Encoding 和 Image Cross-Attention 后，即可得到一组局部的高斯表示。这个过程与 GaussianFormer 中的方法类似。\n之后将深度感知查询与局部高斯表示送入可信度细化层（Confidence Refinement）从而更新整体的高斯表示。\n2. 深度预测层 # 图像输入到深度预测层中会进入一个深度感知分支（Depth-Aware Branch），如图所示：\n沿着特定射线，分布在真实深度点前面的高斯可能会对空语义进行建模（如高斯 A）；而分布在真实深度点后面但距离太远的高斯需要更多信息来指导它们的更新（如高斯 C）；只有紧密分布在真实深度点后面的高斯才可能会对有效语义进行建模（如高斯 B）。\n3. 局部高斯表示 # 与 GaussianFormer 方法类似，使用单帧或多帧图像可以建立三维场景的完整占用表示，而借用这个框架输入单帧图像，则可以建立局部的高斯表示，如图为 GaussianFormer 的框架：\n4. 可信度细化层 # 这里引入了可信度，目的是使高斯表示在更新时，能够针对未知的区域进行重点更新，而已有的区域则少些重复更新，如图：\n随机高斯区域可信度为 0，而有效高斯区域可信度为 0-1 的数字。当建立了一个局部表示后（图中蓝色点），转一个角度后再建立新的局部表示（图中黄色梯形区域），原来的蓝色点稍微更新（Slightly Updated），而未知区域（绿色点）则有效更新（Efficiently Updated）\n5. 训练和实验 # 代码和数据在这里：YkiWu/EmbodiedOcc\n5. 参考文献 # 1.如何搭建Tesla Occupancy Network之MonoScene( Monocular 3D Semantic Scene Completion) - 知乎\n2.论文精读|MonoScene: 单目3D语义场景补全\n3.基于视觉的3D Occupancy论文阅读：MonoScene等最新文章！\n4.【论文阅读】Symphonies(Scene-from-Insts) - 知乎\n5.CVPR'24开源 | Symphonies：深入自动驾驶中的3D语义场景补全 - 哔哩哔哩\n6.腾讯元宝\n","date":"2025-07-22","externalUrl":null,"permalink":"/docs/ssc/","section":"Notes","summary":"","title":"3D 语义场景补全（Semantic Scene Completion，SSC）入门","type":"docs"},{"content":"","date":"2025-07-22","externalUrl":null,"permalink":"/categories/ai/","section":"Categories","summary":"","title":"AI","type":"categories"},{"content":"","date":"2025-07-22","externalUrl":null,"permalink":"/tags/embodied-ai/","section":"Tags","summary":"","title":"Embodied AI","type":"tags"},{"content":" 学无止境～ 致力于收集整理和记录科研和学习途中的问题与经验！\n吾生也有涯，而知也无涯。以有涯随无涯，殆已！\n","date":"2025-07-22","externalUrl":null,"permalink":"/docs/","section":"Notes","summary":"","title":"Notes","type":"docs"},{"content":" 由 \\(\\pi^3\\) 探讨归纳偏置（Inductive Bias） 0. 前言 # 之前我们介绍了 VGGT，这是一种端到端的三维视觉重建方法，达到了当时的 SOTA。然而，近日提出的 \\(\\pi^3\\) ，同样是前馈神经网络，但打破了传统固定参考试图的依赖。\n简单理解 VGGT（Visual Geometry Grounded Transformer） loading \u0026middot; loading AI Embodied AI 先前的方法通常将重建结果锚定在指定的视点上，这种归纳偏置在参考视点不佳时会导致不稳定和失败。相比之下， \\(\\pi^3\\) 采用了一种完全置换等变的架构，无需任何参考坐标系即可预测仿射不变的相机位姿和尺度不变的局部点图。这种设计使得 \\(\\pi^3\\) 对输入顺序有内在的鲁棒性和高度可扩展性。\n\\(\\pi^3\\) 的原论文如下：《\\(\\pi^3\\): Scalable Permutation-Equivariant Visual Geometry Learning》\n在线的 Demo 演示可以上传自定义的图片或视频，快速构建三维场景：Pi3 - a Hugging Face Space by yyfz233\n1. 主要贡献 # 先前的视觉几何重建方法都存在一个关键局限性：依赖选择单个固定参考视图，所选视图的相机坐标系被视为全局参考坐标系。然而这种设计引入了不必要的归纳偏置，从而限制了前馈神经网络的性能和鲁棒性。对任意参考视图的依赖使得这类方法对初始视图的选择高度敏感，选择不当则会导致重建质量急剧下降。\n而 \\(\\pi^3\\) 模型能够接受各种输入，不指定参考视图，而是为每帧预测一个仿射不变的相机位姿（Affine-Invariant Camera Pose）和一个尺度不变的局部几何（Scale-Invariant Local Geometry），这些都相对于该帧自身的相机坐标系，因此不需要一个全局坐标系。\n通过避免使用帧索引位置嵌入这类依赖顺序的组件，以及采用在视图级和全局注意力之间交替的 Transformer 架构， \\(\\pi^3\\) 实现了真正的置换等变性（Permutation-Equivariant）。\n2. 具体方法 # 如图所示，之前的方法有两种：一种是通过拼接特殊标记来指定参考视图（Type A），一种是添加可学习嵌入来指定参考视图（Type B）。而 \\(\\pi^3\\) 则不进行这些要求，而是采用相对监督方，使得对于输入视图的顺序有内在的鲁棒性。\n3. 归纳偏置 # 在机器学习中，算法经常会做一些对目标函数的必要假设，这些假设称为归纳偏置。归纳是指从一些样本中寻找共性和泛化的规则，而偏置是指模型的偏好。简单来说，归纳偏置会使得学习算法优先考虑具有某些属性的解。\n例如，DNN 认为层次化处理信息有更好的效果；CNN 认为信息具有空间局部性，可使用卷积块降低参数空间；RNN 则重点考虑时序信息，强调顺序的重要性；GNN 则认为中心节点与邻居节点的相似性能更好地引导信息流动。机器学习中有许多常见的归纳偏置（先验假设）：\n最近邻（KNN）：相近的样本应倾向于属于同一类别 最少特征数量（特征选择）：除非有充分证据表明某个特征是有用的，否则它应当被去掉 最大边界（SVM）：两个类别的分界线间边界宽度越大越好 最大条件独立性（NB）：贝叶斯模型架构中，条件独立性越大越好 最小描述长度（奥卡姆剃刀）：假设越简单，越可能是真的 最小交叉验证误差（各类网络）：交叉验证误差越小，假设越可能成立 局部性和空间不变性/平移等效性（CNN）：元素间的相关性与空间位置有关 序列性和时间不变性（RNN）：元素间的相关性与序列顺序和时间步有关 注意力机制（Transformer）：网络权重分配遵循某种注意力机制 归纳偏置的意义或作用是使得学习器具有了泛化的能力，同样的样本点，不同的归纳偏置会训练处不同倾向的模型。\n参考 2020 年这篇论文：《Inductive Biases for Deep Learning of Higher-Level Cognition》，当时的机器学习系统能够利用基于大量带标签样本的监督学习（supervised learning）或基于频繁奖励信号的强化学习（reinforcement learning）在特定的任务中取得优异的性能，但当任务变化时，这些方法通常不具有鲁棒性。针对这个问题，通常是用多任务学习（multi-task learning）的方式进行训练，即利用多个数据集为模型提供不同视角。\n而文中提出，人在观察世界时是具有偏好的，而 AI 作为人类的模仿，也应该探索其归纳偏置。现在来看，注意力机制、CNN、RNN等就是结合人类的观察世界时的偏好所研究出来的。然而，归纳偏置应该站在更高的角度，使得模型能够拟合一种更高层面的分布，使得其泛化能力更强。\n但结合本文中提到的 \\(\\pi^3\\) ，它恰恰是舍弃了之前方法的固定参考系的归纳偏置，从而提升了性能。这不禁让人思考， \\(\\pi^3\\) 做到的究竟是舍弃了原有的归纳偏置，还是探索出一个更高层面的归纳偏置（即不添加固定参考系更有利于视觉几何的重建）？\n4. 参考文献 # 1.远超VGGT！浙大开源π3等变视觉几何学习：姿态估计、深度估计、3D重建新SOTA！\n2.【机器学习】浅谈 归纳偏置 (Inductive Bias)-CSDN博客\n3.【深度学习】归纳偏置（Inductive Biases） - 知乎\n","date":"2025-07-20","externalUrl":null,"permalink":"/docs/pi3/","section":"Notes","summary":"","title":"由 π3 探讨归纳偏置（Inductive Bias）","type":"docs"},{"content":" 红蓝胶囊问题的分析和思考 前言 # 红蓝胶囊问题是比较流行的一个道德选择问题：每个人都必须在两种颜色的阵营中选择一种，蓝色或红色。最终结果如果超过一半的人选择蓝色，那么所有人都会存活；但如果超过一半的人选择红色，那么选择蓝色的人将会死亡。且在你投票前，你不知道其他人的选择，你会如何选择？\n这里我也发起了一个投票，感兴趣的同学可以参与一下：红蓝投票\n选红色的理由 # 选红色似乎不需要什么特别的理由，稍微推理就可以明白，选红色的风险为 0，只要选择红色是必定可以存活的，因此正常人的第一反应一定是选择红色。\n此外，选择红色的人也会产生这样的思考，每个人都是有一定智力的人，因此每个人都会自然而然选择红色，这样推理的话，所有人都倾向于选择红色，而如果所有人都选择红色也不会有人死亡。因此，问题就变成一个贪心问题，而用贪心的方法来解决又是成立的，最后的理想结局是红色占比 100%。\n选择红色的人多半理性占据主导，认为选蓝的人是感性或是愚蠢的，甚至认为选蓝是将简单问题复杂化，增加了不确定因素。而正因为有些愚蠢的人选择了蓝色，导致一些本不该选择蓝色的人为了救他们而冒着风险选择蓝色。所以最后的结论是，选择红色是没有问题的。\n总的来说，选红色的人是从绝对的理性出发，是以目的为主导的逻辑来思考，即先进行选择，再考虑结果，那么自然是选择红色合理。\n选蓝色的理由 # 虽说第一反应是选择红色，但人类作为有智慧的物种，不会局限于第一反应。选择蓝色的人大多以结果为主导的逻辑来思考，即先考虑结果，再进行选择。选蓝色的理由也十分简单：人不是机器，不会只是绝对理性的思考，一定有人会选择蓝色，全体选红的概率微乎其微。而选择蓝色的人只要超过一半就可以拯救所有人，容错率比全体选红要高很多。并且，选择蓝色的人认为一个有良知的人也都会做出这样的选择，因此为了不让这些善良的人死亡，自己也选择做一个善良的人。\n在此基础上，选蓝的人认为，无论出于何种理由选择红色，都是降低了选择蓝色的概率，一旦蓝色的人不到一半，这些选择红色的人相当于亲手杀掉了他们，应该对蓝色的死负责。\n选择蓝色还有一类观点，那就是不清楚自己的亲朋好友或是老人小孩选择了什么，若是他们选择了蓝色，自己不应该去救他们吗，至少也不应该自私的丢下他们。此外，如果你不小心选择了蓝色，你是否希望其他人选择蓝色来救你，那么如果是这样的话，你是否应该将心比心去帮助别人？\n博弈的思考 # 虽然无法得知别人的选择，那么通过一些方式来宣传或倡议人们选择某个颜色是否可以？如果可以，那么倡议别人选择红色，是救了他还是害了选蓝色的人？倡议别人选蓝色，是否意味着让他承担更大的风险去救那些可能不占大多数比例的选蓝色的人？\n这个问题是否可以换成：选择红色必定存活，选择蓝色有一定几率会死，但如果选择蓝色的更多则不会死。如果换成了这样的题目，还会有那么多人去选择蓝色吗？\n选红色是从个人角度出发，并将其推广到全体，如果每个人都对自己负责，那么社会也会有条不紊；而选择蓝色是从集体角度出发，并将其发散到个人，如果每个人都对集体负责，那么每个人都能过得很好。\n从红色角度出发，是最快的利益最大化，是贪心策略，如果人人都贪心，那么最后的结果能达到最优；而从蓝色角度出发，是带有随机性的风险最小化，只需要有一半的人选择蓝色，则能达到最优。\n选红色的人真的是害死选蓝色的人的人吗？由于选红毫无风险，选蓝相当于自己承担风险，那么选蓝色并死亡难道不是意味着蓝色自作自受吗？跳出规则来思考，选蓝色的人死亡难道不是制定规则的人杀死了他们吗？\n如果存在第二次选择，人们会产生什么变化？例如：第一次投票的结果是红色大于蓝色，那么如果可以重新投票一次，选红色的人是否会为了提高蓝色比例而选蓝色？选蓝色是否会因为失望而选择红色？如果红蓝比例是 99:1 呢？如果红蓝比例是 51:49 呢？\n结语 # 选择蓝色还是选择红色都有道理，对于人类这个既理性又感性、既简单又复杂的群体，红色比例大还是蓝色比例大都有可能。然而，我很喜欢一个观点的说法：蓝色是在赌这个世界好人更多，把生命交到同样选择蓝色的人手上；而红色是在赌自己能接受投票后的世界，若结果是红色阵营胜利，那世上一定少了许多仁义之士，而只留下所谓的聪明人。\n参考文献 # 1.三、2.我对最近很火的红蓝胶囊问题的选择和思考 - 知乎\n2.DeepSeek R1 的解答\n3.微博上吵翻了的这道“道德难题”，你咋选？\n","date":"2025-07-18","externalUrl":null,"permalink":"/play/rb_problem/","section":"Funny","summary":"","title":"红蓝胶囊问题的分析和思考","type":"play"},{"content":" 这里是绝命加鲁鲁 —— DeathGarurumon\n设定来源为 数码宝贝 中 加鲁鲁兽 的变异进化体\n本文主要收录关于 我 的各种信息（虽然有的只是自娱自乐，但终归还是一抹痕迹） 预警！本人是一个中二患者，可能会不时发表中二言论，各位看官切莫较真～\nAbout this blog # 本博客创立于2024.11，目的是记录、整理、收集、分享有趣或有价值的内容（也有只是作者自己喜欢的）\n本博客架构由Hugo驱动，主题为Blowfish；利用GitHub Pages进行发布（可以看右下角）\nHow to play around（updating） # 如果你想快速浏览文章列表，可以点击页面右上角的 文章 按钮；每篇文章都具有1或2个标签，可以通过搜索或点击该标签来筛选。\n如果你想看点轻松的内容，可以点击右上角的 娱乐 按钮，这里会发布一些有趣的内容。\n页面左下角有一个 标签 按钮，点击后可以跳转到所有标签界面。\n页面左下角也有一个 分类 按钮，点击后可以跳转到所有类别界面。\n点击页面右上角的 关于 按钮，你会发现什么都没有发生（原地tp）\n如果你闲极无聊，也不妨往下翻翻看，可以发现许多我的碎碎念（大概）\n","date":"2025-07-18","externalUrl":null,"permalink":"/about/","section":"About me","summary":"","title":"About me","type":"about"},{"content":"","date":"2025-07-18","externalUrl":null,"permalink":"/tags/how/","section":"Tags","summary":"","title":"How","type":"tags"},{"content":" 前言 # 如何拥有快乐人生？答案不尽相同。有的人，我想可能是大部分人，并不认为自己的生活是真正快乐的，也不知道如何才能变得真正快乐，而这也是我写此文的目的。\n由于这个话题很大，所以我需要首先解释一些前提。首先，我所介绍的方法是如何变得快乐，而不是如何变得幸福，幸福这个词包含的意义太大了，单靠学习一些东西是不够的，还需要实际的做许多事，且还要足够幸运得到好的结果。而我最多只能让你变得快乐，单纯且简单的精神愉悦，这点还是容易做到的。第二，我介绍的内容或许十分难以认同，但同时又很容易理解，正所谓说起来容易做起来难，我的理论正是这样的。但是有趣的是，一旦你满足了理解这些理论的条件，所有的内容就迎刃而解，没有一丝一毫的晦涩之处。第三，我介绍的这个方法是很抽象的，并不是很实际很现实的行为，因此需要你抽象地哲学地理解。但这并不代表我的方法是难以实行的，恰恰相反，一旦你理解了我的理论，反而还很难不使用我的方法。\n或许还有其他不少前提，但闲话少叙，我们边讲边提。\n截至现在，已经出了视频版，请移步：《如何拥有快乐人生》\n一、接受新事物的能力 # 第一件事就是我们要有接受新事物的能力，这一点也是理解本文的重要前提。当今时代，我们每天都面对形形色色、五花八门的新奇事物，因此我们逐渐形成了遇到新事物就质疑，遇到没见过的东西就发问的习惯。这种习惯当然不坏，但一味的缺乏思考的质疑和发问只会带来争辩，只会使我们更加维护我们已有的思维习惯，这就不好了。\n所以，请你拥有一些宽容和随意，暂且先听完我的理论，经过思考之后，再进行批评和质疑。或许我的理论是不现实的，或许是不完整的，但请你经过思考之后再做评价。因为思考才是我们所追求的，而不是理论本身。\n这种宽容和随意，就是我想要介绍的第一件事，即接受新事物的能力。如果你拥有这种能力，你就能避免许多烦扰。试想，我们平时在互联网上经常能遇到这样的情况，一个帖子十分有趣，因此你想看看多才多艺的网友们有何评论，结果热评第一的就是一个观点，你还没等看完，就发现回复中就是与之对立的观点。于是双方以评论区作为战场，开始对各自观点的捍卫。逐渐观点开始变味，变成了纯粹的对骂。虽然你本不想加入其中，但由于某些观点实在是让你反感，因此你也不自觉的回复了它，并说明了你的观点。一段时间后，有人回复了你并赞同你的观点，你会沾沾自喜，于是在其他帖子中更加积极的发表观点；也有可能有人回复你并反驳你的观点，你会恼羞成怒，于是也开始捍卫你的观点。然而，这整个过程下来，你既没有获得丝毫乐趣，又没有任何思维的启迪，只会变得更加偏激且自负。\n如果你看到以上的话，就开始想要辩解或是反驳，觉得这番话是在污蔑你、指责你，那么恰恰证明我说中了。这里我想解释一下，这并不是逻辑圈套或强词夺理。我想表达的意思是，看到一个观点就急着想要反驳，或是想要表现自己的观点，这是没有意义的；但我们也不是对所有的观点默不作声、视若无睹，这也是没有长进的。我们应该做的是，将它的观点理解清楚，并进行思考，选取它说的有理之处，摒弃它的不对之处。在此基础上，我们对这个观点背后的话题进行自己的思考，得到一个自己的结论或观点，但也用不着向谁证明，顺其自然即可。\n这样的心态就是我想介绍的第一点，宽容，即接受新事物的能力，拥有这一点，你才可能是一个快乐的人。\n二、哲学思维 # 如果你看到这个标题，还想继续往下看的话，那么你应该是具有接受新事物的能力的，我所介绍的第一点也可以说是为这一点服务的。哲学，许多人看到这个词就心生反感，认为是什么晦涩难懂、虚无缥缈的东西，以为与自己无关，所以一点也不愿接触和了解。但由于你已经拥有接受新事物的能力，因此你能够勉强听一听我介绍的这门所谓“哲学”，或许听完以后你会有不一样的思考。\n首先可以让各位放心，我一没有学哲学专业，二不是文科生，更谈不上对哲学有什么研究。那为什么我这样一无所知的人要介绍哲学呢？我所介绍的哲学又是什么东西呢？\n其实，我希望介绍的是一种思维方式，一种思考问题、看待事物的行为习惯，而不是什么具体的学说或主义，姑且称之为哲学思维。具体来说，哲学思维是什么呢？我们不妨考虑这么一个例子。\n物理和数学各位都学过，物理是在研究物体的道理，比如我们发现苹果会落到地上，鸡蛋会落到地上，羽毛也会落到地上，千千万万的东西都会落到地上，于是发现了重力。然而在遇到具体事物时，我们不能每次都重新研究一次重力，如果每次都重新研究，物理就失去了意义。所以，我们总结出了G=mg的公式，以此来研究或者说代表重力。这就把千千万万的事物都抽象成一个m，把重力的规律抽象成一个数学公式，而这种抽象就是哲学思维。这样，我们可以说，物理的哲学在于数学。因此我们可以看到，物理是研究万事万物的道理和规律，但最终都会总结成数学公式，否则就没有实际意义。\n通过上面的例子，我们可以总结出，哲学思维也可以说是抽象思维，即把具体问题总结成抽象道理的思维方式。我们在读文字时，眼中看到的是文字，但心里想的一定是形象，如果就字看字，那是什么也看不出来的。这个形象和文字就具有哲学关系。我们在讨论事情时，嘴上说着事情的始末过程，心中其实是思考事情中蕴含的道理，就事论事是论不出什么结果的，就事论理才有意义。事和理就具有哲学关系。那么我们就很清楚，哲学关系是无处不在的，总是一虚一实、一阴一阳，看似有些对立，实则又是统一的。而哲学思维就是在看到事物表象时能够思考背后的道理，从更高的层次去看待问题。\n一旦你具有哲学思维，那么自然就会具有批判思维，具有质疑精神，但同时也会更加宽容。许多事情或许在当前的层面上难以接受、难以释怀，但一旦上升一个维度，就会迎刃而解，可以很容易去解释。人只有具有哲学思维，才能变得灵活，才不至于被当前所见所感的事物所束缚，才不易陷入挣扎的困境。\n说句大白话，你想的多、想的高，就容易想得通、想的清。否则，只会陷入被动，事物的发展总是影响你自身，那就没有我这个理论的用武之地了。\n总而言之，哲学思维是我要介绍的第二点，这是你能否真的接受新事物、能否真正宽容的关键。\n三、中庸思想 # 这里的中庸也不是要宣扬儒家思想，只是一种生活态度，我这里更想说的是中庸的好处，而并不想高台教化，理解中庸思想是能变得十分快乐的。\n我这里虽然要谈中庸，但请你经常回忆第二点中谈到的哲学思维，因为中庸其实就是连续的哲学思维所组成的一套小连招。通过对事物不断进行抽象思考，就能够保持中庸。\n中庸思想不容易定义，但却很好描述，更好举例说明。假设我们在遇到一件事情时，需要采取一种原则或手段，这种手段可以是善意的，也可以是恶意的，总之是在一个范围之中可以选择。这里我们将其比作一个尺子，尺子的刻度为 0 到 1，意味着我们做事的尺度和分寸。我们可以采取 0 到 1 中的某个观点处理事物。\n假设我们仅仅能采取 0 或者 1，那么我们的思想会十分极端，非黑即白，非对即错，这种思想很显然是不好的。然而，即使我们能保持一碗水端平，采取 0.5 的办法，依然不是好的方法，因为这样做就会显得麻木不仁、事不关己。0.5 意味着对于任何事物我们都采取中立的办法，这种办法看上去理性且客观，但与我们的主题并不相符，它不能使我们快乐。同时也可以将其理解为另外一种极端，即极端的中立。同理，我们选取任意一个数字都会陷入这种困境，因为不能灵活变化。如果我们拥有哲学思维，我们就会打开脑洞，为什么只能选择一个数字保持不变呢？我们完全可以让指针来回摆动，没有固定位置，这样遇到事情就能随机应变了。这种思维的变化或许就像从学生步入了社会，但很容易随波逐流，无可奈何。因此，这种摆动需要一些主动权，指针不仅是灵活可变的，且是人为可控的，我想要采取哪个数字就采取哪个，我可以任意选取，也可以控制它停在某个位置一段时间。这样，我们的思想就变得活泼且严谨，灵活且坚定。正如水一样，动起来就千变万化，静止后结实坚硬。\n如果我们能理解上面的比喻，我们就能明白，思想应该具有这样的活泼性，层层递进地变化。对于各种事物，我们不应该坚持所谓的原则，因为这种原则都是死的。我们应该坚持的原则就是活的原则，同样一件事，正着做也行，反着做也行，甚至不做也可以。同样一个话题，正面的观点我们认同，反面的观点我们也认可，客观的观点我们也同意，这并不是什么矛盾的事。甚至说，这种矛盾才是正常的、正确的处世之道。\n如果你看完以上的论述，你觉得我说的很好，但同时你又觉得坚定一个信念、坚守固定原则也没什么错，那么恭喜你，你其实已经具备了我所谓的中庸思想。但是这种思想如果不加以思考，很容易就会堕化为随波逐流、人云亦云，因为别人说什么好像我都不反对，别人说什么我也都不赞同。因此，思考是很重要的，这种思考就是上面所说的哲学思维。\n我这里再举个例子来描述这种思考，其实也是经典的山水三段论。据说，人生可以分为三个阶段，第一阶段是看山就是山、看谁就是水；第二阶段是看山不是山、看水不是水；第三阶段是看山还是山、看水还是水。这也表达了哲学中波浪式前进、螺旋式上升的思想，即否定之否定的思想。但我们不说太复杂，我们可以观察到第一阶段和第三阶段其实客观上是一样的，因为山是山、水是水。但主观上却完全不同，因为中间经历了山非山、水非水的过程，因此我们的认识变得更加深刻。但也正因为更加深刻，我们就不再纠结于表面上的形式问题了。回到上面说的问题，第一阶段就是我们当前的思想情况，第二阶段就是经过哲学思考之后的质疑和反思，而第三阶段就是将其想通之后拨云见日的思想情况。或许我们的思想表面上看和第一阶段没什么区别，但实际上经过了思考就会变得通透和凝练。\n总结一下，中庸思想是我想要介绍的第三点，主要是强调思维的灵活性和哲学思维的应用方法。如果我们思维足够灵活，那么烦恼自然减少，快乐就不请自来了。\n四、中二思想 # 接下来，我要介绍一些具体的思想，前面几点更像是基础方法，而这点就是方法孕育出的结果。另外，在介绍中二思想之前，我先要强调一个概念，就是思想的适用范围。其实，我们的思想至少应该分割成两类，一类是对自己本身的，另一类是与他人相处的。对自己本身起作用的思想可以是任何思想，我们应该对自己宽容一点，不要自己逼自己，因此这类思想应该是灵活多变的；而与他人相处时，我们的思想应该考虑客观因素，考虑社会环境和他人性格等，不能仅仅以自己的意志为转移，还有考虑许多现实问题。\n而中二思想就是属于对自己本身的思想，如果自己能够灵活贯通这种思想，那么就会十分快乐；但若是将其用于与他人交往上，就可能变得与别人格格不入。所以，以下的叙述仅能对自己应用，千万不要影响到别人。\n中二的本意其实是一种自我意识过剩，可以称之为普信的一种状态，这里我们借用这个说法，形成中二思想。许多时候，之所以我们不快乐，就是因为现实的毒打使我们不得不接受某些事实，然后被动地痛苦。然而，由于我们具有中庸思想，我们就可以改变这样的现状。\n借用一句流行语，我们要与自己和解，而这就是中二思想的核心内容。世界纷繁复杂，每件事情都有自己的性质，一定有的让我们乐于接受，有的让我们难以接受。当我们对一件事情不满意时，外物是不容易改变的，我们可能需要花费很大的力气才能改变事情的走向和结果。这就会使我们感到不顺，也就自然不快乐。而中二思想就是提出一个建议，既然外物难以改变、客观事实难以改变，我们就改变我们的主观想法，将各类事物都尽数接受。由于我们拥有中庸思想，因此这点是不难做到的。\n而中二思想究竟如何建立呢？我们只需要记住一点，就是不要自己逼自己，即要与自己和解。举个例子，假如我们喜欢吃苹果，不喜欢吃香蕉，那么遇到苹果时我们就吃，遇到香蕉就不吃，这是最基本的，但只靠这个并不是中二。中二是虽然我们不喜欢吃香蕉，但当我们不得不吃香蕉时，我们就将我们不爱吃香蕉这件事忘掉，甚至还转变为自己爱吃香蕉，于是香蕉就能顺利被我们吃掉。不要自己逼自己就是这样，有的时候并不是在行为上不逼自己，而是在思想上不逼自己。再举个例子，假设我们十分勤俭，不舍得浪费。那么我们日常生活当然不浪费，但当我们看到别人浪费或者我们不得不浪费时，我们就把这个观念忘掉，也乐于接受这种浪费的行为。\n一旦在思想上不逼自己，那么生活就会变得非常快乐，即使遇到一些重大事件，也能波澜不惊、从容面对。但这里又要提醒一句，这样的思想只能对自己应用，千万不能用于与人交往的事情上。在面对他人、面对社会、面对关系时，我们必须考虑其他的事情，有时也必须坚定立场和原则，不能逆来顺受、随波逐流。如果能做到这点，我们就能对内修身、对外世故，二者并举，人生才能有所滋味。一味的宽恕和妥协只会让你恍恍惚惚、随波逐流，感受不到自己的存在；一味的不甘和笃信只会使你处处碰壁，最终也会被迫磨平棱角，坎坷前行。\n回到我们的话题，能想通这一点是十分不容易的，在思想上我们是无法自欺欺人的。能接受就是能接受，接受不了我们就是心里难受，所以需要修身养性。但我觉得更需要的是觉悟，一旦想通了就一切都通了。想通不是妥协，而是一种清醒。当然，我们现在觉得清醒，或许几年之后觉得当年是陷入另一种糊涂之中也说不准，但思维会变化这是十分正常的，我们对这一点也接受就行了。退一步说，我们也没必要追求最好，一种思维能让当下的我们快乐就够了，这也是中庸的体现。\n总而言之，一旦贯通之后，说什么都有道理，怎么说都能讲清，我们也就不必执着于这些思维或是道理了。这就是我想介绍的第四点，中二思维，即能与自己和解的智慧。\n结论 # 最后进行一个总结，如何拥有快乐人生，我介绍了几个关键步骤。\n第一个是宽容，宽容自己也宽容别人，这就是接受新事物的能力。\n第二个是哲学思维，也是抽象思维，对于各类事情，不要囿于事情本身，而是要跳脱出来，站在更高的一个维度来解读，正所谓大道至简，高维的解析一定是简单且深刻的。\n第三个是中庸思想，这是对于哲学思维的运用，对于具体事物，我们高维的解析可以有很多种，哪怕其中有些观点是矛盾或对立的，在高维依然是统一的，我们也应该对这些观点尽数理解，这样才能真正意义上看清低维的问题，如果我们只支持某一个观点，那又退化到低维的视野上了。\n最后一个是中二思维，其实是一种与自己和解的智慧，与自己和解其实就是融会贯通，这也是对于中庸思想的一种实践。或许我们对于一些与自己无关的事情可以全面理解，接受各方的观点，可是一旦自身遭遇，就无法脱身出来了。正所谓当局者迷，旁观者清。如果我们对自己所遇的事情也能跳脱出来，那么就能真正使自己受到中庸思想的福惠，进而使自己能够真正的快乐。\n以上几个步骤是循序渐进的，逻辑上也是步步为营的。如果从更高的角度来看，这些步骤其实是从旧思想转化到新思想的一个方法。但新思想形成后又会成为旧思想，我们又该去感悟更新的思想。因此这些步骤其实不是一劳永逸的，而是应该形成一种习惯。这样看来，我介绍的方法不仅是一种如何拥有快乐人生的方法，也是一种方法论，是常态化的一种思维方式。\n那么，你无需认同我的这套理论。你所需要做的只是理解这套理论，然后自然会有两种评价，一是这是一种很有价值的理论，二是这是一种天真过时的理论。但无论是哪种，都是在理解之后才进行的评价，我也真心希望你能够理解，因为理解的前提是思考，你理解了我的理论，就说明已经进行了思考，而这才是我所想要传达的真正的基本方法。\n","date":"2025-07-18","externalUrl":null,"permalink":"/about/happy_life/","section":"About me","summary":"","title":"如何拥有快乐人生？","type":"about"},{"content":" 简单理解 VGGT（Visual Geometry Grounded Transformer） 0. 前言 # Visual Geometry Grounded Transformer（VGGT）是 CVPR 2025 收录的一篇论文，论文链接如下：《VGGT: Visual Geometry Grounded Transformer》\n传统的 3D 场景重建依赖于经典的视觉几何方法（Visual Geometry），如：光束法平差（Bundle Adjustment，BA）和运动恢复结构（Structure from Motion，SfM）。这些方法通常存在以下问题：涉及复杂的迭代优化过程，计算量大且耗时；依赖后处理步骤，限制了整体效率。\n而 VGGT 旨在彻底放弃对几何后处理的依赖，实现真正的端到端重建，实现高效、简便且准确的 3D 重建网络架构。已经有一些研究在这个方向做出尝试，例如：DUSt3R 和 MASt3R，但它们局限于处理两帧图像，且仍需要一定的后处理融合操作来完成更多图像的重建。\nVGGT 是一个大型前馈式神经网络，仅需一次前向传播，就能在数秒内将输入的单张或多张图像一次性预测出场景的全部 3D 关键属性（例如相机内外参数、深度图、点图、3D点轨迹等）。\n与此同时，VGGT 架构十分简洁，它基于一个 Transformer 模型，没有引入特别的 3D 或几何先验，而是借助大规模带有 3D 标注的公开数据集进行训练。它使用一个共享的骨干网络同时预测相关的 3D 属性，这些属性相互关联，增强了网络对几何的整体理解，从而提升了预测的准确性。但在推理时，模型又可以从独立预测的深度图和相机参数中推导出点图，这样得到的点图比直接预测的点图更加准确，这又体现其架构的灵活性。\nVGGT 不仅可以完成从 2D 到 3D 的高质量几何理解，在作为特征骨干网络时，也可能大幅提升点跟踪和新视角合成等下游任务的表现。\n1. 整体架构 # VGGT 的整体架构如图所示：\n1. 输入 # 最左侧是模型的输入，图中显示的是从不同视角拍摄的同一场景的一组图像序列（RGB即可），每张图像首先被分割为若干图像 patch，再使用 DINO（a form of self-DIstillation with NO labels） 提取其 token。\nDINO 是一个自监督学习模型，这里的作用是将输入图像分块（patchify），转化为一系列的 token，每个 token 可以理解为是每一个小 patch 的特征表述。经过处理后，每张图片都变成了一组特征向量。\n接下来需要拼接相机 token，这个相机 token（camera token）是一个可学习的参数，它的作用是在模型训练过程中不断学习该图像对应的相机位姿信息。\n在图中没有显示的是，输入时还额外加入了 4 个寄存器 token（register token），目的是捕捉图像中未被充分利用的信息，更好处理信息稀疏的区域，提升特征提取效果。在结束训练后丢弃即可，使用原 token 进行预测。\n2. 网络与交替注意力机制（Alternating Attention） # 交替注意力是该网络的核心创新之一：交替注意力包括帧内注意力（Frame Attention）和全局注意力（Global Attention），并使得两个交替进行。\n帧内注意力关注各帧内部的 token，而全局注意力联合关注所有帧的 token，这种设计既保留了局部图像结构，又能统一理解跨视角几何关系。网络总计采用了 24 层注意力模块，但并未采用交叉注意力层，而是全部为自注意力层。\n具体过程中，首先所有的 token 会被全局注意力一起处理，模型会计算所有特征之间的关联性。这使得模型能够建立跨图像的全局理解，由于图像是来自不同视角的同一场景，因此模型会学习场景的三维空间关系。接着，模型进行帧内注意力计算，模型专注于理解单张图像内部的细节和结构。通过进行若干次交替循环，图像 token 和相机 token 都能包含丰富的场景几何信息。\n3. 输出预测 # 经过主体网络后，相机 token 会被分离出来，送入专门的相机头网络（camera head），这个网络负责预测并输出每张输入图像对应的相机内参（intrinsic）和外参（extrinsic），如相机的焦距、畸变参数、位置姿态等。\n剩下的图像 token 被送入 DPT（Dense Prediction Transformer）模块中，DPT 是一个用于进行密集预测的 Transformer 模型，图像 token 经过 DPT 层后转变为密集特征图。将该密集特征图通过一个 3×3 的卷积层映射到对应的深度图（Depth maps）和点云图（Point maps）；同时，将密集特征图序列输入到跟踪头中，即可进行点跟踪（Point track）：给定某图像的一个查询点，则可以预测所有图像中与之对应的点的集合。\n这种设计思想是十分巧妙的：模型的多个输出（相机参数、深度图、点云图等）在几何上是相关的，例如：理论上可以通过点图反向求解出相机参数，也可以通过点图和相机参数推导出深度图。这种预测的冗余称为过完备预测（Over-complete Predictions），但是在训练时显式地让模型同时预测可以显著提升性能，推理时也能得到更好的结果（因为预测结果之间相互辅助）。\n2. 训练过程 # 1. 损失函数设计 # 整个网络采用多任务损失联合训练： $$ L=L_ {camera}+L_ {depth}+L_ {pmap}+\\lambda L_ {track} $$\n相机损失：使用 Huber Loss 衡量预测相机参数与真实值差异 深度图损失与点图损失：引入 aleatoric 不确定性权重，并加入梯度损失 点追踪损失：计算预测点与真实点在每帧图像上的欧式距离 可见性损失（公式中未显式表达）：是否出现在某帧图像中 2. 数据集与网络架构 # 数据集包括：Co3Dv2、BlendMVS、DL3DV、MegaDepth、Kubric、WildRGB、ScanNet、HyperSim、Mapillary、Habitat、Replica、MVS-Synth、PointOdyssey、Virtual KITTI、Aria Synthetic Environments、Aria Digital Twin 以及一个类似于 Objaverse 的艺术家创建的合成数据集。这些数据集涵盖了各种领域，包括室内和室外环境，并包含合成和真实场景。这些数据集的 3D 注释来自多种来源，例如直接传感器捕获、合成引擎或 SfM 技术。\n网络架构：使用 24 层全局注意力和帧内注意力。模型总共包含约 12 亿参数。\n输入帧、深度图和点云图的最大尺寸调整为 518 像素；训练在 64 个 A100 GPU 上运行，耗时 9 天；总共训练 16 万步，采用 AdamW 优化器；利用 bfloat16 精度和梯度检查点来提高 GPU 内存和计算效率。\n3. 实验部分 # 这里暂时没有进行复现，如要复现可以参考此文章：论文学习及实验笔记之——《VGGT: Visual Geometry Grounded Transformer》 – Kwan Wai-Pang – Personal Blog\n原论文的代码和模型在此：FacebookResearch/VGGT\n4. 参考文献 # 1.论文解读：【CVPR2025最佳论文】VGGT: Visual Geometry Grounded Transformer-CSDN博客\n2.CVPR 2025最佳论文详解｜VGGT：纯前馈Transformer架构，3D几何感知「大一统」模型来了！ - 知乎\n3.【论文笔记】VGGT-从2D感知3D：pose估计+稠密重建+点跟踪-CSDN博客\n","date":"2025-07-17","externalUrl":null,"permalink":"/docs/vggt/","section":"Notes","summary":"","title":"简单理解 VGGT（Visual Geometry Grounded Transformer）","type":"docs"},{"content":" 具身智能中的语义感知（Semantic-aware）——占用表示（Occupancy）与鸟瞰表示（BEV） 0. 前言 # 具身智能中，语义感知是个十分重要的问题。所谓语义感知，简单来说就是通过获取 RGBD 图像、视频、点云等等信息，对环境中物体进行识别、分析以及重构成机器人和网络能够识别的信息。\n由于我们只能获取诸如图片和传感器等数据，想要还原 3D 场景就需要建模，这种建模的方式就是占用表示（Occupancy）。在占用表示出现前，比较流行的方式是鸟瞰表示（Bird-Eye-View，BEV），这种方法将 3D 场景压缩成 2D，通过增加 2D 的语义来表示 3D 信息。\n1. 3D场景的表示 # 以视觉为中心的系统具有经济优势，但它们无法捕捉任意形状的障碍物，因此如何高效、有效地表达 3D 场景就变得十分重要。\n1. 基于体素的方法： # 为每个体素分配一个特征向量，以获得密集的表示来描述 3D 场景的细粒度结构。考虑到3D空间的稀疏性，它们采用从粗到细的上采样或体素滤波来提高效率。\n2. 鸟瞰图（Bird’s Eye View，BEV）方法： # 由于大多数体素空间未被占用，即 3D 稀疏，因此基于 BEV 的方法通过压缩高度维度作为场景表示，但它们通常需要后处理，如多尺度融合，以捕捉更精细的细节。\nBEV 算法是一种将来自不同传感器（摄像头、激光雷达、毫米波雷达等）的数据转换为机器人（主要是车辆）正上方俯瞰视角网格的统一表示方法。它使得机器人有一个直观且多视角空间一致的环境感知，如图：\nBEV 方法的一般步骤为： 特征提取：使用 2D/3D Backbone 网络对多视角图像或点云进行特征提取 视角转换：2D 转 3D 再转 BEV 视角、体素拍平（Voxel Splat）等 特征编码：在 BEV 空间中对特征进一步编码（多模态融合、时序融合等），来获取更丰富的 3D 特征表示 下游任务：将编码后的 BEV 特征送入特定的检测头进行目标检测，或送入其他任务头执行其他任务 BEV 方法根据视角转换方式分为两类：LLS（Lift, Splat, Shoot）方式和 Transformer 方式。\nLLS 方式是自底向上的方法，代表算法有 BEVDet、BEVDepth 等。核心是：Lift——对各相机的图像显式地估计图像平面下采样后特征点的深度分布，得到包含图像特征的视锥（点云）；Splat——结合相机内外参把所有相机的视锥（点云）分配到BEV网格中，对每个栅格中的多个视锥点进行 sum-pooling 计算，形成BEV特征图；Shoot——用 task head 处理 BEV 特征图，输出感知结果。 Transformer 方式是自顶向下的方法，代表算法有 BEVFormer 等。核心是：先预定义待生成的 BEV 特征图，利用 Transformer 全局感知能力在多个视角图像的特征中多次查询相应信息，并把信息融合更新到BEV特征图中。 BEV 表示方法有一定的局限性：2D 特征表示缺少高度信息；未知物体可能无法识别。\n3. 三视图（Tri-Perspective View，TPV）方法： # TPVFormer 将 BEV 推广到两个额外的平面，并与 TPV 实现了更好的性能-复杂性权衡。\n然而，上述三种方法都是基于网格的方法，不可避免的由于空网格的冗余而具有稀疏性，从而导致下游任务更加复杂；同时，这些方法构建场景动力学也更困难，因为在三维世界中移动的是物体而不是网格。于是，3D Occupancy 应运而生。 2. 3D 数据的占用表示（3D Occupancy） # 具身智能的作用环境是三维现实世界，因此数据都是 3D 数据，光靠二维的图像是无法表示完整的三维环境的，这里记录几个常见的 3D 数据表示方法。\n1. 点云（Point clouds） # 如图(a)所示，物体被表示为一系列的坐标点，这些坐标点的集合就是点云。可以想象的到，点云表示法对物体的精细程度比较高，但计算量会很大。\n2. 体素网格（Voxel grids） # 如图(b)所示，体素就是 3D 空间的像素，是量化的、大小固定的点云。每个单元都是固定大小和离散坐标。这里的每个单元可以理解为 Minecraft 中的方块，有固定的大小（不一定是立方体）。根据细粒度的不同，能够表示物体的精细程度也不同。\n体素网格也可以说是三维空间的一种占用网格（Occupancy Grid），占用网格就是如果一个网格中存在点云，那么就将其设为占用（1），否则就是非占用（0），最后形成一个三维矩阵的形式。\n体素网格一般来说是固定分辨率的，与之对应的可变分辨率的网格叫八叉树地图（Octomap），如图所示：\n3. 多边形网格（Polygon meshes） # 如图(c)所示，物体被类似建模一般的多边形包裹住轮廓，这些多边形的集合就是多边形网格（Mesh）。\n4. 多视图表示（Multi-view representations） # 如图(d)所示，多视图表示是从不同模拟视点渲染的 2D 图像集合。\n3. 高斯泼溅（Gaussian Splatting，GS） # 高斯泼溅方法主要是在三维空间中建立三维高斯函数，将物体进行表示，之后再用光栅化技术，将其投影到二维平面上渲染。\n3DGS 的原论文为《3D Gaussian Splatting for Real-Time Radiance Field Rendering》\n0. 3D 表示 # 想要表示一个三维空间中的物体，我们能想到最直接的方法就是将其形状直接描述出来，例如用一些平面将其包围起来。而最简单的建模方式就是使用空间三角形来构建（Mesh），如图：\n但我们希望用立体的元素来表示三维物体，椭球就是一个很好的元素。但如果只使用实椭球来表示，有许多形状是不好表示的。因此考虑将椭球虚化，变成一种概率模型，从而将三维空间中的物体用概率表示，如图可知，椭球的交界处可以形成各种形状：\n因此，椭球形的 3D 高斯分布就被用来构建这种模型。\n1. 3D Gaussian 构建 # 用 3D 高斯分布构建基础的元素有四个属性：中心位置（\\(\\mu\\)）、不透明度（\\(\\alpha\\)）、三维协方差矩阵（\\(\\Sigma\\)）、颜色（\\(c\\)）。这种分布是可微的，因此在神经网络中是可学习的。\n2. Splatting 渲染 # Splatting 又叫抛雪球法，意思是将一个雪球（高斯球）砸到一个平面上，雪球散开后，在撞击中心的雪量最大，而离撞击中心越远的位置雪量越少，可以理解为二维高斯的密度函数。而把椭球投影到平面后得到的 2D 图形，就是 Splatting 渲染。\n3. 3DGS 流程 # 3DGS 的目标是实现高质量的实时新视角合成（Real-time Novel View Synthesis）。\n首先，输入为一组多视角的静态彩色图片：\n通过 SfM（Structure from Motion） 技术计算相机参数并重建稀疏点云，如图所示：\n将点云的位置作为 3D 高斯的初始位置，生成一系列 3D 高斯；之后使用 GS 方法将 3D 高斯光栅化投影到 2D 平面。得到的投影图片与原输入图片投入到最小化损失函数中训练，训练后的结果如图：\n训练好后，输入静态多视角图片后，由于能够构建整个 3D 高斯重建表示，因此调整投影平面角度，即可渲染从未被输入过的拍摄视角的图像，并且能够实时进行光栅化投影渲染。视频演示可以访问 3DGS 官网 观看。\n4. DrivingGaussian # 在自动驾驶中，处理的数据都是动态的，3DGS 对于静态环境的处理效果不错，但对于自动驾驶的动态场景就有些不足。DrivingGaussian 并未采用 SfM 方法来初始化高斯，而是借助 LiDAR 获取场景的完整点云，目标是使用激光雷达图像多模态数据最小化多相机配准误差，并获得准确的点位置和几何先验。\n原论文为：《DrivingGaussian: Composite Gaussian Splatting for Surrounding Dynamic Autonomous Driving Scenes》\n由于车辆行驶时，周围环境会产生时间上的变化，有重叠的场景，也有新增的场景，同时相机视角也会变化，近大远小等现象可能会导致尺度混乱，产生伪影和模糊。DrivingGaussian 通过引入增量静态 3D 高斯（Incremental Static 3D Gaussians）来增强 3DGS，如图所示：\n首先将静态场景均匀划分成 N 个区块（bin），这些区块按时间顺序排列，每个区块都是一个或多个时间步的多视角图像。对于第一个区块的场景，使用 LiDAR 先验初始化高斯；对于随后的区块，我们使用前一个区块的高斯作为位置先验，将重叠区域进行对齐；不断重复，从而构建一个完整的高斯。\n然而，除了基本静态的环境，还有高速动态变化的小型目标，例如车辆、行人等。因此，DrivingGaussian 引入了复合动态高斯（Composite Dynamic Gaussian Graph），可以在大规模和长时序的驾驶场景中构建多个动态目标。\n首先从静态背景中分解动态前景目标，使用数据集提供的边界框来构建动态高斯图，通过目标 ID 和出现时间戳来识别。\n最后，将动态目标和静态背景相结合，根据边界框的位置和方向，按时间顺序将每个节点的高斯分布连接到静态高斯场中。\n5. GaussianFormer # GaussianFormer 使用一组 3D 语义高斯来稀疏地描述 3D 场景，每个高斯表示一个灵活的感兴趣区域，由均值、协方差及其语义类别组成。GaussianFormer 的目的简单来说就是，通过输入多视角图像（如自动驾驶车辆的环视摄像头或单目序列），构建一个包含物体精确位置和语义信息的 3D 环境表示。\n原论文为：《GaussianFormer: Scene as Gaussians for Vision-Based 3D Semantic Occupancy Prediction》\n首先输入多视角图像，将其用 SfM 方法得到点云，并设为高斯的位置，随机初始化高斯的各个属性（包含语义，语义就是 3DGS 中的颜色）和高斯查询向量，通过体素网格将其分割成一个一个的体素块，接着进行稀疏3D卷积，更新高斯查询向量。\n之后对每个高斯生成 3D 参考点，反映高斯形状，并投影到多视角图像上。通过多尺度特征提取和交叉注意力机制，对查询向量进行更新，迭代细化 3D 高斯的属性。\n最后，使用 3DGS 方法实现高斯到体素的转化，通过聚合相邻的高斯生成特定位置的语义占用，最终可以预测各个位置的 3D 语义占用。\n6. NeRF（Neural Radiance Fields） # NeRF 叫做神经辐射场，简单来说就是用一个多层感知机（MLP）去隐式的学习一个静态 3D 场景，实现复杂场景的新视角合成。\n这是一个比较早的方法，因此网络结构比较简单，功能也比较单一，每次只能训练一个 3D 场景，不同场景网络是不通用的。\n原论文为：《NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis》\n1. 总体框架 # 如图，NeRF 方法的核心就是 MLP 网络，即 \\(F_ \\Theta\\) 。它的输入是相机位置和方向 \\((x,y,z,\\theta,\\phi)\\)；而输出为对应像素点的颜色和密度 \\((R,G,B,\\sigma)\\)。\n在训练过程中，每个相机位置和方向对应一条射线，这条射线穿过一个 2D 像素点并在 3D 环境中做多个采样，将这些采样进行某种加权积分来拟合这个 2D 像素点，最终即可通过多视角的图像还原 3D 场景。\n2. 体素渲染算法 # 体素密度 \\(\\sigma(x)\\) 可以理解为是一条穿过空间的射线在 \\(x\\) 处被终止的概率，即在 \\(x\\) 处被阻碍，如图中红线所示：\n而将此密度函数积分，就可以得到该体素射线的颜色。\n在连续的辐射场中，针对任意视角进行渲染，就需要对穿过目标虚拟相机的每个像素的射线求取上述颜色积分。从而得到每个像素的颜色，再渲染出该视角下的完整的成像图片。\n实际应用中，难以获取连续的密度函数，因此对该函数进行采样，将积分区域均匀分份，在每个小区域内随机采样。将连续的积分问题变成离散的求和问题，最后加权求和即可，如上图中左图所示。\nNeRF 中，对该方法又进一步改进。由于大量对渲染没有贡献的区域（如空区域和被遮挡区域）仍要采样计算，会浪费计算资源，因此将均匀采样变为在可见区域获取更多的采样点，如上图中右图所示。\n3. NeRF 网络架构 # 如图，MLP 的网络架构很简单，前期输入为相机位置，后期再输入相机方向，分阶段的训练；中间部分为了防止梯度爆炸或消失，加入了残差结构。 由于 MLP 难以学习到高频信息（参数少但信息多），若直接将位置和视角作为输入，渲染分辨率低，因此使用了位置编码，将输入的采样映射到位置编码中（参数多，每个参数携带的信息降低），即可有效学习。\n对于相同的相机位置，不同相机方向，密度值是相同的；而相同的相机方向，不同的相机位置，密度值是不同的；因此可以知道，密度仅与相机位置有关。所以在训练时，在输入相机方向前就输出密度值，避免相机方向的干扰，提升学习效果。\n4. 实验 # 代码和实验部分可以参考：yenchenlin/nerf-pytorch: A PyTorch implementation of NeRF\n7. 参考文献 # 1.什么是体素(Voxel)? - 知乎\n2.3D Gaussian杀入Occ！GaussianFormer：突破Occ瓶颈，显存开销直降五倍（清华\u0026amp;鉴智）\u0026hellip;-CSDN博客\n3.论小白对GaussianFormer的看法（未出code版） - 知乎\n4.一文带你入门 3D Gaussian Splatting - 知乎\n5.3D Gaussian Splatting简明教程 - 知乎\n6.数据闭环！DrivingGaussian：逼真环视数据，驾驶场景重建SOTA - 知乎\n7.3D占用预测（Occupancy Prediction）算法学习_3d occupancy-CSDN博客\n8.Vision-RADAR fusion for Robotics BEV Detections: A Survey\n9.一文读懂BEV自底向上方法：LSS 和 BEVDepth - 知乎\n10.【三维重建】NeRF原理+代码讲解_nerf三维重建-CSDN博客\n11.十分钟带你快速入门NeRF原理_哔哩哔哩_bilibili\n","date":"2025-07-15","externalUrl":null,"permalink":"/docs/semantic_aware/","section":"Notes","summary":"","title":"具身智能中的语义感知（Semantic-aware）——占用表示与鸟瞰表示","type":"docs"},{"content":"","date":"2025-07-13","externalUrl":null,"permalink":"/categories/blog/","section":"Categories","summary":"","title":"Blog","type":"categories"},{"content":" 博客主题的进阶玩法——以 Blowfish 为例 前言 # 建立博客快大半年了，有许多进阶的用法，也有一些经验，在这里做一些记录和补充。\n想知道如何建立博客的同学可以看这篇文章：\n如何用 Hugo 与 Github Pages 建立博客并设置主题 loading \u0026middot; loading Blog How 1. 如何写公式 # 在 Blowfish 的官网上存在公式编辑的教学，但有一些小的问题。Blowfish 用的是 Katex 而不是 Latex，Latex 公式是不能直接被无缝识别的，需要进行一些微调。\n首先，想要正确识别公式，需要先输入一条简码：{{ \u0026lt;katex\u0026gt; }}，如果输入后不显示在博客页面，则说明成功识别了。\n公式分为两种：一种是行内公式，一种是行间公式。\n行内公式需要用特殊的分隔符包括：\\\\( 和 \\\\)，一定是左面三个字符，右面三个字符，才能正确识别，例如：\\(\\alpha+\\beta=\\gamma\\)\n行间公式则要用 Latex 语法的分隔符包裹：$$，例如： $$ \\alpha+\\beta=\\gamma $$ 值得注意的是，有时代表下标的代码_会产生歧义，因此会产生类似不识别的乱码，这时可以在_的后面适当添加空格，或是根据乱码的显示情况加入空格分隔，就能够正确显示了。\n2. 如何联动其他文章 # 在文章中加入如下简码：{{ \u0026lt; article link=\u0026quot;/docs/blog_build/\u0026quot; \u0026gt;}} 就会产生文章前言中的效果，这里引号中的路径就是我们 content 文件夹中的路径（注意：左侧的{{ \u0026lt;是简码的特殊包含符，应该是没有空格的，这里不输入空格会报错没办法展示，在实际输入时不应该输入空格，应该只有 3 个字符）\n3. 如何令文字具有超链接效果 # 这点比较简单，首先保证链接是互联网中能够访问的网址，之后选择任意文字，将其用中括号包括，在后面接一个括号，括号中放入链接，即可使得该段文字能够跳转至该链接。例如：[示例文字](www.example.com)，就会产生 示例文字 这样的效果（括号中什么也不写也可以，这样跳转的结果就是本页面）。\n4. 如何插入图片 # 这个看起来比较简单，但实际上用 Markdown 自带的方式插入图片比较麻烦，因为不容易调整大小，而且图片的路径也需要修改。\n这里我们采用 HTML 渲染方式来表示图片，输入如下代码\n\u0026lt;div class=\u0026#34;flex flex-col items-center justify-center\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;./picture.png\u0026#34; width=\u0026#34;600\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; 第一行不需要改动，第二行 src 项就是图片路径，放在同文件夹下即可，width 项为图片的宽度，根据网页尺寸调整即可。\n5. 如何添加文章封面 # 文章封面添加十分简单，首先需要清楚文章都是保存在 content 文件夹中，content 文件夹中又可分为几个大类，在每个子类中可建立文件夹，文件夹名称即为该文档的链接子地址。\n文件夹中存在一个 index.md 文件，这就是博客内容的文件；这时可以在文件夹中放入一个 feature 开头的图片，这个图片就是作为封面的图片。\n","date":"2025-07-13","externalUrl":null,"permalink":"/docs/blog_build_2/","section":"Notes","summary":"","title":"博客主题的进阶玩法——以 Blowfish 为例","type":"docs"},{"content":"","date":"2025-07-13","externalUrl":null,"permalink":"/tags/experience/","section":"Tags","summary":"","title":"Experience","type":"tags"},{"content":"","date":"2025-07-13","externalUrl":null,"permalink":"/categories/game/","section":"Categories","summary":"","title":"Game","type":"categories"},{"content":" 如何上手 FPS 游戏——以 CS2 为例 前言 # 在游戏界中，FPS（First-person shooting），即第一人称射击游戏占据了非常大的比重，尤其是多人在线对抗的 FPS 游戏，例如使命召唤、战地、反恐精英等等，更是风靡全球。\n我的 FPS 经历已经有至少 10 年了，从原来的页游（生死狙击等），到后来的端游（穿越火线、逆战等），再到现在流行网游（守望先锋、CSGO、无畏契约等），一直在中轻度游玩。而守望先锋和CS2，我投入的时间比较长，因此本文以 CS2 为例，介绍一下 FPS 游戏应该如何上手，以及常见的入门曲线。\n现在我的 CS2 水平是完美 B+，玩了约 800 小时，如果你更年轻，或者更有天赋，肯定能效率更高。\n仅以此文献给我的 FPS 生涯。\n1. 外设 # 工欲善其事，必先利其器。首先你需要有一个鼠标，还得有个键盘，最好是机械键盘。\n灵敏度与 DPI\n这点主要与鼠标相关，灵敏度的设定没有什么强制规定，选择一个适合自己的就好。如果你桌面比较小，或是只喜欢手腕移动，可以灵敏度高一些；反之如果在大桌面上手臂移动，可以灵敏度低些。\n灵敏度 = 鼠标 DPI * 游戏灵敏度\n鼠标 DPI 一般在购买时会有标注，有的鼠标可以切换 DPI ，基本就是 400、800、1600、3200 这几个挡位；而游戏灵敏度就是在游戏设置界面中显示的数字。值得注意的是，说是高灵敏度，客观来说也不能太高，基本应控制在 800-1200 。图中的灵敏度计算为 800 * 1.25 = 1000，稳定的灵敏度可以无缝切换到不同游戏，保证一定的手感。\n键位设置\n这点主要与键盘和游戏相关，键位的设定也是见仁见智，但大体上是一致的。\nWASD负责前后左右的移动，CTRL键负责下蹲，Shift键负责静步或疾跑，空格负责跳跃，R键负责换弹，Q、E、F、T、G、C、V等一般负责常见的功能键（如技能、切枪、探头等），Tab键一般负责战绩面板，~ 键可以用来交流语音，12345等数字键可以用来快速切枪或切道具。\n机械键盘的好处是键程短，没有粘滞感，容易操作；尤其是急停等操作，机械和非机械差别非常明显。\n在有能力的情况下，尽量选择合适的显示器，公认的适合 FPS 的**尺寸**为 23-24 寸左右，但我自己的是 27 寸，也完全没问题；**刷新率**可以高一些，大概在120hz之上即可，我自己是180hz，和原来的60hz的显示器可以说有天壤之别；最后就是**分辨率**，FPS不要求太高分辨率，1080p即可，我自己是 2K，感觉差不太多。 2. 系统设置 # 首先你需要安装好驱动，打造一个能够顺利运行你想玩的游戏的系统环境，之后按照下面的方式将 提高指针精确性 关掉。\n`提高指针精确性` 的选项实际上就是计算一个加速度，不能保证你的鼠标移动和指针移动是对等的；关掉以后有助于增加肌肉记忆。 更多环境配置的技巧可以看这篇帖子：玩CS不会调机器？那你进来看看呢？ - 小黑盒 ，可以有选择的学习借鉴。\n3. 游戏设置 # 每个游戏都有自己的特殊设置，键位设置和鼠标灵敏度设置之前已经介绍过了，接下来主要介绍视频设置、音频设置、地图设置以及准星设置，此处以 CS2 为例。\n视频设置\n首先保证你的分辨率和刷新率与显示器对应，亮度和对比度不要太低，否则很难看清战场情况。CS2 中，许多人通过调成 4:3 比例来增强瞄准，有的人通过降低分辨率（720p）来增强瞄准，这点见仁见智，只要熟悉了自己的设置，都能熟能生巧，没必要降低自己的体验来追求提升。\n音频设置\nFPS 游戏中一个很重要的能力就是听声辩位，其实就是听到声音（如脚步声或枪声等）时，能够分辨出声音来源在哪个方位。这一点与耳机有关，但如果你的耳机不能更换，就需要调节音频设置，来确保你能够听声辩位，这一点可以在实战中进行调整。\n另外一个就是你的麦克风设置，除了需要设置触发按键，还需要进行触发阈值的设置，这点与你的环境有关，这点可以与你的朋友进行测试，也可以利用监听来测试，保证你的语音能够正确被人听清。因为 FPS 游戏中战场变幻莫测，及时的交流十分重要，如果只能打字就很有可能延误战机。\n地图设置\n这里的地图指的是左上角的小地图，也是雷达，它可以表示战场的情况，这是十分重要的，因为你不能只关注你的视野和队友的报点，队友和对手的信息会在小地图上实时显示，这对于你判断战场局势举足轻重。\n正因为如此，小地图的目的是宏观掌握战场全局，因此缩放比例要小一些，并且不要随着玩家旋转，这样你就能随时观察整个地图。\n准星设置\n准星是 FPS 游戏中必不可少的东西，由于是第一人称射击，你看到的东西就是你实际能互动的区域，而射击又需要有东西辅助瞄准，准星就是这样的功能，一般来说准星在屏幕中心，因此培养屏幕中心感也是 FPS 游戏中十分重要的能力。\n在新手阶段，准星应该设置的明显一些，如果透明度太高或太小，自己可能都找不到准星在哪；而在熟练以后，准星可以设置的寡淡一些，因为你已经具有一定的屏幕中心感，准星只起一个辅助作用。\n无论是哪种准星，都最好把准星扩散或后坐力等设置关掉，因为准星的目的是辅助瞄准，不是增加代入感的，准星如果乱跑，又怎样才能练习瞄准呢？\n4. 如何练枪 # 无需多言，射击游戏当然枪法才是硬道理，地图理解再好，什么也架不住，露头就被秒，也赢不了比赛，因此如何提升自己的枪法就尤为重要。\n首先，你需要了解自己的能力，例如反应能力、鼠标控制能力、左右手协调能力等。无论能力好坏，都有合适的方法练习。如果你的反应能力慢，那架枪就需要宽一些，给自己一定的反应时间。其他的也是同理。\n急停\n有些游戏中并不强调急停，但快速的停下还是比较重要的一个能力。你在移动中的瞄准肯定没有你静止时的瞄准好，因此尽量做小幅度的移动或者移动中快速停下，都能有助于瞄准。\n在 CS2 中，枪械弹道的扩散与移动速度关系非常大，因此急停就十分重要。急停的本质就是快速让自己的速度变成 0，而方法就是按一下移动反方向的按键。例如，你正在向左移动，此时按右方向键，你的速度就会由左向右变化，中间肯定会经过0，然而游戏中没有那么慢的过程，只要按一下反方向键，就会立刻变成0，此时继续按就会朝反方向移动。高手一般会进行小幅度移动（例如左右移动），在变向的一瞬间开枪，此时速度为0，开枪扩散最小，又让自己保持移动。\n值得注意的是，CS2 中的弹道扩散与速度的减小成一定比例，因此不是速度为0时才不会扩散，在速度极低时的扩散也极小。因此有时也可通过蹲着移动和大拉后下蹲来减小扩散。\n定位\n作为射击游戏，战场上情况变幻莫测，谁的反应更快就有可能胜利，因此更快的瞄准就是胜利的关键。敌人不会慢悠悠的等你瞄准好，因此看到人的瞬间就将准星瞄到他，以便后续的开枪，才有可能先击杀敌人。这就是定位。\n定位需要练习，通常是调整好鼠标灵敏度后，对于不同游戏有不同的练习方式。像守望先锋这种天上地下都有可能出现人的游戏，定位就需要上下左右都练习；而像 CS 这种垂直跨度不大的游戏，定位通常只需要左右移动准星。\n定位一般分为两步：首先快速拉动视角，使得敌人在你的准星附近；之后细微调整，使得你的准星精确定位到敌人身上。这两步是一气呵成的，练习时不用太过苛求一下子拉到头上，实战中可能还需要进行走位来辅助第二步的完成（AD瞄准）。\n跟枪\n在某些长TTK游戏里，我们没有办法见到人的瞬间就秒杀对方，因此需要进行跟枪，也就是在敌人移动时将准星跟随他。这看起来对鼠标控制和反应要求非常高，但实际上可以将这个过程分解为许多的定位第二步，当你的准星丢失目标后，能够快速的再跟踪回目标，这就够了。\n压枪\n大多数枪械都是自动或半自动的可以连发，而连发过程中由于后坐力就会产生弹道的扩散，但游戏中弹道基本不变，因此可以通过规律的移动准星来保证后续弹道能够命中目标，这就是压枪。\n压枪需要进行练习，但实战中往往不需要将全部子弹都压到一个点上，通常只压前几发即可，因为需要压枪的游戏一般都是短TTK游戏，几发子弹就足够清空敌人的血量。\n扫射转移（扫转）\n当你的定位和压枪都会了以后，就可以在扫射转移中检验练习的成果。扫射转移就是在你扫射的过程中准星从第一个人转移到第二个人身上，但射击不停。这就需要你清楚压枪的阶段和定位的准确。如果你有机会换位和重新开枪，或者你对自己的后续压枪并不自信，那么可以尝试二次定位，即你看到了第二个人，但你选择停火并移动，然后重新定位开火，过程和扫转类似，但时间上不如扫转快，也有被第二个人补掉的风险。\n5. 如何走路 # 新手肯定常常产生这样的疑惑？为什么看视频中的人操作那么流畅，自己的视角却一卡一卡的呢？这个问题的答案大概率就是走路。不同的游戏中对于走路的要求是不同的，但大体上是一致的。\n走路主要包含两个部分：对自己身位的控制和对地图的理解。\n以 CS2 为例，有人觉得高手就是不能走路瞄地，然而纵使是职业选手，也不是全程架着头线在走，但当他架好头线时一定会出人，实际上这就是走路的两个部分。\n身位控制\n无论是什么游戏，你一定有一个身体（?），而你的动作会使得你的身体做出相应的变化，例如你蹲下和你站起来不会是一个动作，你的身体也会有不同表现，蹲下时身体集中在下半区域，而站立时身体在上下均匀分布。\n当你视角在移动时，身体也会有变化。例如你视角瞄地，那么你的头就会前倾，从后面看头部就会变小，此时更难被爆头。拿着不同的枪或道具时的动作也是不同的，对方也可能因为你漏枪管等而注意到你。\n近大远小，这是一个视觉上的名词，而第一人称游戏恰恰显示的就是你的视野，因此就会出现这个问题。同样的一个墙角，你在近处看，它就会遮挡你大部分视野；你在远处看的话，只会遮挡小部分视野，这也会导致你还没看到对方，对方先看到你的情况。同样是这个原理，如果你从障碍物的近处拉出，对方视角中你的速度很快；但如果你从障碍物远处拉出，对方视角中你的速度就会比较慢，这也是在架枪时应考虑的问题。\n综上所述，好的身位控制就是尽量不把不必要的身位信息漏给敌人，在对枪或走路时，能够合理运用这些身位控制的技巧获取优势。\n地图理解\n每个游戏都有若干张地图，但每场比赛都是在一张地图上进行的，因此理解了这张地图就能更好的进行比赛。即使是战地、绝地求生这种超大型地图，也能分割为一个一个小型区域，每个区域都有一定的套路和技巧，占据优势位置就能更好的进行比赛。\n地图理解的第一步是要熟悉地图，地图的各个位置都了然于胸，结合小地图能够清楚各个位置的情况。在此基础上，需要了解一定的战术，这一步需要经验的积累，当你明白大致的战术时，对方能够走的路线就大致清楚了。例如，A大进人了之后，大概率B点就会往中路走，中路的人就会往A点走（因为知道A已经突破），这时如果把A大的人打退，那么大概率中路的人又会往B走，B的人可能会尝试突破（因为知道A大有重防）。\n当你知道哪里可能有人之后，就是结合预瞄和身位控制获取信息，同时减少信息的暴露（也就是让对方觉得你很神秘）。例如沙二静步摸A小，在中远时先架沙地，到中段时看B1，到A小近点在进行预瞄搜点，如果一直盯着A小直愣愣往前摸，很有可能被B1或沙地的人偷掉侧身。\n当你会走路了之后，你的视角也会变得流畅，每个时刻都有目的性，而不是等对方先做选择。该静步时就会静步，无需静步时就放脚步抓timing（全程静步通常就是地图理解不够）；每时每刻都能判断timing的抓取，地图理解好的人通常不会被抓timing，也很少被偷侧身或背身；同时根据敌人的位置，能够判断敌人的动向，基本上都是简单的加减法，如果敌人A大人多，那么及时rush B肯定是个不错的选择，对方认为你们全部rush B了，这时保留一个中路的支点又能抓一个回防的timing。\n预瞄\n顾名思义，预瞄就是预先进行瞄准，瞄的地方就是可能会有人架枪的位置。每个地图都有许多预瞄位，这些预瞄位就是经验总结的大概率会站人的地方。因此在进行预瞄时，基本都是提前做好动作，配合拉枪或道具来实现的。\n预瞄分为分段式预瞄和平滑式预瞄：分段式就是一段一段的露身位，一段一段的排；而平滑式就是随着身位的移动准星向反方向移动，滑过所有的预瞄位。但虚假的分段式预瞄其实是没有作用的，很多情况下该排的点没有排就急忙进行下一段预瞄，常常出现错timing的情况；此外，分段式预瞄的准星通常都在障碍物上，因此如果被抓timing，通常无法第一时间定位。但新手依然推荐分段式预瞄，因为一板一眼可操作性高，容易学习。\n在预瞄的时候，通常会有一步左右的移动，在 CS2 中，小幅度的移动是没有脚步声的，因此不要按着静步预瞄，而是要体会小幅度移动的分段式预瞄。\n拉枪（peek）与架枪\npeek是身位控制的实战体现，peek的原意就是对枪，而我们常说的peek就是小幅度晃动身位的对枪，也可以叫晃身。一般来说，拉枪分为大拉和蹲拉以及peek等，与其弄清楚它们的概念，不如直接理解它们的原理。拉枪就是在掩体后，经过一定的移动，拉出掩体，与对方对枪。\n而不同的拉枪本质区别就是速度不同，即使速度相同，在掩体近点拉出和远点拉出在敌人眼中的速度也是不同。拉枪时需要考虑近大远小，如果是低速出一个近点障碍，那么远点的敌人肯定先看到你，而高速出一个远点障碍又失去了近大远小的优势。而且盲目的拉枪是危险的，在不知道对方有几人架枪的情况下，放脚步拉枪只能暴露位置，这时可以先进行peek，小身位近点探头，可以观察对方的架点情况，也不会被对方直接秒掉，因为就露一下就缩回去了。\n比较常见的拉枪技巧是，先peek观察，也可以骗枪，当对方架住小身位时大拉；或者猜测对方可能宽架时，小身位蹭出去，也会出其不意，这点一般狙击枪用的比较多。\n架枪也是一样，如果对方是狙，通常大拉不了，因为狙击枪本身移速就慢，可以架小身位；如果对方是大拉选手，就架宽一些；这都是直架。更安全一些的方法是peek架枪，小身位晃身拿信息，当看到人之后再拉出。\n6. 战术 # CS2 是一个 5v5 的团队游戏，同时对局也具有马尔可夫性质，即本局经济与上局表现有关。战术主要包括三个方面：经济管理、道具辅助、团队配合。\nCS2 的游戏模式非常简单，地图上有几个区域（通常是A区、B区），可以安装炸弹。匪的任务就是安装炸弹并保证顺利爆炸；警的任务就是拆除炸弹或保证炸弹不被安放。在此基础上，双方进行博弈。每局游戏 2 分钟，其中有 10 秒准备时间，可以购买道具。匪下包要 4 秒，下包后大约 40 秒后爆炸，而警直接拆包需要 10 秒，用拆弹器拆包也要 4 秒。在下包后，原来的游戏时间直接变为下包后的 40 秒。\n经济管理\nCS2 的经济系统是比较有特色的，每个人的武器都差不多，没有数值优势，但经济系统限制了每回合所能购买的枪支和道具。因此在某些情况下，经济不足需要进行攒钱，这就是经济局（eco）。\nCS2 的武器是可以死亡后掉落的，也可以主动扔出，因此 eco 局也不一定会输，全起局也不一定赢。\n新手一定要注意经济管理，观察队友和对手的状态（起枪状态和剩余经济情况），分析对面本局的经济状况。如果队友全起，自己就尽量别 e，如果 2 个以上队友 eco，自己最好也不要起枪。每场比赛都是独立的，但经济和存活下来的人的装备是继承的。因此，在必定无法取得胜利的情况下，也可以避战保留经济，节约下一把的开销，这就是保枪。\n不同武器击杀所能获得的奖励是不同的，电击枪和大狙最少，其次是AK、A1、A4等长枪，奖励比较高的是冲锋枪，散弹枪的奖励更高，而刀的奖励是最高的，但实战中通常不会成功刀到别人。但是可以利用这个机制，起一把冲锋枪或喷子收割eco局的敌人，可以比长枪赚更多的钱。\n道具辅助\nCS2 的道具主要有四种，闪光弹，烟雾弹，手雷，燃烧弹，作用各不相同。至于诱饵弹，基本没什么作用；钳子基本上是守包点的人起比较好（因为死了可以掉在包点，造福队友）。\n各类道具五花八门，但道具的基本作用需要清楚。\n闪光弹的作用主要是用来清点，辅助突破，而不是示警或是暴露自己位置的。无脑丢闪只能暴露信息，起不到任何作用。（当然可以逆向思维假打，但不在新手范畴内）\n烟雾弹的作用主要是阻碍视野和灭火。烟雾弹扔的不好甚至可能延误本队的战机，而且一回合最多有 5 颗烟雾弹，不要随意丢，也最好不要带着烟无脑冲，落到敌人手里就能拖 20 秒。有烟的地方一定要架一下烟边，因为如果敌人混烟，大概率是从烟边出现，很少会从烟中间混出来。如果敌人知道你们有架烟的习惯，之后的回合就很少会混烟了。这样的话，即使你是单人守点，也可以用烟雾来拖延时间。不要随意混烟，除了暴露位置之外没什么用处，除非你很确定敌人的位置。\n手雷的作用是放血和炸烟，而且如果被雷炸了还会一段时间内听不见声音，可以利用这个扔雷大拉。\n燃烧弹的作用是限制走位，一些比较难清的点位可以用燃烧弹来排。而且燃烧弹的燃烧时间较长，残局时可以拖时间。\n值得注意的是，闪、雷、火都是有爆开时间的，一旦到了时间，无论是否落地，都会爆开；而烟只有落到地上速度为 0 时，才会爆开。\n道具应结合地图理解来学习，用好了事半功倍，没有配合再好的道具也是无用的，甚至还会暴露信息。\n团队配合\n团队配合是需要练习的，最重要的就是交流，哪怕不懂战术，打不了那么细的配合，打哪里是可以交流的，从哪走也是能交流的，直接 rush 还是慢打也是能交流的。总之，边打边学慢慢也能学会一些配合。\n交叉枪线：这个是一个十分简单的概念，但实战中想做好并不容易。交叉枪线就是指，在队友遇到敌人时，你可以帮他从另外一个角度攻击敌人；在敌人遇到队友时，总是同时被两个人攻击。事实上，这种情况也不容易做到，因为实战中很难多个人架同一个点位。\n补枪：实战中，补枪的情况往往更常见，一名队友遭遇了敌人，你能否及时赶到，抓住敌人的timing将其补掉。如果敌人干掉了你的队友并全身而退，那么你们就陷入了劣势；但若是你成功补掉，最差也还是均势；若你更加及时，赶在队友掉点之前将敌人补掉，那么你们就有了优势。\n指挥：有的人不喜欢当指挥，他认为自己伤害不是最高，人头数也不是最多，指挥别人能够服众吗？实际上这是莫须有的担心。当然，这里的指挥不是对细节的指挥，例如：你要站在xxx，用xxx枪，用xxx道具等等。指挥应该说的是宏观层面的战术分配。例如，你想这把打中路，你可以问有没有中路烟，有没有人控两边，能不能速提/慢打等；指挥需要经常看小地图，最好能够还原敌人的动向并经常报点。换防补防在低端局都是不存在的，指挥可以进行沟通，使得阵型稳固。\n7. 教学 # 玩游戏也需要不断的学习，FPS 更是需要学习，因为游戏本身不会变化，成长的只能是玩家。\n玩这类游戏尽量看视频或者动图类的教程，图片或文字类的不够直观。在了解了游戏的基本操作后，就可以不时看些职业选手的教学解说，体会职业选手的流畅感并模仿，加以时日，自己的操作也能比较流畅。\n这里推荐几个 CS2 相关的博主：都哥CSGO，阿祖CS2辅导员版，CS2仙鹤，摩羯CS，CSGO-DOUBLEup\n","date":"2025-07-13","externalUrl":null,"permalink":"/play/cs_tutor/","section":"Funny","summary":"","title":"如何上手 FPS 游戏——以 CS2 为例","type":"play"},{"content":"","date":"2025-07-11","externalUrl":null,"permalink":"/categories/robot/","section":"Categories","summary":"","title":"Robot","type":"categories"},{"content":"","date":"2025-07-11","externalUrl":null,"permalink":"/tags/vla/","section":"Tags","summary":"","title":"VLA","type":"tags"},{"content":" 简单理解 DP（Diffusion Policy） 0. 前言 # 随着具身智能的发展，各种 VLA 方法层出不穷，而 Diffusion Policy(DP) 就是其中一类方法。顾名思义，DP 就是应用 Diffusion 方法在机器人动作生成中的一种 Policy，在 2023 年《Diffusion Policy: Visuomotor Policy Learning via Action Diffusion》中提出。\n如果想了解 Diffusion Model，可以阅读这篇文章：\n简单理解扩散模型（Diffusion Model） loading \u0026middot; loading AI CV 如果想了解 VLA，可以阅读这篇文章：\n如图所示，在模仿学习中，大致有 3 种动作生成策略：显式策略（Explicit Policy）、隐式策略（Implicit Policy）、扩散策略（Diffusion Policy）\n显式策略：直接将观测映射到动作；隐式策略：基于观测和动作学习的能量函数进行优化；扩散策略：端到端，建模动作分布的梯度场。\n1. 多模态动作分布（Multimodal action distributions）问题 # 现实世界中，解决一个任务的方法可能不是唯一的，或许有不止一种较优解，用函数表示的话就具有多个峰，这就是多模态动作分布问题，也叫多峰性问题。\n前馈神经网络本质上是一个函数，对于给定输入，只能有一个输出。然而在某些情况下，一个输入可以有多种不同的输出，因此难以用普通的前馈神经网络训练。而引入了概率分布，就使得神经网络不再是单个输出的函数，而是可以有多个输出的函数，只是各个输出的概率不同，这就是使得结果变得更加灵活。\n显式策略将观测直接映射到动作，就是一个输入对应一个输出，容易陷入死循环。而 DP 可以表示任意的归一化分布，可以解决此问题，如图所示：要将 T 型物体推到指定位置，DP 的策略是两条路径，而其他的只倾向于一条或是不收敛。\n2. 高维空间中的闭环动作序列（Closed-loop action sequences）问题 # 在预测多模态动作时，人们倾向于离散预测，将连续值问题转换为分类问题，这样高维空间中动作预测的计算量就会很大。而且如果采用分类方法，每一步都需要预测下一步执行动作，而不是预测一个连续的动作序列，因此又会出现动作一致性问题。\n由于 DP 的自回归性质，它可以一次性生成一个动作序列；并且结合论文中引入的滚动时域控制（receding-horizon control），可以产生一条闭环实时的动作序列（类似与 MPC）。每次预测几个时刻的动作序列，但只执行第一步，来实现实时更新，如图所示：\n3. 训练稳定性（Training stability）问题 # 直接从目标分布中进行学习，避免了在非目标分布中进行负采样，因此使得 DP 的训练十分稳定。\n4. 核心算法及公式 # DP 之所以叫做 DP，就是因为它还是使用了 Diffusion 的核心算法，先回顾一下 DDPM 的核心公式：\n$$ \\mathbf{x}^{k-1}=\\alpha(\\mathbf{x}^k-\\gamma\\varepsilon_\\theta(\\mathbf{x}^k,k))+\\mathcal{N}(0,\\sigma^2I) $$\n$$ L=MSE(\\varepsilon^k,\\varepsilon_\\theta(\\mathbf{x}^0+\\varepsilon^k,k)) $$\n而 DP 只是将 DDPM 的输出从图像变成了机器人的动作，而且将观测 $O$ 作为条件加入到去噪过程中，即观测数据是条件分布而不是联合分布：\n$$ \\mathbf{A}^{k-1}_t=\\alpha(\\mathbf{A}^k_t-\\gamma\\varepsilon _\\theta(\\mathbf{O}_t,\\mathbf{A}^k_t,k))+\\mathcal{N}(0,\\sigma^2I) $$\n$$ L=MSE(\\varepsilon^k,\\varepsilon_\\theta(\\mathbf{O}_t,\\mathbf{A}^0_t+\\varepsilon^k,k)) $$\n结果如图所示：\n可以看到，输入的观测值有摄像机捕捉的图像，还有对于机器人位姿的观测；而输出的动作序列是由一个充满噪声的动作分布逐渐去噪成为一条清晰的轨迹。\n5. 网络架构 # 论文中设计了两种架构：基于 CNN 的架构和基于 Transformer 的架构，如图所示：\n两种架构都是将动作编码和观测值相结合，迭代 K 次训练梯度场。 6. 参考文献 # 1.最适合入门的diffusion policy - 上交IWIN-FINS实验室 - bilibili\n2.Diffusion Policy 论文精读：从Diffusion到Policy – Devon\u0026rsquo;s Blog\n3.Diffusion Policy—基于扩散模型的机器人动作生成策略 - 知乎\n","date":"2025-07-11","externalUrl":null,"permalink":"/docs/diffusion_policy/","section":"Notes","summary":"","title":"简单理解 DP（Diffusion Policy）","type":"docs"},{"content":"","date":"2025-07-10","externalUrl":null,"permalink":"/tags/cv/","section":"Tags","summary":"","title":"CV","type":"tags"},{"content":" 简单理解扩散模型（Diffusion Model） 0. 前言 # 现在用 AI 生成图像十分常用，最流行的一种就是 Stable Diffusion，而其中的 Diffusion 就是扩散模型（DM）。在 2020 年《Denoising Diffusion Probabilistic Models（DDPM）》中提出。\n扩散模型其实是一种特殊的变分自编码器（VAE），利用热力学的扩散思想，一个分布可以通过不断地添加噪声变成另一个分布。放到图像生成任务里，就是来自训练集的图像可以通过不断添加噪声变成符合标准正态分布的图像。\n如果你不清楚什么是 VAE，可以阅读这篇文章：\n与 VAE 的编码、解码过程类似的是，DM 也是分为两个过程，一个是正向过程，一个是逆向过程。正向过程是指，通过不断的添加噪声，将训练集的图像变为符合标准正态分布的图像；而逆向过程是，给出一个符合标准正态分布的图像，通过去噪还原回原图像。\n与 VAE 不同的是，DM 不再训练一个可学习的编码器，而是把编码过程固定成不断添加噪声的过程；而且 DM 不再把图像压缩成更短的向量，而是自始至终都对一个等大的图像做操作。解码器依然是一个可学习的神经网络，它的目的同样是实现编码的逆操作。\n1. 总体结构 # 如图，下方的过程即是 DM 的正向（Forward Process）和逆向（Reverse Process）的过程。\n正向过程：也称扩散过程，该过程将数据逐步转为纯噪声。由于每个状态只与前一个状态有关，因此可视为马尔可夫过程，正向过程也可以看作一条马尔可夫链。定义为：\n$$ q(x_t|x_{t-1})=\\mathcal{N}(x_t;\\sqrt{1-\\beta_t}x_{t-1},\\beta_tI) $$\n其中，\\(\\beta_t\\) 是预定义的噪声比。\n逆向过程：也称去噪过程，该过程将噪声逐步转为原数据。逆过程的目的是用神经网络 \\(p\\) 拟合 \\(q\\) 分布：\n$$ p_{\\theta}\\left( x_{t-1}|x_t \\right) =\\mathcal{N}\\left( x_{t-1};\\mu _{\\theta}\\left( x_t,t \\right) ,\\Sigma _{\\theta}\\left( x_t,t \\right) \\right) $$\n其中，\\(\\mu_\\theta\\) 和 \\(\\Sigma_\\theta\\) 为 \\(p\\) 的均值和协方差。\n2. 正向过程 # 设来自训练集的原始图像为 \\(\\mathbf{x}_0\\) ，经过加了 \\(T\\) 次噪声后， \\(\\mathbf{x}_T\\) 符合标准正态分布。这里的加噪不是直接在上一时刻的图像上添加噪声，而是从一个均值与上一时刻图像相关的正态分布中采样一个新图像：\n$$ \\mathbf{x}_ t\\sim\\mathcal{N}(\\mu_t(\\mathbf{x}_{t-1}),\\sigma^2_tI) $$\n可以看到，\\(t\\) 时刻的状态只与 \\(t-1\\) 时刻有关，因此属于马尔可夫过程。\n通过正态分布的性质以及公式推导（详情请看参考文献1），设定一系列常数 \\(\\beta_t\\) ，可以将上式简化为：\n$$ \\mathbf{x}_ t\\sim\\mathcal{N}(\\sqrt{1-\\beta_t}\\mathbf{x}_ {t-1},\\beta_tI) $$\n然而这个公式只能求 \\(\\mathbf{x}_ {t-1}\\) 到 \\(\\mathbf{x}_ t\\) ，如果想求 \\(\\mathbf{x}_{0}\\) 到 \\(\\mathbf{x}_t\\) ，需要引入 \\(\\alpha_t\\) 。\n设 \\(\\alpha_t=1-\\beta_t\\) ，\\(\\bar\\alpha_t=\\prod_ {i=1}^t\\alpha_i\\) ，则：\n$$ \\mathbf{x}_t=\\sqrt{\\bar{\\alpha}_t}\\mathbf{x}_0+\\sqrt{1-\\bar{\\alpha}_t}\\epsilon $$\n$$ \\frac{\\mathbf{x}_t-\\sqrt{\\bar{\\alpha}_t}\\mathbf{x}_0}{\\sqrt{1-\\bar{\\alpha}_t}}\\sim \\mathcal{N}(0,I) $$\n$$ q(x_t|x_{0})=\\mathcal{N}(x_t;\\sqrt{\\bar{\\alpha}_t}\\mathbf{x}_0,(1-\\bar{\\alpha}_t)I) $$\n3. 逆向过程 # 当 \\(\\beta_t\\) 足够小时，每一步加噪的逆过程也满足正态分布：\n$$ \\mathbf{x}_{t-1}\\sim \\mathcal{N}(\\tilde{\\mu}_t,\\tilde{\\beta}_tI) $$\n然而，我们无法求出 \\(\\tilde{\\mu}_t\\) 和 \\(\\tilde{\\beta}_t\\)，因此通过神经网络学习这两个参数来拟合该分布。同时，我们也无法直接计算所有数据的逆分布，但若给定 \\(\\mathbf{x}_0\\)，就可以用贝叶斯公式计算该分布：\n$$ q(\\mathbf{x}_ {t-1}|\\mathbf{x}_ t,\\mathbf{x}_ 0)=q(\\mathbf{x}_ t|\\mathbf{x}_ {t-1},\\mathbf{x}_ 0) \\frac{q(\\mathbf{x}_ {t-1}|\\mathbf{x}_ {0})}{q(\\mathbf{x}_ {t}|\\mathbf{x}_ {0})} $$\n其中，\\(q(\\mathbf{x}_ {t-1}|\\mathbf{x}_ t,\\mathbf{x}_ 0)\\) 是待求的分布，而 \\(q(\\mathbf{x}_ {t}|\\mathbf{x}_ {t-1},\\mathbf{x}_ 0)\\) 是正向过程的加噪操作，右侧分式的分子和分母也都可以通过正向过程求得，最终化简得到两个参数：\n$$ \\tilde{\\mu}_t=\\frac{1}{\\sqrt{\\alpha_t}}(\\mathbf{x}_t-\\frac{1-\\alpha_t}{\\sqrt{1-\\bar{\\alpha}_t}}\\epsilon_t) $$\n$$ \\epsilon_t=\\frac{\\mathbf{x}_t-\\sqrt{\\bar{\\alpha}_t}\\mathbf{x}_0}{\\sqrt{1-\\bar{\\alpha}_t}} $$\n$$ \\tilde{\\beta_t}=\\frac{1-\\bar{\\alpha}_{t-1}}{1-\\bar{\\alpha}_t}\\beta_t $$\n可以看到，\\(\\tilde{\\beta_t}\\) 是一个常量，因此神经网络在训练时仅需拟合 \\(\\tilde{\\mu}_ t\\) 即可。拟合时，\\(\\mathbf{x}_ t\\) 是已知的，因此只预测噪声 \\(\\epsilon_ \\theta(\\mathbf{x}_ t,t)\\) 即可，最终误差函数为：\n$$ L=||\\epsilon_t-\\epsilon_\\theta(\\mathbf{x}_t,t)||^2 $$\n4. 训练算法与采样算法 # 在实际训练中，论文采用训练算法和采样算法来训练 U-net 网络（其实可以是任意的神经网络），如图所示：\n训练算法中，先取一个 \\(\\mathbf{x}_ 0\\) ，在随机取一个时刻 \\(t\\) 训练，随机生成一个噪声 \\(\\epsilon\\) ，用于生成 \\(\\mathbf{x}_ t\\)。之后，将 \\(\\mathbf{x}_ t\\) 和 \\(t\\) 传给神经网络，预测一个随机噪声 \\(\\epsilon_ \\theta(\\mathbf{x}_ t,t)\\) ，通过设定的误差函数即可训练网络。\n而采样算法中，即可输入 \\(\\mathbf{x}_ T\\) ，逐步计算 \\(\\mathbf{x}_ {t-1}\\) ，最终得到 \\(\\mathbf{x}_ 0\\) 即为生成的图像。\n5. 参考文献 # 1.扩散模型(Diffusion Model)详解：直观理解、数学原理、PyTorch 实现 - 周弈帆\n2.详解Diffusion扩散模型：理论、架构与实现 - techlead_krischang - 博客园\n","date":"2025-07-10","externalUrl":null,"permalink":"/docs/diffusion_model/","section":"Notes","summary":"","title":"简单理解扩散模型（Diffusion Model）","type":"docs"},{"content":"","date":"2025-07-03","externalUrl":null,"permalink":"/tags/hdr/","section":"Tags","summary":"","title":"Hdr","type":"tags"},{"content":"","date":"2025-07-03","externalUrl":null,"permalink":"/categories/windows/","section":"Categories","summary":"","title":"Windows","type":"categories"},{"content":" 处于HDR状态的应用截图时过曝的处理方法 前言 # 前段时间拿到了人生第一台支持 HDR 的显示器，回来后欢欢喜喜赶快开启了 HDR 模式，很快便发现了问题。在 Windows 系统下开启全局 HDR 后，在某些应用截图时会出现过曝现象，如图所示：\n而原图是这样的：\n可以看到，HDR 使得应用截图更亮了，但本来就亮的部分就过曝了；不仅如此，使用各种截图工具（QQ、微信、Windows自带截图工具，Win+PrintScreen等）都会生成过曝的图片。\n解决办法 # 查询了一些解决办法，比较有效的有以下几种：\nWindows 自带截图工具中设置 HDR 选项 利用 Xbox Game Bar 的截图工具（默认快捷键为 Win+Alt+PrintScreen，默认保存在用户的videos文件夹中）得到 jxr 文件，再利用 HDR + WCG image viewer 将其转为 jpg 格式 （平替第二种方法）利用 Xbox Game Bar 的截图工具（默认快捷键为 Win+Alt+PrintScreen，默认保存在用户的videos文件夹中）得到 jxr 文件，直接用画图打开，保存即可，结果与方法二的转换结果相同 1. 截图工具设置法 # 这个方法最为简单，而且截图功能与原版截图方法相同。首先打开截图工具，找到右上角的设置，在其中找到 HDR屏幕截图颜色更正器 选项，开启即可。随后用截图工具截图就正常了。\n2. 利用 HDR + WCG image viewer 转换 jxr 文件 # 首先需要得到 jxr 文件，用英伟达的屏幕捕获（Alt+F1，但有些情况下不生效）或 Xbox Game Bar 的屏幕捕获（Win+Alt+PrintScreen）都可以得到。\n之后在微软商店中下载 HDR + WCG image viewer 软件，如图：\n打开软件后，点击左上角的 Open image，选择准备好的 jxr 文件，即可导入图片；或者直接右键图片，选择用 HDR + WCG image viewer 软件打开也可以。软件左侧会显示图片信息，这里可以调节图片亮度，选择合适的亮度后，点击 Export image to SDR 导出即可。\n3. 利用画图工具转换 jxr 文件 # 还是首先得到一个 jxr 文件，这里可以直接用图库打开，复制，粘贴到画图中，然后将图片另存为即可得到相同的效果。\n参考文献 # [求助]开hdr玩游戏截屏过曝处理方法(已解决+总结) NGA玩家社区\n","date":"2025-07-03","externalUrl":null,"permalink":"/docs/hdr_printscreen/","section":"Notes","summary":"","title":"处于HDR状态的应用截图时过曝的处理方法","type":"docs"},{"content":"","date":"2024-12-15","externalUrl":null,"permalink":"/tags/english/","section":"Tags","summary":"","title":"English","type":"tags"},{"content":"","date":"2024-12-15","externalUrl":null,"permalink":"/categories/language/","section":"Categories","summary":"","title":"Language","type":"categories"},{"content":" Larry 的英语学习真理之理论和方法 0.前言 # 我们对英语并不陌生，但由于从小就学，导致很少对其进行理性思考，也从不思考英语背后的思维逻辑。我们经常遇到生词就记，遇到词组就背，都是在学英语本身的知识，而忽略了全局视角。\n这里是 Larry 的英语学习真理 系列的理论和方法篇笔记，如果对 Larry 感兴趣可以去 BiliBili 搜索 Larry想做技术大佬 ，希望可以对重新审视英语有所帮助。\n1.前提 # 1.学习英语前必须对它真实的难度和学习曲线有清晰的认知 # 英语其实很难学，英语能不能学好与智商无关，跟毅力也无关，而是与成就感的获得有关。（其实不只是英语，只要是学习都满足这个规律）\n英语的词汇量很大，融合了许多其他语言（法语、希腊语等等）的词汇。英语母语的人的词汇量很大，通常能达到 1 万以上，而英语学习者通常达不到，这是很正常的。\n英语的语法体系并不简单，但经过学习可以掌握，而且非常重要，有兴趣可以看这篇文章：\nLarry 的英语学习真理：语法 loading \u0026middot; loading Language English 2.学习英语前要明确此次学习的目的 # 每次学习英语前，都需要明确此次的目的。如：为了通过考试，需要速成、临时抱佛脚；或是兴趣使然，不为了考试或是比赛，而是希望能够无障碍读原版书籍或是听懂美剧等。\n这是因为每种目的有不同的方法，如果方法和目的不匹配，只会事倍工半。\n3.学习英语前避免陷入迷茫和恐惧 # 如果你试图好好的学习过英语，一定接触过许多英语学习法，似乎有一些捷径或是妙招，但如果你基础不够，很容易就会越学越迷茫，到头来还是无法掌握学习法的妙处。因此，不如舍弃学习法，朴素的看待英语，本分的学习。\n不要试图模仿英语思维。只有水平到达一定程度，你才可能自然的使用英语思维，这种自然也只是因为方便，而并非高效。所谓的英语思维根本无法从根深蒂固的中式思维上建立，只能拙劣地模仿，而这种模仿通常有名无实。\n不要试图**“循序渐进”**，即不要“i+1”，而是“i+100”。i+1 的意思是说，你用的学习材料只能比你当前的水平难一点点。这个观点看起来十分正确，但对于英语来说基本无效。因为英语能否学下去与你能否获得成就感息息相关，而且难度高并不一定会影响成就感的获取。与自然科学不同，你选择难度过高，会导致与你的知识脱节，根本无法理解，更别提成就感；英语的难度高主要体现在词汇的罕见，句式的复杂，但本质的语法结构没变，不会出现知识脱节的情况。\n并非不能翻译。和英语思维类似，有的人觉得学英语应该记住单词的意象，而不是翻译成中文，这其实是英语思维的一种延伸。实际上，学英语只应该关注结果，只要我们的表达和理解都没问题，无论过程如何，都无所谓。只是在水平提高之后，有些时候我们自然地就不需要翻译了，比如 “hello” 这个词，谁也不会先翻译成“你好”，这是自然形成的。由于我们接触中文意象非常早且根深蒂固，翻译成中文可能理解地更快，重新建立英文与意象的连接反而很慢。\n2.方法 # 1.学英语需要获取成就感 # 学英语要想快乐且充满动力，一定要寻找成就感。\n以编程来举例，每种编程语言的每个初学者的第一个任务也是最简单的任务都是 print(\u0026quot;hello world\u0026quot;) ，当你按照教程一步一步敲代码并在屏幕上显示出 hello world 时，你会立刻充满成就感。这种成就感推动你继续学习更难的知识，而每当掌握了新知识，几乎都能迅速获得成就感，仿佛在玩游戏一般，奖励是即时的。但是当你学会了基础语法，需要去学习算法和数据结构等知识时，编程就变难了，不仅是因为它们本身难，成就感的获取也变少了。但当你终于做出个爬虫、终于做出个小项目、终于弄出个 app，成就感就又来了。\n然而，英语的成就感是十分难获取的，英语的学习曲线是十分平缓的。英语本身的成就感或许在于你能无障碍看美剧、看原版书籍、快速学会英文歌、能和外国人自在地聊天等，然而想做到这些，你的英语必须在比较高的水平，因此前面的学习阶段就变得十分痛苦。\n由于英语的成就感难以获取，在学习英语的道路上十分容易放弃，因此就需要短期内快速获得成就感。\n2.学英语需要短期内迅速提升，不能依赖于细水长流 # 想要短期内迅速获得成就感，以免中途放弃，就必须做一些挑战，也就是不能细水长流，不能循序渐进，而是应该妄图一口吃个胖子。即使最后没吃完，吃了一半也是很有成就感的。\n总之，学英语的重点就是不能耗费自己的精力，不能消磨自己的热情，而是应该趁着热情快速提升，从而获取成就感以补充新的热情。\n当然，对于意志力极其强大，或是对于英语本身始终保持热情的人，就可以忽略这一方法了。事实上，这样的人英语一定水平很高，不需要什么额外的方法去提高。\n3. “i+100” 就是短期内迅速提升所需要做的挑战 # 这里再解释一下 “i+100” 的含义，你的英语学习材料或你的短期目标，需要超过你的水平很多。\n人适应环境的能力是很强的，同时，人的惰性也是很强的。如果把人放到空调房，有吃有喝，多半会得过且过；同样的人，放到孤岛上一个月，依然活蹦乱跳，顽强生存。如果你想学会游泳，不妨直接跳到大海里，本能会让你学会；如果在游泳馆里学，旁边还有救生员，真到了大海里还会游吗？所以就有了这个理论，在我们学英语时，我们不能依靠“循序渐进”，不能给自己慢慢进步的时间，因为多半还没等进步，就已经放弃了。\ni+100 就是应该在真实的英语世界中学习，而不是跟着教材一点一点学。这里并不是否定教材的意义，如果你连基础的语法、从句、中学水平的词汇都不知道，那还是跟着教材先打基础。如果你已经打好了基础，却还是在一点一点挪步，那就很难再进步了。\n这里说的提高难度，也不是为了难而难，而是应该接触英语国家使用的真实的英语，例如原版书籍，英语新闻等。教材上面的英语或许有所删减，或许难度有所降低，为的是能够教学。但对于个人来说，想要吃肉，就必须激发自己的潜能，学会在森林中打猎，而不是等着别人喂加工好的饲料。\n4.目标决定手段，一步到位直击目标 # i+100 的具体执行是见仁见智的，你的目标不同，选择的难度和材料也应不同。这里的目标就是上文提到的明确此次学习的目的，这个目的必须具体，也必须单一，而且足够明确以获取成就感。值得注意的是，这个目标必须是阅读或写作相关的目标，而不能是口语或听力相关的，原因很简单，阅读和写作就是听力和口语的基础。\n例如，你的目标可以是 3 个月内看懂人工智能论文，即 3 个月后能够基本无障碍地阅读人工智能相关领域的英文论文；也可以是下次英语六级分数达到 550 分，且第一阶段提升的重点是阅读，其他随缘。\n如果你能定一个这样的目标，那么你就很有可能实现它，因为它足够具体，足够单一，一旦实现就能获得成就感。英语学习仿佛是一块钢板，钢板的这一边是荒芜，而另外一边才是美景。如果不定目标，就像拿一个小锤子去砸钢板，怎么砸都是无用的，只有日久年深，才可能把钢板砸断；而如果定了目标，就像用一个钻头去钻钢板，很容易就能钻断看到另一边的美景，当我们钻了几个孔之后，钢板也就断了。\n而光有目标还不够，目标的执行才重要。而执行方法也很简单，就是一步到位，直接挑战目标本身。\n如果你想看懂人工智能领域论文，那就直接去找相关论文开始读；如果想六级考高分，那就直接开始做六级卷子，不要试图绕路。\n5.直击目标的两大障碍 # 虽然我们有了足够的勇气去直面目标，但客观上我们依然步履维艰，原因只有两个：词汇和语法。\n我们在阅读时遇到障碍，最常见的情况是有生词，但这种情况比较容易克服，不认识就查字典呗。但如果遇到单词都认识却还是对句意模棱两可的情况，这就一定是语法的问题。验证也很简单，你可以把你看不懂的句子划分一下句子成分，如果都能正确划分，那就不会产生疑惑；一定有句子成分划分错误或不知道怎么划分，而这就是语法的问题。\n在执行 i+100 时，一定要先搞定语法，如果语法不达标，那就无法进行 i+100 。\n而词汇的问题其实不难克服，万事开头难。假设我们的目标是看懂人工智能某领域论文，那么在看第一篇时，我们肯定会遇到许多生词，查完字典后勉强认识。但在读第二篇的时候，就会发现有不少词都是与第一篇的生词重复的，这时查字典的量就减少了。随着我们读的越来越多，由于我们选择的目标十分单一和明确，因此这一领域的词汇重复率非常高，最终我们会达到这样的状态：虽然感觉词汇量好像没什么提升，但在这个领域中，我们掌握的词汇已经完全够用了。\n在这个过程中，我们会遇到两种生词，一种是专业领域词汇，掌握了这些生词在这个领域就够用了；另外一种则是通用词汇，掌握了这些生词在其他领域也可以用。值得注意的是，英文小说并不适合作为 i+100 的材料，因为它的重复率很低，两本小说之间并不会有太多重复的生词，这就会导致成就感减少。\n因此，在执行 i+100 时，第一步一定是最难走的，如果第一步走出来了，那么之后的路会越来越好走。\n而且，第一步中遇到的生词一定要记住，至少是短期内记住，这样才能使你接下来的路轻松，而且随着不断重复，你也会自然而然记住这些词。\n最后，一定要在该领域坚持一段时间，选择相同的题材，甚至是同一个作者、同一种文体等，这样可以积累成就感。\n6.听力和口语没有捷径 # 听力和口语没有捷径，即使拥有一个良好的英语自然语境，也只有小孩可以自然的学会口语和听力，成人是很难通过这样的方式提升的。而且，我们更需要的是正式的、严肃的口语，而不应该妄图从美剧、脱口秀等节目中学习口语。这类口语更像是餐后甜点，但前提是你已经有了正餐，如果你空着肚子大量摄取甜点，只会引起营养不良。\n听力和口语的基础是阅读和写作。阅读写作能力决定听说能力，听力水平决定口语水平。\n如果连听力稿都看不懂，又何谈听懂？因此，想要提升听力，必须先解决阅读。只有阅读水平达标，能够无障碍的看懂听力稿时，才应该去思考究竟是什么原因导致了看得懂却听不懂。口语也是如此，如果让你写一篇英文作文都错误百出，那又何谈地道的口语？\n当你阅读和写作水平达标之后，再去找擅长的领域中的听力。例如你已经基本上能无障碍阅读人工智能论文了，那么不妨去看人工智能领域的视频。当然，肯定有听不懂的地方，在听第二遍时，就要着重注意当时没听懂的地方，并分析原因。\n如果原因是词汇不认识，那无可厚非，可以归结为阅读能力不够；但如果能看懂字幕但听不出来，一定要仔细分析，但这种分析是见仁见智的，只能总结适合自己的原因。\n这里需要注意的是，在缺乏足够精听练习的情况下，泛听是没有意义的。如果压根听不懂还一直听，只是自欺欺人。\n总之，听力训练实际上是对“听”这个技术性问题的分析过程，而是否能“懂”取决于你的阅读能力。你的目的应该是听清楚他在说什么，如果给你一点时间，你能一字不差写下来。但是写下来之后是否明白什么意思，这并不包括在听力训练中。\n最后，口语其实是最没有提升需求的，提升方法无非就是多听，听的多自然说的像；训练方式就是口译，可以练习复述或是视译，重点是必须要录音，要听自己的问题，不断改进，这样才能有所提升。\n7.如何临时抱佛脚 # 这里的临时抱佛脚指的不是学英语，也就是说，如果你只是为了一个考试做准备，例如背单词、看文章、写作文等，这不是临时抱佛脚，只需要按照上面正常学习的 i+100 的方法做就可以。临时抱佛脚属于突击学习，时间不能太长也不能太短，最好是在距离考试 1-2 个月开始进行。\n临时抱佛脚的前提是语法要过关，无论怎么学习英语，语法都是最重要也是最基础的，语法必须要过关才能谈接下来的方法。\n临时抱佛脚的核心有两个：一个是背单词，一个是提升写作能力。之所以不考虑阅读或翻译等题目，是因为在短时间内无法提升，它考察的是英语的综合水平。\n背单词应该在考试前夕背，例如半个月或一个月，不能太早。目的就是短期内记住一定数量的单词，减少阅读中的生词障碍。\n而写作能力的基础是语法，之后需要做大量的回译练习。首先找到大量的考试范文，然后把这些范文用软件翻译成中文。在对原文有点印象但不多的时候，把中文翻译回英文。这要比直接背英文作文简单，因为有汉译提醒，而且对原文也有印象。翻译之后对照原文，分析自己的不足，当做了 15-20 份练习后，短期内针对该考试的作文水平一定有所提升。\n","date":"2024-12-15","externalUrl":null,"permalink":"/docs/larry_english2/","section":"Notes","summary":"","title":"Larry 的英语学习真理：理论和方法","type":"docs"},{"content":" 英语四六级的经验整理与工具分享 0.前言 # 英语四六级是我们每个大学生都需要经历的考试，许多学校甚至把英语四六级作为毕业的要求。如果你希望在求职或是升学时具有更多优势，那么英语四六级也是必不可少的一项。\n由于作者英语也不是很好，但在大一时就低分飘过了。这里仅分享一下个人对于英语四六级的理解和用到的工具，希望有所帮助。\n1.试外认知 # 首先需要有一些考试之外的认知，或许你是大一新生，或许你是大四老兵，无论如何，你需要了解一些相关的信息。\n大学英语教学几乎不会使你英语进步：大学英语对于理工科专业的学生更像是水课，虽然是必修，但是普遍不被重视。因此，不要妄想通过大学英语课来提升英语。 四六级考试越早越好：由于上一条，大一可能就是你英语水平的巅峰。因此，请重视大一时候的四六级考试，如果能考，赶快报名。 注意报名时间：要时刻注意学校通知和官网通知，不要错过报名时间，每年可以考两次，一般是 6 月和 12 月。口语可以不考，只考笔试即可。 四六级考试有听力，且一般为电台放音，因此需要自行购买听力耳机（能收到电台信号的耳机） 2.试内认知 # 在复习和刷题之前，我们首先要对考卷和考试有个认识。\n题型和分数分布 ：具体可以查看 官网题型 和 分数解释 。题型有 4 种（写作15%，听力35%，阅读35%，翻译15%），满分710分，可以看到写作和翻译一共只有30%。\n试卷结构 测试内容 测试题型 题目数量 分值比例 考试时间 写作 写作 短文写作 1 15% 30分钟 听力理解 长对话 单选题 8 8% 30分钟 听力篇章 单选题 7 7% 讲话/报道/讲座 单选题 10 20% 阅读理解 词汇理解 选词填空 10 5% 40分钟 长篇阅读 匹配 10 10% 仔细阅读 单选题 10 20% 翻译 汉译英 段落翻译 1 15% 30分钟 总计 57 100% 130分钟 一般来说，四六级分数达到 425 即可及格，而最终分数并不完全和卷面分相同，因此建议每项都拿到150分以上。\n开考前半小时入场，开考前 15 分钟放音可以调试耳机，开考后 10 分钟开始写作，写作 30 分钟后开始播放听力，听力 30 分钟后即收第一部分答题卡（写作和听力答题卡在听力播放结束后就收了，不会给时间填涂，一定要边听边涂）。这也要求我们必须先写作后听力，之后才能进行阅读和翻译，顺序不能自行调整。\n第一部分答题卡收完后，继续写第二部分的试题，经过 70 分钟后，收第二部分答题卡，结束考试。\n3.答题策略 # 因为离自己考完已经很久了，而且自己英语水平也不高，所以这里收录一些别人的经验。如果你完全没有四六级经验，可以选择性学习。\n1.作文： # 六级写作全部都是议论文，四级写作有应用文也有议论文。不用写题目，直接写正文即可。 审题很重要，题干中提到的内容一定要体现在文章中。内容本身并不是很重要，是否与题干有联系才重要。 作文结构要清晰，因此可以背一些起承转合的句式，用于构建逻辑架构。由于是议论文，一般都是有个话题。根据话题有几个观点进行阐述。可以分成三段：第一段引入话题，阐述该话题；第二段分别阐述这几个观点，观点内部拥有说理和举例；第三段进行总结，并提出几个实际建议或者结合现实的思考。 2.听力： # 听力的特点是题目也需要听，试卷上只有选项。但一般我们听到题目时很可能已经记不住前面的文章了，也有可能根本听不懂题目。所以不妨在听文章过程中就选答案，在听题目时预读下一道题的选项。 一般来说，选项中的词重复听到或是最后听到，就是答案。 在预读选项时，注意否定词、谓语动词和动词的宾语/表语。 当发现四个选项中有单词被读到了，就说明题目已经进行到这里了。 一般来说，听力中只会出现题目选项的原文或同义词，一般不会出现十分难理解的同义表达。 3.阅读： # 阅读 A（选词填空）：建议最后做，性价比低，可根据词性将备选词快速分类后再填。\n阅读 B（段落匹配）：先看完10个题目，看题意同时圈出关键词（人名地名、动词等），每个题目圈出2-3个关键词。从上往下扫描文章，出现关键词（原词，或同义替换，大多为原词），就直接选。答题时间大概为20分钟。\n阅读 C（阅读理解）：先快速看完 5 道题干，按顺序边读文章边做题，读一段做一题（因为题目都是按顺序出的），一般不会超过 3 个重复选项。而且一般不会出现相同词汇，基本是同义词或是同义表达。答题时间大概在30分钟左右。\n一般来说，题干可以和原文有大量重复，但是选项不会和原文大量重复（和原文大量重复的选项很可能是坑）\n4.翻译： # 翻译的题目是一段完整的话，通常十分难直译，参考答案也是十分高级的词汇和句式。但实际做题时，只要语法不出错，可以把一个复杂的句子写成几个简单句，用连词或从句连接即可。 英语翻译需要有英语特色：修饰后置（介词短语，插入语，同位语，从句等），非谓语动词（当汉语中出现多个动词时，翻译要转变为非谓语动词或使用连词），补充主语或主句（汉语可能会省略主语，翻译时需要补充主语或者使用从句等补充主句，或者也可以使用被动语态）。 翻译的句子即使简单也会给分，但是写错句子是不会给分的，因此时态、语态等需要重视。 4.备考工具 # 真题下载及答案：英语真题在线 ，这里拥有四六级、专四专八以及考研英语的近年试卷，无需登录，点击进去可以在线看，也可以右上角下载 pdf，右下角也可以查看答案，下方还有听力音频。感觉比较良心。 欧路词典：配合自定义词库使用，可自行学习 欧陆词典导入词典库 ，以及 English-dictionary 等。 Z-library：可以阅读英文原版书籍，可搭配 moon+ 阅读器 使用。 如果你拥有更长的备考时间，或是希望进行更基础的英语学习，欢迎阅读以下文章：\nLarry 的英语学习真理：语法 loading \u0026middot; loading Language English Larry 的英语学习真理：理论和方法 loading \u0026middot; loading Language English 5.参考文献 # 1.大学英语六级考试题型分值分配、时间分配、做题策略\n2.六级听力200+最强应试技巧+备考攻略\n3.六级仔细阅读高分攻略\n4.六级翻译最强攻略\n5.六级写作模板170+保姆教程！基础一般也能拿！\n","date":"2024-12-12","externalUrl":null,"permalink":"/docs/cet6_learn/","section":"Notes","summary":"","title":"英语四六级经验和工具","type":"docs"},{"content":" Larry 的英语学习真理之语法篇笔记 0.前言 # 我们已经学习了多年的英语，甚至从学前开始就接触英语，我们不断的学习这门语言，但仿佛根本学不完也学不透。明明语法就那么几个，明明句式就那么几套，明明词汇都认识，为什么就是读不懂句子、读不懂文章呢？\n很可能是只知其表，不知其里；只知其名，不知其实。我们不妨提纲挈领，将各类语法归宗明义，简单本质地理解英语句子和语法。英语语法的本质就是不同词性间的相互修饰关系。\n这里是 Larry 的英语学习真理 系列的 语法篇 笔记，如果对 Larry 感兴趣可以去 BiliBili 搜索 Larry想做技术大佬。\n1.词性 # 1.三大成分 # 名词性成分（red）：名词，名词性从句，不定式，动名词\n形容词性成分（yellow）：形容词，形容词性从句，不定式，分词，介词短语\n副词性成分（green）：副词，副词性成分，不定式，介词短语\n动词：谓语\n2.修饰关系 # 形容词修饰名词\n副词修饰形容词、动词、其他副词\n3.连词 # 三大成分互相修饰形成简单句，简单句通过连词变为复杂的从句结构\n4.介词 # 介词用法只有一种：介词＋名词性成分 = 介词短语\n介词短语可以是形容词或副词性成分\n形容词性成分的介词短语：一般是后置定语，修饰名词\n副词性成分的介词短语：修饰动词，形容词和副词性成分\n特殊情况：介词＋副词等构成介词短语\n2.简单句 # 1.主谓宾定状补 # 主语：名词性成分（句子的主体话题 or 动作的发出者）\n谓语：动词\n宾语：名词性成分（谓语动词的执行对象）\n定语：形容词性成分（修饰名词性成分）\n状语：副词性成分（修饰动词，形容词，其他副词性成分）\n补语：形容词 or 名词性成分（补充说明的额外成分）\n补语分为 宾语补语 和 主语补语：可理解为 A is B （系表结构）\n2.简单句的五种句型 # 主谓（SV）：不及物动词\n主系表（SVP）：系动词（=）\n主谓宾（SVO）：及物动词\n主谓双宾（SVOO）：及物动词（直接宾语通常是物品，间接宾语通常是人；可以用 for 或 to 改写）\n主谓宾补（SVOC）：及物动词（A is B；主补或宾补）\n3.连词 # 简单句＋连词 = 并列结构 or 主从结构\n疑问词的词性：\n3.从句 # 从句也是简单句，属于五种基本句型的一种，可以找出主谓宾定状补的成分\n独立句子变成从句的步骤：调语序（调整成陈述语序），加连词（陈述句用 that，一般疑问句用 whether，特殊疑问句用 原本的疑问词），把连词置于从句句首\n1.名词性从句 # 陈述句、一般疑问句、特殊疑问句 代替简单句中的名词性成分变成 主语从句、宾语从句、表语从句 之一 同位语：针对抽象名词的 名词性 解释说明（that 在同位语从句中不担当成分，而在定语从句中担当主语或宾语）\n形式主语：用 it 替换主语位置，将主语位置的从句放在句尾\n形式宾语：用 it 替换宾语位置，将宾语位置的从句放在句尾，且必须这么做\nthat 的省略：在不影响理解时可以省略\nwhether 和 if 的互换问题：表达 是否 的意思时，whether 比 if 更加通用，无脑 whether 即可（if 可能解释成 如果 造成歧义，带有 or not 的固定搭配只能用 whether，介词后也只能用 whether）\n2.形容词性从句 # 形容词性从句要修饰一个名词性成分，可有可无 关系词和先行词：关系词是从句中的连词，先行词是主句中的形容词性从句修饰的名词\n关系词的作用：重复指代先行词（且与先行词单复数，主格宾格等性质保持统一）；连词作用\n主语关系代词：who（某人），which（某人），that（某人或某物）；指代某人时，更常用 who，指代某物时，更常用 that\n宾语关系代词：who，whom，which，that；做形容词性从句中宾语时，这些关系代词可以省略（若从句较长，且宾语原位置离关系代词较远，则不要省略）\n介词宾语关系代词：who，whom，which，that；做介词后的宾语时，分为介词后置和介词前置；介词后置就是介词在从句中，介词后的宾语应为关系代词，介词前置是介词在主句中，介词后的宾语为关系代词（只有 介词＋whom 和 介词＋which）；注意，动词短语（如 look for）不能拆开将介词前置，因为如果拆开，look 和 look for 的含义不同\n状语关系副词：where（地点），when（时间），why（原因）；where 与 in which 等价（where 更常用）； when 与 on which 等价；why 与 for which 等价\n定语关系限定词：whose（人或物都可以），which；whose 与 of which 等价；which fact 可以作为关系词\n补语关系代词：which，that；关系词在句子中做补语\n限制性和非限制性：非限定性定语从句的判断：有逗号，关系词只能用 which，who，where，when（特殊情况可以用 that）；限制性是一种筛选，从千千万万个物品中特指一个，所以当专有名词做先行词，即只有一个的物品或人不能使用限制性定语从句；非限制性定语从句的先行词更加多样（可以是一个名词，也可以是一件事/一句话）\n3.副词性从句 # 时间状语从句：when（whenever），while，as，before，after，since，until，一\u0026hellip;就\u0026hellip;（as soon as，immediately，the moment/minute/second，no sooner\u0026hellip;than，hardly\u0026hellip;when\u0026hellip;，scarcely\u0026hellip;when\u0026hellip;）\nwhen：时间点或时间段（从句中的动词可以是短暂性，也可以是持续性）\nwhile：时间段（从句中动词只能是持续性）\nas：随着\u0026hellip;，当\u0026hellip;，一边\u0026hellip;一边；\nbefore，after：之前，之后\nsince：自从\nuntil：保持某种状态 until 某个时间点；主句持续性动词肯定式 or 主句短暂性动词否定式＋until＋时间点\nNot until＋时间点＋主句短暂性动词（倒装句）\nas soon as/immediately/the moment/the minute/the second：一 从句 就 主句\nno sooner\u0026hellip;than，hardly\u0026hellip;when\u0026hellip;，scarcely\u0026hellip;when\u0026hellip;：前句为从句（倒装），后句为主句\n地点状语从句：where（具体地点，抽象地点）\nwhere there is a will，there is a way.\n原因状语从句：because，for，as，since\nsince：既然\nbecause 的否定转移：not because 中的 not 要提前到主句；在语义通顺的情况下，主句中的否定表示 不是因为 的意思\n目的状语从句：so that，in order that，that，so\n结果状语从句：so\u0026hellip;that\u0026hellip;，such(\u0026hellip;可省略)that\u0026hellip;，so that（so 是副词，such是形容词）\n条件状语从句：if，unless，once，as long as，so far as，in case 等\n让步状语从句：though，although，even if，while，no matter＋疑问词（how） = 疑问词＋ever（however）（不能用 but，可以用 yet 或 still）；介词短语：despite，in spite of；as 引导的倒装句\n比较状语从句：as\u0026hellip;as 如同，好像，no more than，no less than，more than，less than；Mike is as A as B：Mike 既 A 又 B；\n4.非谓语动词 # 1.不定式（名词，形容词，副词） # 不定式有不同时态：一般时（谓语动词发生在不定式动作之前或同时），进行时（谓语动词发生时，不定式动作正在进行），完成时（不定式动作在谓语动词发生之前），完成进行时\n不定式有主动和被动：进行时 和 完成进行时 无被动\n使役动词和感官动词后续的不定式省略 to：have，make，let，watch 等\n插入语：to be frank，to be fair，to begin with，to conclude，to be honest，to tell the truth，so to speak，to say the least of\u0026hellip;\n逻辑主语和逻辑宾语：可以使用 for、with 或 of 结构，给不定式赋予逻辑主语或逻辑宾语，否则逻辑主语或宾语就是句子的主语或宾语；表语 of xxx 适用于可以写成 “ xxx is 表语 ” 形式的表语（例如：it\u0026rsquo;s wise of you to do sth. 表语是wise，可以写成 you are wise，所以可以用 of）\n2.动名词（名词） # It is no good/no use/a waste of time＋doing sth 做某事没用\nThere is no point/use/good (in) doing sth 做某事没意义，没必要\nThere is no doing sth 不可能做到某事\n动名词作宾语：admit，advise，avoid，consider，deny，like，dislike，enjoy，feel like，finish，forgive，give up，can\u0026rsquo;t help，imagine，involve，mention，mind，miss，permit，prohibit，resist，risk，suggest 等\nhave difficulty/trouble/problems/a hard time (in) doing sth 做某事遇到困难\ncan\u0026rsquo;t help/resist/keep from doing sth 情不自禁做某事\n逻辑主语：动名词前加物主代词（my，his，her，their，sb\u0026rsquo;s 等），所有格；逻辑宾语：动名词前加物主代词或宾语都可以，即所有格或宾格（his，him）；当逻辑主语太长，或是不定代词时（someone，somebody 等），用普通格即可\n时态和主被动：\n主动表被动：need，deserve，want，require，won\u0026rsquo;t bear；worth；past，beyond\n动名词和不定式的区别：动名词泛指所有人，强调一般时态或过去时态；不定式特征某个人（通常是主语），强调下一次的未来时态\n3.分词（形容词，副词） # 现在分词：主动的，正在进行的动作；主动的，一般性的动作\n过去分词：被动的，一般性的动作（及物动词）；主动的，一般性的动作（不及物动词，如 fallen leaves）\n逻辑主语需要合理，可以选择独立分词结构，即在分词前加一个逻辑主语（名词＋分词 或 with＋名词＋分词）\n固定结构（不必考虑逻辑主语）：generally speaking，strictly speaking，judging from，talking of，considering，granting\n分词作状语：条件，时间，原因，让步，结果（表达结果状语的分词要放到句末，而不能放句首，因为有可能产生歧义），方式；分词作状语时，可带有连词（可理解为从句变成分词时，保留了连词）\n分词作表语：当作形容词使用，可以被副词修饰，也可以有比较级\n分词作定语：\n现在分词作定语，其修饰的名词是分词动作的发出者，构成主谓关系，且有正在进行的含义；一般来说，现在分词放在修饰的名词前，若放在名词后，则表示强调该分词动作\n过去分词作定语，其修饰的名词是分词动作的承受者，构成动宾关系，表示被动行为（及物动词）；不及物动词的过去分词仅表示完成，而不表示被动\n单个分词作定语，一般前置；分词短语作定语，一般后置\n分词作补语：一般在感官动词之后，一般后置\n4.非谓语动词与从句的转换 # 名词性从句 可以转换为 名词，动名词，不定式\n形容词性从句 可以转换为 分词，介词短语\n副词性从句 可以转换为 分词，不定式，介词短语\n非谓语动词表意方面的准确性更差，对于时态也更模糊，需要上下文\n5.动词的时态 # 1.动词时态 # had been doing：过去一段时间内持续进行，未完成\nhave been doing：至今为止持续进行，未完成\nwas/were doing：当时正在进行，未完成\nbe doing：现在正在进行，未完成\ndone：过去的动作，已完成\ndo：经常性，重复性动作，表示能力或状态\n2.动词的分类 # 状态动词（states）：（have，know，love，want，belong）表示状态，一般不用于进行时；在句子中，活动动词可能体现状态动词的意思；一般现在时表示永久或反复的状态，现在进行时表示暂时的状态（I am living in Harbin. 我暂时居住在哈尔滨）\n活动动词（activities）：（walk，swim，write，read）表示活动，动作没有起点和终点 或 起点和终点并不明确\n过程动词（accomplishments）：（build，persuade，prepare）表示一个时间段，动作有起点和终点，一般不使用一般现在时\n瞬间动词（achievements）：（kill，drop，catch，arrive）表示一个时间点，动作瞬间发生并结束，一般不使用一般现在时（当使用 一般现在时 或 过去时 时，可以表示一种习惯）\n3.时间状语分类 # 时间点：tomorrow morning，three years ago（瞬间动词）\n定位时间段（确定的某段时间）：since 2023，during the first half of last year（过程动词）\n不定位时间段（不确定的某段时间）：for one year，for three days（活动动词）\n","date":"2024-12-11","externalUrl":null,"permalink":"/docs/larry_english/","section":"Notes","summary":"","title":"Larry 的英语学习真理：语法","type":"docs"},{"content":"","date":"2024-12-11","externalUrl":null,"permalink":"/tags/history/","section":"Tags","summary":"","title":"History","type":"tags"},{"content":" 我的游戏经历及游戏汇总 前言 # 在我很小的时候，大概 2007 年前后，我就接触到了电脑。当时电脑已经不算是很新鲜的玩意了，但依然不是家家都有。我家的是一台惠普的笔记本电脑，可是还没有办宽带，因此想要用什么软件都需要去办了宽带的邻居家去下载，再用U盘传输到笔记本上，要么就是买带有软件的盗版光盘。当时网速普遍也就是 1-2mbps，邻居为了玩 CS1.6 ，办了个 20 兆的宽带，在我看来已经是飞速了。\n好在当时老爸也爱玩，便让邻居下了一些游戏，我印象比较深的就是极品飞车、暴力摩托、雷电、抢滩登陆战、以及祖玛。当时太小，虽然蠢蠢欲动，但是操作也不会，界面也看不懂，只好在旁边看老爸玩，有时也会双人合作，不亦乐乎。\n看得多了，觉得自己行了，便也开始自己偷偷玩，但很快我就卡关了。这些游戏都是没啥剧情也没啥引导的，导致我玩着玩着就不知道干什么了，这也让我兴趣大减。于是我开始寻找其他游戏。\n藏经阁时期 # 看到这个标题，相信大部分人就懂了。当时网络并不太普及，与之带来的结果就是光碟店市场还比较火爆。一般的商场都有光碟店，更别说专卖电子产品的商店了。\n我在家里翻到了一本游戏机实用技术的杂志，如获至宝。上面琳琅满目的游戏让我翻了一遍又一遍，但是家里没有网络，我又不敢去邻居家麻烦别人，所以只能过过眼瘾。但在一次逛商场的途中，我偶然发现了一个光碟店里面有书上的图，再仔细一看，果然是游戏光盘。精美的包装和宣传图让我难以割舍，要不是没有钱我就买了。\n因此，我下定决心要攒钱买光盘。家里时不时会给一点零花钱，我就攒起来。当时一张光盘 15-20 块不等，对于当时的我来说还是十分贵的。终于等到能买得起了，我趁另一次逛商场的机会，偷偷买下了人生中第一款付费的游戏——轩辕剑。\n不得不说，当时港台地区制作的游戏真是很戳我的心。轩辕剑、仙剑更是满足了小孩的游戏梦和武侠梦，自此对像素感十足的游戏充满热爱。后来有陆陆续续买了侠盗猎车手，帝国时代等等游戏。但是最大的问题来了，安装不了，总是报错，有的即使能安装，也打不开，或者打开闪退或很卡。你能想象到攒了很久的钱买的游戏，欢欢喜喜偷偷摸摸安装玩不了的痛苦吗？很遗憾，由于我家的笔记本和我岁数差不多大，因此一些新游戏根本带不动。于是后来我就不怎么买了。\nFlash 时期 # 由于大游戏很少能带动，我就跟老爸说希望下点小游戏。老爸也同意了，遂到邻居家，让邻居帮忙下点小游戏。现在回想起来，邻居应该是个博览游戏的老玩家了，不知他用了什么手段，下载了几百个小游戏，这种游戏不用联网，点开即玩，大部分是 2D 的，而且有许多都是给女生换装什么的。后来才知道，这种游戏叫做 Flash 游戏。\nFlash 游戏陪伴了我很长时间，我也发掘了许多宝藏游戏。黄金矿工、闪客快打、战争进化史等等不必多说，魔塔、魔域（魔改的单机版）、森林冰火人这种就麻烦了，因为flash游戏没有存档，关闭之后重新打开就从头开始了，因此几乎没有通关过这类游戏。另一些我比较喜欢的是益智类的，比如大炮射小人、弓箭手等一些模拟物理的游戏。还有一个冒险类的游戏，叫丛林冒险（没想到现在还能搜到，原名叫 Steppenwolf: The X-Creatures Project ）。\n总之，Flash 游戏奠定了我的游戏广度。什么样的简陋游戏在我看来都不简陋，什么样的画质都不影响它好不好玩。虽然游戏很多，但是重复的也不少，好玩的就更少了。好在还没等玩腻，新的喜悦就来了——我家办宽带了。\n页游时期 # 你永远无法想象一个人从一点没接触过网络到突然能上网的喜悦，那是一种久旱逢甘雨的快乐。我还记得在办了宽带之后立刻注册了一个 QQ 帐号，领养了一只 Q 宠。当时已经从同学那听说好久了，但当那只圆圆的企鹅从屏幕右下角爬出来的那一刻，我的激动溢于言表。\n由于当时的电脑还没换，还是原来的笔记本，所以我只能寻寻觅觅，在游戏的海洋中提取能玩的淡水。好在当时的口味还没养刁，无论是什么画质，什么手感，只要没玩过，我都乐于尝试。还记得下载过一个荡神志，以为是类似于天河传说、仙剑、轩辕剑的武侠游戏，没想到进去看过场动画就给我卡成 PPT 了。无奈只能删掉，还没等上手玩，后来才知道是个 ARPG。\n但网络不只是能下载单机游戏，还能玩网络游戏，这让久仰 CF 和 LOL 大名的我也忍不住想试试。然而现实的冷水扑灭了幻想，不出意外的带不起来 LOL ，CF 倒是勉强能玩。但是网游如果卡的话，体验就非常差，所以我转向了网页游戏。\n因为新装了 QQ，我又玩过许多 Flash 游戏，自然就把目光放到了 QQ 游戏上。但可能是游戏玩的太多，也见识过许多大作（虽然很多带不动），对于一些又肝又氪的游戏，我玩了一小段时间就不玩了。我比较喜欢的几个：弹弹堂（以及 QQ 的 TNT），机甲旋风，还有就是神枪手和枪林弹雨。\n相信很多人入坑 FPS，要么是从 CS1.6 ，要么就是从枪林弹雨之类的页游入坑；而很多人入坑 MOBA，要么是从 Dota、LOL，要么就是从英魂之刃入坑。而我很遗憾的避开了这些机会，导致我现在对电脑上 MOBA 操作也十分生疏，手机上的还凑合。\n安卓时期 # 到了小学 4、5 年级，家长终于将手机换成了智能机，用上了高贵的安卓 2.3，而我也顺理成章的研究起来。\n由于屏幕很小（大概3.5英寸），有些常见的手机游戏也玩不了，如愤怒的小鸟、天天酷跑、地铁跑酷、天天爱消除等。所以只能继续在手机游戏的汪洋大海中提取能玩的海鲜。割绳子、保卫萝卜、滑雪大冒险、疯狂喷气机等就不说了，有两个系列游戏彻底让我进入了广袤的游戏领域。也自此开始，我对于游戏才有了较为全面的认识。\n一个让我知道手机游戏也能做的如此复杂有趣，这就是开罗系列。冒险迷宫村、宇宙探险队、开罗之星、合战忍者村、大海贼冒险岛等等，即使到了现在我也依然在玩。\n另一个就是火焰之纹章。\nGBA 时期 # 火焰纹章严格来说并不是手机游戏，但我的确是在手机上发现的。当时有个软件商店叫葫芦侠，其中有游戏修改器，同时也有许多的游戏。某天闲来无事逛游戏页面，突然就发现一个叫《火焰纹章烈火之剑》的游戏。名字挺帅，点进去一看，画风也挺怪，和其他的手机游戏也不一样啊。\n于是下载下来，发现居然有虚拟按键，上下左右和LRAB，还能存档读档，这些功能在当时的我看来宛如发现了新大陆。玩了一下，发现玩法也非常特别，当时哪知道战旗啊。于是，无论是剧情，还是玩法，亦或是画风，都牢牢的抓住了我的心。从此一发不可收拾。\n在朋友的合力搜索之下，我们还发现了火焰纹章封印之剑、火焰纹章圣魔之光石这两部，并且还发现了类似操作的逆转裁判三部曲，口袋妖怪绿宝石、漆黑的魅影等经典的 GBA 游戏（当时还不知道 GBA 是什么）。并且我们还发现了小鸡模拟器、悟饭游戏厅等 APP，这些游戏完美适配我的又小又弱的手机，玩的是不亦乐乎。\n模拟器时期 # 由于入了 GBA 的门，再去了解其他游戏机就不难了。先后接触到 FC、SFC、NDS、Wii、PS1、PSP 等游戏机，但是我们根本接触不到，于是只好选择模拟器。这时我惊喜的发现，虽然电脑带不动太多游戏，但是运行模拟器还是很轻松的。\n于是首先玩了火纹和逆转系列的大部分作品，Pokemon 系列也玩了一些（主要是 GBA 的改版），也接触了大名鼎鼎的塞尔达（当时还不知道大名鼎鼎）、最终幻想、勇者斗恶龙、星之卡比、马里奥等等系列。\n到了上初中时候，我已经有了丰富的游戏经验了。\nPC 时期 # 虽然小时候玩了许多电脑游戏，但都是零零散散的，也不认识什么游戏公司、也不知道什么游戏系列。而这一切的转折点就在于小升初。\n上了初中以后，我买了一台新电脑。此外，初中班级里还有几个同样喜欢玩游戏的同学，我们经常在一起聊天，自然也学习到了许多游戏的知识。\n新电脑是个台式机，虽然配置依然不高，但好歹比原来的笔记本强了，我也终于能流畅运行 CF 了！初中的时光是一段神奇的岁月，初一初二我宛如野草一般，疯狂的汲取各类信息。从同学那里知道假面骑士、知道进击的巨人、知道 MCBBS、知道籽岷的优酷自频道（我还发过自己的视频）、知道卡吧图吧、知道育碧、知道暴雪、知道卡普空的鬼泣和生化、知道光荣的三国和忍龙、知道任天堂、知道索尼、知道微软、知道 steam \u0026hellip;\n我也在新电脑上疯狂尝试，什么是波斯王子，哪个叫生化危机。那时游戏正版化还十分不可思议，游戏资源也遍地都是。3DM、游民星空、某某游戏盒、某某游戏管家、甚至百度网盘、torrent 种子，只有你不会找，没有你找不到。只是你得避免下到病毒和广告，同时也需要掌握一系列的运行库的安装技术，也正是这些时光的磨炼使我对于电脑的基本问题了如指掌。\n网游时期 # 网游之所以要单独列出来，只是因为一款游戏。\n它是 2016 年的 TGA 年度游戏，它让我从不在游戏里花钱的人第一次就花了 198 ，它的宣传可以说铺天盖地，它的火爆程度甚至能冲击 LOL 和 CF，它是一款网游，也是我回不去的那个夏天。\n它就是守望先锋。\n游戏是 2016 年 5 月在国服上线的，我是 7 月份买的，一直玩到 2022 年关服。还记得当时管父母要钱时候的窘境，我妈虽然并不是那么反对玩游戏，但也绝不是无条件支持。她曾问我这么一句话，就一个游戏你能玩多长时间？要是给你买完，你玩两天半不玩了不是白花钱？我还信誓旦旦对她说，我一定能玩够本的，肯定值 198 。有趣的是，我还真做到了，这一个游戏我玩了 700 个小时，还是在中间有一年高三的前提下，可以说我从买了这个游戏开始，别的游戏几乎就没动过。\n集大成时期 # 到了大学期间，我也有了新笔记本，配置也不差了，然而守望先锋也死了。这时，游戏已经不只是一项消遣了，而是已经融入到我生活中，成为不可或缺的一部分。\n浏览游戏新闻已经成为了日常，玩游戏也成了一种欣赏。\n当今时代，游戏五花八门、层出不穷，时间却越来越少，哪怕是看游戏视频都得挑着看。空闲时间少了，就希望自己玩的游戏个个是精品，口味也随之变刁了。买了 Switch，买了 3DS，开了 XGP，Steam 库里也有不少游戏，玩的却越来越少了。强迫自己玩倒也没必要，只能随缘，看到有趣的就找时间玩上一玩。\n可以说，现在更多的是对游戏本身的热爱，希望游戏界能够不断推陈出新，能给人们带来更多快乐。一方面，黑神话让人看到了国产游戏的希望；而另一方面，受 SBI 污染的游戏也被越来越多的玩家抵制。\n虽然标题写着集大成，但其实我更希望是新的开始。游戏兴亡，玩家有责。希望游戏能够不断发展，度过阴霾，重新回到当初的繁荣盛世。\n后记 # 最近一边在玩《夺宝奇兵：古老之圈》，一边用 PS 模拟器玩《恶魔城：月下夜想曲》，主打一手啥都玩。也欢迎各位玩家共同 交流 ，安利游戏及其相关内容。\n如果你感兴趣，也可以看看 我的游戏记录 。\n","date":"2024-12-11","externalUrl":null,"permalink":"/play/game_history_mine/","section":"Funny","summary":"","title":"我的游戏史","type":"play"},{"content":"","date":"2024-12-11","externalUrl":null,"permalink":"/tags/gamelogs/","section":"Tags","summary":"","title":"Gamelogs","type":"tags"},{"content":" GameLogs，用舒服的姿势享受游戏，以愿望单的形式记录游戏。 前言 # 《恶魔城》（Castlevania）是由日本游戏公司 KONAMI 推出的角色扮演类游戏系列，于1986年开始发行。由于版本众多，且大部分属于远古游戏，因此我们这里只介绍最值得玩的部分（以及作者游玩后的记录）。\n1.恶魔城X：月下夜想曲（Castlevania: Symphony of the Night） # 本作品最初于 1997 年在 PS 平台发售，后来又推出了世嘉土星版本。这部作品是公认的恶魔城系列的巅峰之作，虽然是 20 多年前的游戏，但仍然值得一玩。\n游戏的介绍可以看 这里 ，游戏的主角是德古拉伯爵之子阿鲁卡多，从拳脚到魔法，刀、剑、杖，盾牌，以及投掷武器，还有各类技能，可以说主角的性能极强。等级、装备、魔导器、变身、使魔等系统的引入也极大丰富了游戏体验。游戏拥有表里剧情，并且带有人物配音，隐藏地图也做得十分出色，难度不高，十分适合新人玩家入坑。\n攻略 # 我也是这一部作品入坑的恶魔城系列，作为一个新人玩家，很多操作不看攻略是根本不知道的，因此这里给各位新人玩家一些经验分享。\n首先，这部游戏的 UI 分为：生命值、魔力值、以及心。魔力值是会自动回复的，不用担心魔力会耗尽，而魔力主要用来变身和释放必杀技；而心是用来使用如飞刀、投斧、闹钟、十字架等副武器的，心是最常见的，不必节省。\n其次，游戏的菜单分为装备，必杀技，魔导器，使魔。装备中有左手武器和右手武器的区分，分别对应两个按键（● 和 ■）的出招；而必杀技其实就是技能，这里的技能要耗费魔力，而且技能是搓招的形式释放的，也就是说不需要学习技能书什么的，只要你会搓，就能释放必杀技；魔导器可以开启和关闭，一般来说获取后自动开启，但是xx之素不会自动开启，需要手动开启，开启后就能出现对应的使魔。\n接下来就是在游戏途中，很可能会出现不知道接下来要去哪的情况，这时可以看这篇 攻略 ，这篇与其他的攻略的区别是：只标明了路径节点，基本没有剧透，这就给我们自己探索的空间，比起全流程全剧情的图文攻略，还是这样的攻略适合卡关时候看。值得注意的是，这篇攻略还附有 全坐标地图，可以在游戏中后期补清隐藏房间。\n至于游戏的版本，个人推荐 PS 版 ，因为有汉化。虽然道具、魔导器、怪物等等名称都没有汉化，但是描述都是汉化的，不影响游戏进程。个人初见流程为 12h 左右，完成率为 198% ，如果想体验全部隐藏和二周目内容，可能需要更久一点。\n2.恶魔城：月轮（Castlevania: Circle of the Moon） # 本作是 2001 年在 GBA 平台发售的作品，其有独特的DSS卡片系统，借由著不同的卡片组合产生各种效果。与GBA上的其他两作不同，没有多重结局，而是仅有固定的单一结局。由于 GBA 机能有限，月下夜想曲的许多设定并没有在本作出现，如没有商店和怪物图鉴。\n攻略 # 个人感觉跳跃的降落速度比月下夜想曲快很多，导致跳跃到最高处攻击比较难按，在拿到二段跳之前比较难受（好在二段跳在游戏早期就能拿到）。另外一个特点是人物体型小，地图显得比较空旷，很多时候都会迷路。\n未完待续\n3.恶魔城：白夜协奏曲（Castlevania: Harmony of Dissonance） # 本作是 2002 年在 GBA 平台发售的作品，有着与前作月轮风格迥异的明亮画面以及更鲜明的游戏特色，更多的继承了月下夜想曲的特色。玩家的武器鞭子可以装备原石来附加属性来增加威力，城堡分为表城与里城，冒险空间非常大，魔王数量也高达19个。\n攻略 # 未玩待续\n4.恶魔城：晓月圆舞曲（Castlevania: Aria of Sorrow） # 本作是 2003 年在 GBA 平台发售的作品，有着特殊的“魂”系统，使主角可以使用敌人的武器或技能。\n攻略 # 未玩待续\n5.恶魔城：苍月十字架（Castlevania: Dawn of Sorrow） # 本作是 2005 年在 NDS 平台发售的作品，继承了前作的“魂”系统，并大量采用了触控的方式来进行游戏。\n攻略 # 未玩待续\n6.恶魔城：迷宫回廊（Castlevania: Portrait of Ruin） # 本作是 2006 年在 NDS 平台发售的作品，这次游戏为二人同时冒险，除了操控一人外，尚可切换角色或著呼叫伙伴一起行动，共用一条HP跟MP。自己受到异常状态攻击，对隐藏中的伙伴毫无影响，除非二人同时遭受攻击，伙伴被攻击时则以损失MP为代价。除了二人的普通攻击外，也可以达到魔法跟副武器并存的华丽夸张场面。\n攻略 # 未玩待续\n7.恶魔城：被夺走的刻印（Castlevania: Order of Ecclesia） # 本作是 2008 年在 NDS 平台发售的作品，核心玩法围绕刻印系统展开，这是一种寄宿着万物能力的诅咒之刻印，玩家可以通过击败敌人或探索地图来收集和装备刻印，以解锁新的攻击手段和动作，用以解决谜题和战斗。\n攻略 # 未玩待续\n","date":"2024-12-11","externalUrl":null,"permalink":"/play/gamelogs%E6%81%B6%E9%AD%94%E5%9F%8E/","section":"Funny","summary":"","title":"GameLogs：恶魔城（Castlevania）","type":"play"},{"content":" 使用 Hugo 与 Github Pages 建立博客，并使用 Blowfish 主题 前言 # 建立博客也有接近一个月的时间了，在此过程中，从开始时较为简陋的模板逐渐探索，现在也初见规模了。今天就将这一个月的经验总结一下，希望有所帮助。\nHugo 是由 Go 语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。更多介绍可以查看 官网 ，本文旨在介绍如何使用 hugo 和 github 搭建一个博客，并且部署一个主题。\n我们的博客其实可以分为三个部分，一个是我们方便编辑的本地后端（git 库），一个是我们上传到网上的在线后端（github 库），还有一个是我们的博客前端（github pages），下面我们详细介绍一下各部分如何建立和联系。\n0.准备工作 # 安装 go 安装 git 安装 hugo （可选）安装 typora 注：本文所用环境为 Linux，在 Windows 或 Mac 上方法类似。\n1.安装 go # 在 go 的 官网 下载安装包 go1.23.3.linux-amd64.tar.gz，之后输入：\ntar -C /usr/local -xzf go1.23.3.linux-amd64.tar.gz 解压到 /usr/local 目录。然后设置环境变量：\nsudo gedit /etc/profile 在末尾加入 export PATH=$PATH:/usr/local/go/bin ，保存即可。\n完成后我们在终端输入：\ngo version 如能出现 go version go1.23.3 linux/amd64 的结果，则证明安装成功。\n2.安装 git # 在终端中输入：\nsudo apt install git-all 安装完成后，输入：\ngit --version 如出现 git version 2.34.1 的结果，则证明安装成功。\n3.安装 hugo # 在终端中输入：\nsudo apt install hugo 安装完成后，输入：\nhugo version 如出现 hugo v0.139.2-770f548b47b39e6f0fd4da1cc80552024e5829e1+extended linux/amd64 BuildDate=2024-11-23T15:33:51Z VendorInfo=snap:0.139.2 的结果，则证明安装成功。\n4.（可选）安装 Typora # Typora 是一款 Markdown 编辑器，能够十分方便的编辑 .md 文件并查看效果，这使得在 Linux 上编辑文章也十分方便。\n在 Typora 的 官网 ，我们可以在页面底部找到 Linux 的 安装方法 。\n先下载 typora_1.9.3_amd64.deb 文件，然后输入：\nsudo dpkg -i typora_1.9.3_amd64.deb 进行安装。（也可以使用 apt-get 方式安装）\n安装好后，需要进行激活，这里参考 此文章 进行激活，不再赘述。\n5.建立 GitHub 后端库 # 首先拥有一个 GitHub 帐号，登录之后，创建一个新的 repository ：\n在 Repository name 中填写任意一个名字，作为后端库的名字（如 MyBlog ）。在 Private 前面勾选，表示该库是私有的。勾选 Add a README file ，表示添加一个默认的 readme.md 文件，这一步是为了便于后续 git clone 。\n点击右下角 Create repository 后，我们就创建好了我们的后端库，这时后端库中只有一个 readme.md 文件。我们需要到后期配置好主题后，才会将它补充完整。\n6.建立 GitHub 前端库（GitHub Pages） # 再创建一个新的 repository ，这里的 Repository name 要求必须是 你的GitHub用户名.github.io ，如图：\n在 Public 前面勾选，表示该库公开。勾选 Add a README file ，这会设置 main 分支作为默认的主分支，这点在后续推送博客内容时十分重要。（也可以手动设置）\n这里讲一下设置两个库的目的，其实后端库不是必要的，把所有内容一股脑放到前端库中也可以构建博客，但此时别人是可以访问到你的源文件的。也就是说，你的各项配置，文档图片，甚至未公开的草稿等都可以被人直接下载。\n为了设置一点隐私性，我们在后端库中上传所有文件，将利用 hugo 渲染出的 .html 网页文件同步传输到前端库中。这样别人既能通过前端库看到我们的博客，又不能直接访问我们的源文件。\n为了上传后可以自动发布，我们需要设置一下 GitHub Actions 功能。\n在 GitHub 设置 界面找到 Developer settings ，点击 Personal access tokens 中的 Tokens(classic) ，点击右上角的 Generate new token ，选择 Generate new token(classic) 。\n设置一个名字（这里假设为 HUGO ），勾选 repo 和 admin:repo_hook ，在 Expiration 选项选择 No expiration ，这样就不必频繁更新了。点击 Generate token ，并将显示的 token 复制下来保存好（只显示一次，如果不保存则后续需要重新设置 token）\n接下来进入后端库的界面，如图：\n找到右侧的 Settings ，点击后找到左侧的 Secrets and variables ，点击 Actions 。点击 New repository secret ，名称自取（这里假设为 HUGO ，与刚才的 token 名称无关），Secret 中填写刚刚复制保存的 token。\n至此，我们只需要再设置好配置文件，就可以自动发布了，配置文件将在下一节创建。\n7.建立本地 Git 后端库 # 本质上来说，我们只要有后端库和前端库，博客就能生效。但是我们无法直接在 GitHub 上操作，因此需要在本地建立 Git 后端库，再将二者联系起来。\n首先在本地建立一个文件夹，在此文件夹中，将在线后端库克隆到本地，此时出现一个 MyBlog 文件夹。\n对 git 基础操作不了解的同学可以看这篇文章：\n如何快速上手 Git loading \u0026middot; loading Linux Git 进入 MyBlog 文件夹，打开终端，输入：（ xxx 是网站目录，任取一个名字即可）\nhugo new site xxx 可以看到出现了一个文件夹，名称为 xxx，里面有一些文件夹和文件。此时，我们的博客后端已经建成了。\n这时我们进入该文件夹，创建一个 .github 文件夹，进入 .github ，创建一个 workflows 的文件夹，在该文件夹下，创建 gh-pages.yml 。\n打开该 .yml 文件，粘贴以下代码（注意： external_repository 和 personal_token 需要修改）：\nname: github pages on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest\t# 这里最好换成 ubuntu-22.04, 避免高版本不兼容 steps: - uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;0.139.4\u0026#39;\t#这里一般是 latest,但 0.139.5 暂时有问题 # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: # github_token: ${{ secrets.GITHUB_TOKEN }} 该项适用于发布到源码相同repo的情况，不能用于发布到其他repo external_repository: DeathGarurumon/DeathGarurumon.github.io\t# 改成你自己的地址 personal_token: ${{ secrets.HUGO }}\t# HUGO 改成你的 secret 的名称 publish_dir: ./public\t# 发布public文件夹的内容 publish_branch: main\t# 发布到哪个branch 8.安装和配置主题 # Hugo 社区 提供了许多主题，每个主题都会有相关的安装文档。这里我们以本博客所用主题 Blowfish 为例，讲解一下安装过程。\nBlowfish 比较贴心的一点是有详细的 中文文档 ，按照 安装教程 ，我们进入刚刚的网站目录，输入：\ngit init git submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish 此时主题文件就下载完毕了。\n接下来我们将网站根目录的 hugo.toml 删掉，新建一个文件夹并命名为 config，在 config 中新建一个文件夹并命名为 _default 。\n在网站根目录下，我们进入 /themes/blowfish/config/_default ，将里面的所有 .toml 文件都复制到刚刚我们新建的 /config/_default 中。\n1.配置 hugo.toml # 打开 hugo.toml ，设置以下必要项：（若有注释，取消即可）\ntheme = \u0026#34;blowfish\u0026#34; baseURL = \u0026#34;https://DeathGarurumon.github.io/\u0026#34; defaultContentLanguage = \u0026#34;zh-cn\u0026#34;\t# 这里选择你的网站语言（主要和配置选择有关） pluralizeListTitles = \u0026#34;true\u0026#34; 2.配置 languages.zh-cn.toml # 这里的文件名后缀要注意，需要与 hugo.toml 中设置的 defaultContentLanguage 保持一致，其它后缀的可以删除。\n打开 languages.zh-cn.toml ，设置以下项目（主要是主页相关）：\nlanguageCode = \u0026#34;zh-cn\u0026#34; languageName = \u0026#34;简体中文\u0026#34; title = \u0026#34;DeathGarurumon\u0026#34;\t# 这个是页面左上角的名称 [params] logo = \u0026#34;img/author.png\u0026#34;\t# 页面左上角的logo，需要在对应目录下放置图片 [params.author] name = \u0026#34;DeathGarurumon\u0026#34;\t# 主页的中心位置 image = \u0026#34;img/author.jpg\u0026#34;\t# 主页的logo位置 headline = \u0026#34; All work and no play makes Death a dull boy. \u0026#34;\t# 这是座右铭的位置 links = [\t# 这里可以添加主页上自己的链接 { twitter = \u0026#34;https://twitter.com/username\u0026#34; } ] 3.配置 menus.zh-cn.toml # 这里的文件名后缀也需要与 hugo.toml 中设置的 defaultContentLanguage 保持一致，其它后缀的可以删除。\n打开 menus.zh-cn.toml ，设置以下项目（这里是右上角和左下角的目录相关）：\n[[main]]\t# main是指右上角 name = \u0026#34;文章\u0026#34;\t# 这里是目录名称 pageRef = \u0026#34;docs\u0026#34;\t# 这是目录对应的路径，位于 /content/docs weight = 10\t# 这里是位次的相对权重，weight小的会排在前面 [[main]] name = \u0026#34;娱乐\u0026#34; pageRef = \u0026#34;play\u0026#34; weight = 15 [[main]] identifier = \u0026#34;email\u0026#34; pre = \u0026#34;email\u0026#34; weight = 300 url = \u0026#34;mailto:deathgarurumon@gmail.com\u0026#34; [[main]] identifier = \u0026#34;github\u0026#34;\t# 这里是站外链接 pre = \u0026#34;github\u0026#34; url = \u0026#34;https://github.com/DeathGarurumon\u0026#34; weight = 400 [[footer]]\t# footer表示左下角 name = \u0026#34;标签\u0026#34; pageRef = \u0026#34;tags\u0026#34;\t# 这里是自动建立，无需手动设置目录 weight = 10 [[footer]] name = \u0026#34;分类\u0026#34; pageRef = \u0026#34;categories\u0026#34; weight = 20 这些设置后的效果大概是这样：\n4.其他配置（ params.toml 等） # params.toml 中都是一些个性化配置，可以边调边试，按照自己喜好配置。\n详细的说明可以查看官网的 简单开始 页面和 配置 页面。\n9.本地预览 # 在博客根目录打开命令行，输入：\nhugo server 如果没有报错，就说明成功在本地建立了我们的博客网站。此时，我们可以在浏览器中访问 http://localhost:1313/ 来查看我们的博客。\n如果遇到报错，通常是这种形式：\nERROR [zh-cn] REF_NOT_FOUND: Ref \u0026#34;docs/installation\u0026#34;: \u0026#34;/MyBlog/Main/content/s/_index.zh-cn.md:15:113\u0026#34;: page not found ERROR [zh-cn] REF_NOT_FOUND: Ref \u0026#34;samples\u0026#34;: \u0026#34;/MyBlog/Main/content/s/_index.zh-cn.md:15:176\u0026#34;: page not found Built in 125 ms Error: error building site: logged 2 error(s) 我们只需要按照报错的目录和行数，将对应的错误修正即可。\n值得注意的是，本地建立的网站会随着我们修改源文件而实时变化，所以我们在更改配置或编写文章时，可以实时查看呈现出的效果，十分方便。\n10.创建文章 # 在 hugo 中创建文章，可以输入：\nhugo new xxx.md 这会创建一个 xxx.md 文件，且这个文件会以 archetypes 文件夹中的 default.md 作为模板。因此我们可以先修改 archetypes ，这样以后就不用一一添加了。\n然而，我更推荐手动创建文件夹，再在文件夹中创建文档，具体可以看 这里 。\n我们的文章通常都保存在 content 文件夹中，但如果直接在 content 目录下创建文章，会杂乱无章难以找到。因此，我们可以创建一些文件夹，作为文档库，每个文档库下存放不同的文章，这样就很方便了。（这些文档库就对应了 menus.zh-cn.toml 中的 pageRef ）\n对于单独的文章，我们可以先建立一个文件夹，名称内只包括英文和下划线。然后在文件夹中建立 index.md ，这样每篇文章互不影响。在每篇文章的文件夹内，可以放置一个 feature 开头的图片文件，这样就可以设置该文章的缩略图。同时，也可以将文章中的图片放在文件夹内，便于索引。如图：\n## 11.推送本地源码到后端库 对 git 基础操作不了解的同学还是可以先看这篇文章：\n如何快速上手 Git loading \u0026middot; loading Linux Git 首先将本地 git 连接到 github 的后端库上，并设置名称为 origin ，接下来将本地库 push 到后端库上。在网站根目录下输入（第二行后面改成你自己的后端库 SSH 地址）：\ngit init -b main git remote add origin git@github.com:DeathGarurumon/HouDuan.git git pull --rebase origin main git add . git commit -m \u0026#34;first commit\u0026#34; git push origin main 之后，刷新一下网页，就能发现后端库中出现了你的源码。\n转到前端库，点击 Actions ，些许等待后，会发现后端库的 /public 文件夹已经push 进来了，而且成功 deploy。\n此时我们访问 https://deathgarurumon.github.io/ ，就可以看到我们的博客啦！\n后记 # 之后的博客生涯中，我们只需要修改本地文件，hugo server 查看效果，然后 git 三连，即可更新我们的博客。git 三连如下：\ngit add . git commit -m \u0026#34;xxx\u0026#34; git push origin main 参考文献 # 1.如何用 GitHub Pages + Hugo 搭建个人博客\n2.Blowfish 入门指南\n3.Hugo Quick start\n","date":"2024-11-27","externalUrl":null,"permalink":"/docs/blog_build/","section":"Notes","summary":"","title":"如何用 Hugo 与 Github Pages 建立博客并设置主题","type":"docs"},{"content":"","date":"2024-11-27","externalUrl":null,"permalink":"/tags/git/","section":"Tags","summary":"","title":"Git","type":"tags"},{"content":"","date":"2024-11-27","externalUrl":null,"permalink":"/categories/linux/","section":"Categories","summary":"","title":"Linux","type":"categories"},{"content":" Git 的快速使用 0.前言 # Git 是一个快速、可扩展的分布式版本控制系统，它拥有异常丰富的命令集，可以提供高级操作和对内部的完全访问。\n更多的介绍可以看 官网 ，简单来说，Git 就是设立一个仓库并记录仓库中的物品。每当仓库中物品有增删改时，都进行记录，每次记录都记为一个版本。\n结合 GitHub 等在线托管平台，可以实现多人协作或迭代版本更新等操作，使得项目管理变得更加方便和灵活。\n1.安装和配置 # Git 在各个平台都可以使用，这里我们以 Linux 平台举例，其他平台也可以看官网的 安装教程 和 配置教程 。\n本机系统为 ubuntu 22.04 ，输入：\nsudo apt install git-all 即可安装。输入：\ngit --version 如果得到版本信息，则证明成功安装。之后进行基础配置（这里我们假设常搭配 GitHub 使用）：\ngit config --global user.name \u0026#34;你的 GitHub 用户名\u0026#34; git config --global user.email 你的GitHub注册邮箱 这里的 --global 是表示电脑上所有的 git 仓库都使用这个用户名，如果需要切换可以自行独立设置。输入：\ngit config --list 可以看到此时的配置情况。\n这里再解释一下，user.name 和 user.email 并不是只能用 GitHub 的名称和邮箱，只是我们有使用 GitHub 的需求，因此这样设置。Git 的所有操作都是在本地完成，因此如果不需要上传到如 GitHub 这样的托管平台，那么用户名和邮箱可以随意取。用户名和邮箱只是为了标记每次 git 操作的来源。\n2.本地操作 # 0.Git 原理介绍 # 为了更容易理解 git 操作究竟是在做什么，首先介绍一下 git 的原理。如图（指令不完全准确，意会即可）：\ngit 有三个阶段——工作区（Working Directory）、暂存区（Staging Area）、Git 库（Repository）\n与之对应的是 git 中的文件有三种状态——已修改（modified）、已暂存（staged）、已提交（committed）\n已修改表示修改了文件，但还没保存到数据库中。 已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。 已提交表示数据已经保存在本地数据库中。 值得注意的一点是 git 的每次上传都是一次记录，因此可以轻松退回之前的版本。如图：\n假设 git 管理文件 A、B、C，初始时为 version 1。则每次更新都会保存一次快照，而当前只显示最新的快照版本。\n1.初始化（init） # 在理解了 git 的工作原理后，我们可以选择一个文件夹（例如 ./myproject）作为 git 库路径，输入：\ngit init 可以发现在 ./myproject 中出现了一个 .git 文件夹，其中就是这个库的配置文件。以后 ./myproject 就可以作为 git 库进行操作了。但此时库中是空的，若想把 ./myproject 中的文件放入库中，让 git 能够跟踪到这些文件，需要执行后续命令。\n2.添加文件到暂存区中（add） # 将需要添加到库中的文件放入 ./myproject 中，输入：\ngit add 文件名 如需要添加所有文件，则可以输入：\ngit add . 但此时只是将需要添加的文件放入了暂存区，还需要进一步将暂存区的文件提交到库中。\n注意，如果误添加了某个不想添加的文件，可以使用这个命令取消暂存：\ngit reset HEAD 文件名 3.将暂存区文件提交到库中（commit） # 每次提交会被 git 记录，作为一次快照。因此每次提交我们都需要输入一下版本简介，如：\ngit commit -m \u0026#39;version 1\u0026#39; 此时我们暂存区中的文件已经保存到库中，并且带有 version 1 的标记。\n注意，如果提交后发现需要修改本次提交，可以使用如下命令重新提交（即不记录旧的提交，而是用新的提交覆盖记录）\ngit commit -m \u0026#39;version 1\u0026#39; git add forgotten_file git commit --amend 最终只会有一个提交记录。\n4.查询状态（status） # 我们在每步操作时都可以查看实时 git 状态，以确保操作正确，输入：\ngit status 可以看到现在的情况。\n5.还原到上一个版本（checkout） # 当你在某个版本的基础上对某个文件进行修改后，可以使用此命令将此文件还原回原版本时的状态。（请谨慎操作，本地修改会完全消失）\ngit checkout -- 文件名 3.与 GitHub 协作 # 0.分支简介 # 使用 github 前首先需要有一个 github 帐号，并在本文的第 1 节将 user.name 和 user.email 配置好。\n这里我们需要介绍一下 git 协作中一个重要的概念，就是分支（branch）。这里我们可以把 git 的版本更新想象成一个树状结构，每次版本更新都是一个节点，而多人协作就不可避免出现许多分支，我们这里只进行简单介绍，详细介绍请参考 官方文档 。\n如图，假设一个项目开始时只有 master 做，他使用 master 分支更新。\n接下来 iss53 出现了，希望和 master 协作（即修改文件并更新库），于是 iss53 使用最新的版本 C2 进行修改，并更新了 C3 。如图：\n此时 hotfix 出现了，但他使用 C2 进行修改，更新了一个 C4，如图：\n此时 iss53 已经在 C3 的基础上更新了 C5 ，但 master 不能只选择其中一个人的成果，于是他只能将两个人的成果合并，形成 C6，如图：\n但合并并不是那么容易的，如何取舍是一个重要问题。因此，在协作时经常会出现合并冲突，只有将各个版本的冲突文件合理解决（例如同一个文件被分别修改，就需要手动修改，使得该文件在不同版本中不冲突）后才能合并。\n某些情况下，我们虽然没与别人协作，但依然会产生版本冲突，多半就是远程仓库中的版本和我们本地库的版本不匹配（一般表现为旧的想要覆盖新的）。此时我们只需要先将旧的备份，然后将新的覆盖旧的，再把备份取回即可。也可以选择强制覆盖（force）。\n1.克隆（clone） # 我们使用 git 最常用的事情就是下载别人的库了，首先找到你想克隆的库，右上角 Code 点击后复制链接，接下来输入：\ngit clone https://github.com/DeathGarurumon/DeathGarurumon.github.io.git 后面的链接改为你复制的即可。克隆完成后，会在你输入命令的根目录下产生一个文件夹。\n2.添加远程仓库（remote） # 如果需要持续对一个远程仓库进行上传和下载操作，最好将其配置为一个远程仓库。输入：\ngit remote add origin https://github.com/DeathGarurumon/DeathGarurumon.github.io.git 这样就将该仓库登记为一个远程仓库了，并且起了一个昵称（origin）。输入：\ngit remote -v git remote show origin 可以查看所有的远程仓库以及查看某个远程仓库（origin）的具体信息。\n注意，这里的 origin 可以替换为任何名称，只是用来指代后面的链接。\n另外输入以下指令可以重命名或移除远程仓库：\ngit remote rename origin death git remote remove death 3.从远程仓库下载到本地（pull） # pull 其实是一个组合指令，可以分成 fetch 和 merge 两个命令。当我们需要将远程仓库覆盖本地时，输入：\ngit pull origin main 这里的 origin 是远程仓库名称，main 是远程仓库的分支（要求本地和远程的分支相同）。这等价于输入：\ngit fetch origin main git merge FETCH_HEAD 4.从本地上传到远程仓库（push） # 在执行 push 前，我们需要先在本地库进行保存，再将本地库版本推送到远程仓库。例如：\ngit add . git commit -m \u0026#39;version 1\u0026#39; git push origin main 5.（可选）SSH 连接 # SSH 连接是一种免密连接，相当于“记住密码”的功能。具体步骤可以查看 GitHub 文档 。输入：\nls -al ~/.ssh 可以查看电脑上是否已存在 SSH 密钥。若提示存在，则可直接使用现有密钥。\n若不存在，则输入：\nssh-keygen -t ed25519 -C \u0026#34;your_email@example.com\u0026#34; 后面的邮箱要替换为 GitHub 邮箱。提示保存路径，直接回车默认即可。\n输入：\ncat ~/.ssh/id_ed25519.pub 或者手动打开 ~/.ssh/ 目录，用编辑器打开该文件，复制内容，之后按照以下步骤在 GitHub 上操作即可。\n最后，输入：\nssh -T git@github.com 输入 yes ，如果看到以下内容，则证明成功。\n\u0026gt; Hi USERNAME! You\u0026#39;ve successfully authenticated, but GitHub does not \u0026gt; provide shell access. 4.参考文献 # 1.真正理解 git fetch, git pull\n2.Git Book\n3.廖雪峰的Git教程\n","date":"2024-11-27","externalUrl":null,"permalink":"/docs/git_use/","section":"Notes","summary":"","title":"如何快速上手 Git","type":"docs"},{"content":"","date":"2024-11-25","externalUrl":null,"permalink":"/categories/about_me/","section":"Categories","summary":"","title":"About_me","type":"categories"},{"content":"","date":"2024-11-25","externalUrl":null,"permalink":"/tags/explain/","section":"Tags","summary":"","title":"Explain","type":"tags"},{"content":"之前的文章中，我将中二观点保留在思想中，给思想添加了活力。而今天这篇文章，我想谈一谈我的中庸观点，希望能让思想富有弹性。\n首先，需要先澄清的一点是：本文描述的仅是我对于“中庸”的理解，也可以认为是我自己的一种思想，可能并不是中庸的正确含义。我个人十分喜欢中庸这个词汇，故借“中庸”之名抒“绝命”之实。\n作为中国人，中庸思想是扎根在血脉中的。\n有这样一个笑话：中国人评价别人总是欲扬先抑，欲抑先扬；美国人评价别人就是欲扬则扬，欲抑则抑；而日本人干脆不欲，让他扬他决不抑，一扬到底。还有一个是这样说的：同样被问到明天去不去看电影，美国人答案就是去或者不去，中国人则会说看情况吧，到时候再说云云，就是不告诉你准信。\n这几个笑话虽然带有一定的刻板印象，但也多少反映出我们中国人做事总是喜欢留有退路，思考问题总是弯弯绕绕，从来也不直来直去、做事不留余地。这种智慧我们一般称之为中庸。\n在我看来，中庸很简单，无非合理二字。但也正应如此，中庸又很难，稍有不慎就会陷入“不合理”之中。\n要想说清楚中庸，不妨先看《道德经》中的一句话：道可道，非常道。这句话是道德经的第一句话，意思是：如果“道”可以言讲清楚，那么就不是“常道”了。老子全文都在描述“道”，然而却没有一处写明白“道”究竟是什么。这也印证了这句话，如果“道”被定义了，那么它就不再万能了，它就不能在用于通常的事物了。也就是说定义把“道”的范围缩小了，将它局限在某个具体的概念上了，这不是原本的“常道”。\n中庸也是如此，把这句话重新断句：道可，道非，常道。正着看，“道”成立；反过来看，“道”还是成立的，这才是“常道”。中庸一旦被定义，也恰恰是一种不中庸。中庸是一个面而非一个点，若盲人摸象，一定有失偏颇。\n由于中庸无法定义，因此我也学着老子的方法，用否定的方式解释它。\n首先，中庸不是中立，“既不也不”并非中庸。如果一个人极端的中立，不倾向于任意一方，那么它依然是极端的，并不能说是中庸。\n其次，中庸不是墙头草，即中庸不能是被动的顺应形势。遇强则弱，遇弱则强，敌进我退，敌退我进，这种不进行自主调节、缺乏主观能动的行为，也并不能说是中庸。\n最后，中庸不是肆意妄为，无拘无束。正如我上面说的，中庸应该是合理的，如果不考虑形势，一味的随心所欲，盲目的践行自己的主观，这往往是不合道理的，因此也不是中庸。\n如果非要描述，中庸应该类似一种折中，不碰触上限下限，遨游在有限的自由中，颇有随心所欲不逾矩的意象。\n这里举一个形象的例子来描述我心中的中庸。想象有一把尺子，上面布满刻度，假设刻度从 0 到 1 。其中有一个指针，会指向某个刻度。\n当指针只指向 0 或 1 时，当然是不中庸的，甚至是一种极端。但是即使它指向 0.5 ，这也依然只是一种极端的中立，并不是中庸。那么如果考虑一些主观因素，人为选择一个有倾向的值（例如 0.3 ），这仍然会出现不合理的情况，因为一种态度并不能应对所有情况。既然如此，那么如果按照某种规律进行有规律的摆动呢？这种已经能覆盖各个情况了，但是依然不够，这种摆动缺乏主观能动性，会使我们的思想变成一个球，但缺少锋利。\n我心中的中庸应该是一种随心所欲的状态，指针随时都可以移动，指向任意一个值，但当我想要在某个值上停留时，就能够保持静止。动与静处于相对的状态，且都在主观掌握之中。既呈现出普遍的不确定性，有具有特殊的确定性。既有无限的可能性，又具有唯一的必然性。\n以上说的都是理论，中庸看上去似乎是个深邃的哲学概念，难以应用于实际。但恰恰相反，中庸实践起来十分容易，甚至我们可能都意识不到这是中庸思想的体现。\n说白了，中庸就是想做什么就做什么。但这个“想”必须是真想，“做”也必须是真做。\n生活中，我们的每个决定都可以是中庸的。我们每遇到一件事，都要去决定做与不做。无论我们想做还是不想做，这个决定都是我们主观产生的。既然决定要做，那么我们肯定想方设法要去做成它；如果决定不做，我们肯定会千方百计避开它。这些决定对我们来说都是合理的。\n但是，如果一件事我们不想做却不得不做，或是想做却求而不得；如果做了选择，事后却后悔或是不满意，那么我们就不会认为决定是合理的，从而否定自己。这些表现就是不中庸的，或者说是某种意义上的极端（类似于不能与自己和解，自己逼自己或怨天尤人云云）\n那么贯彻中庸思想就能让你的生活变得更加顺心，让你的思想更加富有弹性。如果一件不得不做的事，你能在主观上愿意做；如果一个决定导致了不令人满意的结果，你能主观上接受它；这就是贯彻了中庸思想。换句话说，就是从“想做什么就做什么”变成了“要做什么就想什么”。\n它使得你变成了自由的指针，在 0 与 1 之间选择合适的刻度，既能在需要某个数字时选中它，又能在想要某个数字时选择它。当你将这种中庸思想内化于心、外化于形时，虽然依然会不可避免地遇到难以处理的事情，但它总能让你从困境中脱离出来，帮你度过难关。\n","date":"2024-11-25","externalUrl":null,"permalink":"/about/zhong_yong/","section":"About me","summary":"","title":"我的中庸之道","type":"about"},{"content":" Isaac Sim 命令行运行和代码编写，以及 cuRobo 库的安装 如果你还没有安装 Isaac Sim，请先看一下这篇文章：\nOmniverse 与 IsaacSim 安装教程 loading \u0026middot; loading Robot Software 在正式开始之前，我们首先要明确一下 Isaac Sim 究竟是什么。\n事实上，Isaac Sim 只是一个仿真软件，可以进行机器人、各类形状的物体、甚至人为设定具有各项属性的物品之间的互动，模拟质量、速度、加速度等物理关系。\n然而，Isaac Sim 本质上还是代码驱动的，由代码进行计算，前端进行渲染，从而得到视觉上的呈现。如果去掉视觉上呈现，其实依然可以依靠代码运行模拟整个仿真过程。\n而本文就是讲解如何使用代码来运行 Isaac Sim，以及将 VsCode 与 Isaac Sim 关联，最后介绍一下 cuRobo 库的安装。\n0.环境配置（cuRobo要求） # Ubuntu 20.04 或 22.04（Windows 和 其他 Linux 版本也可以，但不保证稳定性） python 3.8 - 3.10（这里不需要额外安装，因为 Isaac Sim 的安装已经包括） pytorch 1.15 及以上版本 安装 git-lfs 安装 CUDA 11.8 并添加到环境变量 这里我们是 Ubuntu 22.04，Isaac Sim 4.0.0 版本。\n1.安装 cuRobo 库 # cuRobo 是一个用 Python 构建的库，其核心计算组件以 CUDA 内核的形式实现，并通过 pyTorch 封装在 Python 中。更详细的介绍可以查阅 官网 或 论文 。\n我们这里的目的是，安装 cuRobo 库，并且在 Isaac Sim 中使用。其他方式安装也可以参照官网的 安装教程 。\n1.安装 CUDA 11.8 并添加环境变量 # 在 CUDA下载地址 中选择自己的系统版本下载（这里以 Ubuntu 22.04 版本为例），点击 deb(local) ，即可出现安装指令，在命令行中输入安装即可。\n安装完成后，将 CUDA 11.8 添加到环境变量中。在命令行中输入：\nexport PATH=/usr/local/cuda-11.8/bin${PATH:+:${PATH}} 2.找到 Isaac Sim 中的 python.sh，添加到环境变量 # 我们在环境配置中提到，无需额外安装 python 环境，就是因为 Isaac Sim 在安装时已经自带了一个环境，在这个环境中，Isaac Sim 自己的扩展库路径都被收录，因此直接使用 Isaac Sim 自带的环境是十分方便的。\n默认情况下，我们的 Isaac Sim 会被安装在 ~/.local/share/ov/pkg，这个路径可以在 Omniverse Launcher 的设置中查看。\n我们找到该路径下的 isaac-sim-4.0.0 中的 python.sh 文件，在命令行中输入：\necho \u0026#34;alias omni_python=\u0026#39;~/.local/share/ov/pkg/isaac-sim-4.0.0/python.sh\u0026#39;\u0026#34; \u0026gt;\u0026gt; ~/.bashrc source ~/.bashrc 这样，就将这个文件定义成了 omni_python 命令，这个命令与我们正常的 python 文件基本没有区别，只是它所处于 Isaac Sim 的环境中。\n我们可以理解成，conda创建了一个新环境名为 isaacsim，这个环境中的 python 指令为 omni_python，环境中的扩展都在 isaac-sim-4.0.0 文件夹内。\n可以通过 omni_python -m pip xxx 来使用 pip 指令。\n3.安装 git-lfs # 命令行中输入：\nsudo apt install git-lfs 4.在 isaacsim 环境中添加扩展 module # 命令行中输入：\nomni_python -m pip install tomli wheel ninja 5.将 cuRobo 库克隆到本地，并安装到 isaacsim 环境中 # 命令行中输入：\ngit clone https://github.com/NVlabs/curobo.git cd curobo omni_python -m pip install -e .[isaacsim] --no-build-isolation 注意，这个 curobo 文件夹比较重要，建议放在不会误删的位置，默认在主目录下。\n输入：\nomni_python -m pip list 可以看到，nvidia-curobo 已被安装。如果没有安装 pytorch，需要手动安装 1.15 以上版本（官方推荐 2.0+）\n输入：\nomni_python 可以发现进入了 python 命令行，并且 python 版本为 3.10\n6. 验证 # 至此，我们的 cuRobo 库就安装完毕了，输入：\nomni_python examples/isaac_sim/motion_gen_reacher.py 如果发现代码正常运行，并且启动了 Isaac Sim 界面。点击界面左侧的运行按钮，拖动小方块，机械臂会移动到小方块上。说明安装成功。\n2.安装并配置 VsCode # 在 VsCode 官网 下载 .deb 安装包，找到文件，输入以下命令安装。\nsudo dpkg -i xxx.deb 1.将 python 解释器配置为 python.sh # 点击 Ctrl+Shift+P 输入 select interpreter，选择解释器。\n点击 输入解释器路径，打开文件选择界面。此时找到我们的 ~/.local/share/ov/pkg/isaac-sim-4.0.0/python.sh 并确认。\n这样，我们就将解释器配置完毕，可以自由地调试和运行了。\n在 VsCode 中运行 curobo/examples/isaac_sim 中的示例文件，如 motion_gen_reacher.py，点击右上角运行按钮旁边的下三角，找到 python调试程序：调试 python 文件 ，点击即可进行调试。\n2.（另一种方法）利用扩展插件进行调试 # 这种方法需要修改 launch.json 文件，在 VsCode 中下载 Isaac Sim 插件，在Isaac Sim 中下载 VsCode Debug 插件，通过本地局域网的方式连接。\n优点是可以进行只运行选中部分代码，缺点是每次调试都需要开启插件，比较麻烦。\n这里不详细介绍，感兴趣可以看 参考文献 2 。\n后记 # 本文后续可能会将 VsCode 的第二种方法补全，或添加一些 Windows 系统下的方法，用到再说。\n参考文献 # 1.NVIDIA cuRobo Installation\n2.Issac Sim 2. 使用VScode调试代码\n","date":"2024-11-24","externalUrl":null,"permalink":"/docs/omnipython_and_curobo/","section":"Notes","summary":"","title":"IsaacSim 代码运行与 cuRobo 库的安装","type":"docs"},{"content":"","date":"2024-11-24","externalUrl":null,"permalink":"/tags/motion_plan/","section":"Tags","summary":"","title":"Motion_plan","type":"tags"},{"content":" Omniverse Launcher 以及旗下的 IsaacSim，Cache，及 Streaming Client 的安装教程 Omniverse Launcher 是 NVIDIA 研发的一个模块化的 API 和微服务开发平台，其中有许多实用的模块。今天我们就来介绍机器人仿真工具套件：Isaac Sim\n具体介绍可以查看 官网 和 开发者 介绍，以及 IsaacSim 介绍，这里就不赘述了，下面我们直接开始正题。这里建议安装 Linux 版本，虽然 Windows 版本更加容易安装，但是由于一些第三方库对 Linux 更加适配，因此最好安装 Linux 版本。\n本文写于 2024 年 11 月 24 日，IsaacSim 最新版本为 4.2.0，本文安装版本为 4.0.0\n0.环境检查 # 在正式安装之前，我们最好先查看官网的推荐环境，在 这里 我们可以看到配置要求：\nUbuntu 版本过高或 Windows 版本过低，内存小于 32GB，显卡低于 RTX3070 8GB 水平等，都难以支持 Isaac Sim 运行。\n此外，Isaac Sim container 只支持 Linux 系统，Ubuntu 18.04 只能使用 Isaac Sim 2022.2.0，A100 或 H100 的 GPU 并不支持。\n在 这里 也能看到对于驱动的要求如下：\nWindows 的驱动版本要求为 537.70（RTX），Linux 的驱动版本要求为 535.129.03，这里的版本基本只要满足大版本号（第一个数字）相同即可，小数点后影响不大。\n1.下载安装 # 在确保我们的环境满足条件后，下一步就可以去 官网 下载安装了。\n找到下图所示位置，点击左下角的 访问启动程序 Windows 或 Linux ，如果是 Windows 就点击 Windows，下载安装包，双击安装即可；如果是 Linux 就点击 Linux ，下载启动程序。（注意：linux 的启动程序并不需要安装，而是打包好的免安装程序）\n对于 Linux 的启动程序，通常名称是 omniverse-launcher-linux.AppImage，我们将其移动到某个位置（以 Desktop 为例），此时这个文件的路径就是 ./Desktop/omniverse-launcher-linux.AppImage 。在命令行中输入：\nsudo chmod +x ./Desktop/omniverse-launcher-linux.AppImage 使得该程序能够执行。\n之后双击该文件，即可启动 Omniverse Launcher。\n2.启动 Omniverse Launcher # 双击启动后，会出现如下界面：\n下方可以选择语言为中文，并且需要登录 NIVDIA 帐号。\n登录后，可以看到如下界面：\n右上角的设置中可以切换语言为中文，主界面包括 新闻(NEWS)、图书馆(LIBRARY)、交易所(EXCHANGE)、NUCLEUS、以及 学习(LEARN) 几个板块。我们需要用到的就是 交易所 和 图书馆，其实就是在线商店和本地库，我们需要在 交易所 中下载需要的模块，在 图书馆 中使用。\n3.下载 Isaac Sim # 这里我们下载 Isaac Sim 4.0.0 版本，该版本是 2024.01 发布的，已经比较新了。\n在 交易所 中搜索 isaac sim，会出现两个结果：\n左边的是我们需要的，而右边的 Isaac Sim Compatibility Checker 是检测当前环境能否运行 Isaac Sim 的检测软件，如果不放心可以下载测试一下。\n点击 Isaac Sim，注意在右上角选择我们想要安装的版本。\n4.安装 Cache # 这一步十分重要，安装 Cache 可以加速 Isaac Sim 的某些计算和进程，如果不安装 Cache，可能会遇到运行程序时十分卡顿的情况。\n在 交易所 中搜索 cache，可以看到如下结果，直接安装即可。\n## 5.安装 NUCLEUS\rNucleus 是 Omniverse 的数据库和协作引擎。借助 Nucleus，可以同时将多个用户跨多个应用程序实时连接在一起，并允许快速迭代。Nucleus 提供了一组基本服务，允许各种客户端应用程序、渲染器和微服务一起共享和修改虚拟世界的表示。（类似 git 协作）\n具体介绍可以在 官网 查看，作为 Omniverse 重要组成部分，我们点击 NUCLEUS，点击 Add Local Nucleus Device，创建一个帐号密码（与 NVIDIA 帐号无关，是数据库的帐号密码）。安装好后，会显示如下界面：\n6.（可选）安装 Streaming Client # Streaming Client 是一个串流工具，可以建立远程连接服务器或工作站等，后续可能会有用，可以先下载。\n在 交易所 中搜索 streaming client，结果如下，安装即可。\n7.开始使用 # 当下载全部完毕后，我们在 图书馆 中可以看到下载的模块，点击启动即可运行IsaacSim。\n后记 # 安装了 IsaacSim 还不足以进行我们的机器人研究，我们还需要运行代码程序，使之能实现一些自动化的算法和任务。\n并且，我们还希望使用 VsCode 等 IDE 软件，能够进行调试，并利用 Isaac Sim 将调试过程展现出来。\n参考文献 # 1.Omniverse IsaacSim Installation\n2.NVIDIA Omniverse和Isaac Sim笔记1：软件初识与USD文件简介\n3.NVIDIA Omniverse和Isaac Sim笔记2：软件安装与基本使用\n4.Isaac Sim详细安装使用教程\n","date":"2024-11-24","externalUrl":null,"permalink":"/docs/omniverse_and_isaacsim/","section":"Notes","summary":"","title":"Omniverse 与 IsaacSim 安装教程","type":"docs"},{"content":"","date":"2024-11-24","externalUrl":null,"permalink":"/tags/software/","section":"Tags","summary":"","title":"Software","type":"tags"},{"content":" MPC（Model Predictive Control）代码逻辑：实时追踪物体任务分析和实现 前提条件 # 文章所用系统环境为 Ubuntu 22.04（内核版本 5.15），以下软件和环境均为 Linux 版本 安装 Nvidia Omniverse（文章中所用版本为 Omniverse Launcher 1.9.13） 安装 Isaac Sim（文章中为 Isaac Sim 4.0.0） 安装 Omniverse Cache（文章中为 2023.2.6 版本，缺少这个很可能导致 Isaac Sim 模拟卡死） 使用 Isaac Sim 自带的 python.sh 进行运行与调试（如不使用可能会有无法使用某些 isaac 扩展库的情况） 安装 cuRobo 库 （非必要）安装 VSCode（由于可以安装 Isaac Sim 插件，以及关联 python.sh，调试比较方便，文章中为 1.95.2 版本） 以上环境的安装可阅读：\nOmniverse 与 IsaacSim 安装教程 loading \u0026middot; loading Robot Software IsaacSim 代码运行与 cuRobo 库的安装 loading \u0026middot; loading Robot Motion_plan 0. # 导入必要的库，并将 helper.py 文件（位于curobo库的./examples/isaac_sim目录下）放在与源代码同路径下。\nimport isaacsim import torch import os import numpy as np from omni.isaac.kit import SimulationApp simulation_app = SimulationApp( { \u0026#34;headless\u0026#34;: False, \u0026#34;width\u0026#34;: \u0026#34;1920\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;1080\u0026#34;, } ) ## 这里要注意的是，先创建 SimulationApp 后才能导入下面的库，因为下面的库属于它的扩展 import carb from helper import add_extensions, add_robot_to_scene from omni.isaac.core import World from omni.isaac.core.objects import cuboid from omni.isaac.core.utils.types import ArticulationAction from omni.isaac.core.utils.numpy.rotations import euler_angles_to_quats from pxr import PhysxSchema ## CuRobo from curobo.util.logger import setup_curobo_logger from curobo.util.usd_helper import UsdHelper from curobo.geom.sdf.world import CollisionCheckerType from curobo.geom.types import WorldConfig from curobo.rollout.rollout_base import Goal from curobo.types.base import TensorDeviceType from curobo.types.math import Pose from curobo.types.robot import JointState from curobo.types.state import JointState from curobo.util_file import get_robot_configs_path, get_world_configs_path, join_path, load_yaml from curobo.wrap.reacher.mpc import MpcSolver, MpcSolverConfig 1. # 首先要设定 World 实例，并且设置 World 实例下的 stage，相当于创建了一个空间和画布，之后就可以在其中添加内容。\nmy_world = World(stage_units_in_meters=1.0) stage = my_world.stage ## 下面设置stage的Prim，stage可以理解为集合，而prim就是其中的元素 xform = stage.DefinePrim(\u0026#34;/World\u0026#34;, \u0026#34;Xform\u0026#34;)\t# prim包含路径和类型 stage.SetDefaultPrim(xform) stage.DefinePrim(\u0026#34;/curobo\u0026#34;, \u0026#34;Xform\u0026#34;) ## 最后设定一个默认地面 my_world.scene.add_default_ground_plane() 2. # 接下来可以设定一个 target，作为我们 MPC 算法的目标物体。\ntarget = cuboid.VisualCuboid(\t# VisualCuboid是无实体有形状的立方体 \u0026#34;/World/target\u0026#34;,\t# 该target的路径 position=np.array([0.5, 0, 0.7]),\t# 在空间的位置 orientation=np.array([0, 1, 0, 0]),\t# 物体的方向（单位是角度，可以理解为绕着不同的中心轴旋转） color=np.array([1.0, 0, 0]),\t# 颜色 RGB size=0.05,\t# 尺寸（scale*size就是长宽高在 world 中的真实值） scale=np.array([1.0, 1.0, 1.0]),\t# 长宽高的比例 ) 3. # 接下来可以添加一些环境物体作为障碍物或平台（这里做演示，该任务中并无实际作用）。\ndy_cuboid1 = cuboid.DynamicCuboid(\t# DynamicCuboid是有实体且可以移动的立方体 prim_path=\u0026#34;/World/dy_cuboid1\u0026#34;, position=np.array([0.7, 0.0, 0.5]), scale=np.array([0.5, 0.5, 0.5]), color=np.array([1.0, 1.0, 1.0]), size=1, linear_velocity=np.array([0.0, 1.0, 0.0]),\t# 这里添加了一个线速度 ) dy_prim = stage.GetPrimAtPath(\u0026#34;/World/dy_cuboid1\u0026#34;) ## 由于特殊需要，将物体重力设置为无 dy = PhysxSchema.PhysxRigidBodyAPI.Apply(dy_prim) dy.GetDisableGravityAttr().Set(True) 4. # 设定一些配置参数。\npast_pose = None\t# target 的过去位置 cmd_state_full = None\t# 存储mpc过程中机器人的关节状态 n_obstacle_cuboids = 30 n_obstacle_mesh = 10 init_curobo = False init_world = False step = 0 setup_curobo_logger(\u0026#34;warn\u0026#34;) usd_help = UsdHelper() tensor_args = TensorDeviceType() usd_help.load_stage(my_world.stage) add_extensions(simulation_app, None) 5. # 导入机器人配置，添加到场景中。\n## 设定 robot 配置 robot_cfg = load_yaml(join_path(get_robot_configs_path(), \u0026#34;franka.yml\u0026#34;))[\u0026#34;robot_cfg\u0026#34;]\t# 这里导入 franka 的配置 j_names = robot_cfg[\u0026#34;kinematics\u0026#34;][\u0026#34;cspace\u0026#34;][\u0026#34;joint_names\u0026#34;]\t# 各关节名称 default_config = robot_cfg[\u0026#34;kinematics\u0026#34;][\u0026#34;cspace\u0026#34;][\u0026#34;retract_config\u0026#34;]\t# 机器人的初始状态 robot_cfg[\u0026#34;kinematics\u0026#34;][\u0026#34;collision_sphere_buffer\u0026#34;] += 0.02 #这里增大一点机器人的碰撞检测范围 ## 将 robot 配置导入到 world 中 robot, robot_prim_path = add_robot_to_scene(robot_cfg, my_world) articulation_controller = robot.get_articulation_controller()\t# 获取机器人的关节控制器 6. # 导入环境配置（这里的环境配置是已经设定好位置方向等参数的一些物体，通常存储为 .yml 文件）\n## 这里导入一个桌子，world_cfg_table 使用它的 cuboid world_cfg_table = WorldConfig.from_dict( load_yaml(join_path(get_world_configs_path(), \u0026#34;collision_table.yml\u0026#34;)) ) world_cfg_table.cuboid[0].pose[2] -= 0.04 ## world_cfg_mesh 使用它的 mesh（mesh是碰撞网格，在碰撞检测时通常计算网格化的环境和物体） world_cfg_mesh = WorldConfig.from_dict( load_yaml(join_path(get_world_configs_path(), \u0026#34;collision_table.yml\u0026#34;)) ).get_mesh_world()\t# 这里获取环境的网格化 world_cfg_mesh.mesh[0].name += \u0026#34;_mesh\u0026#34; world_cfg_mesh.mesh[0].pose[2] = -10.0 world_cfg = WorldConfig(cuboid=world_cfg_table.cuboid, mesh=world_cfg_mesh.mesh) 7. # 设置 mpc（model predictive control）配置\n## 设置 mpc 的参数 mpc_config = MpcSolverConfig.load_from_robot_config( robot_cfg, world_cfg, use_cuda_graph=True, use_cuda_graph_metrics=True, use_cuda_graph_full_step=False, self_collision_check=True, collision_checker_type=CollisionCheckerType.MESH, collision_cache={\u0026#34;obb\u0026#34;: n_obstacle_cuboids, \u0026#34;mesh\u0026#34;: n_obstacle_mesh}, use_mppi=True, use_lbfgs=False, use_es=False, store_rollouts=True, step_dt=0.02, ) ## 实例化 mpc mpc = MpcSolver(mpc_config) retract_cfg = mpc.rollout_fn.dynamics_model.retract_config.clone().unsqueeze(0)\t# 初始状态 joint_names = mpc.rollout_fn.joint_names\t# 关节名称 current_state = JointState.from_position(retract_cfg, joint_names=joint_names)\t# 设置当前状态（初始化） state = mpc.rollout_fn.compute_kinematics(current_state)\t# 根据当前状态，计算末端执行器姿态 retract_pose = Pose(state.ee_pos_seq, quaternion=state.ee_quat_seq)\t# 将计算结果记录成初始姿态 ## 设置 goal goal = Goal( current_state=current_state, goal_state=JointState.from_position(retract_cfg, joint_names=joint_names), goal_pose=retract_pose, ) goal_buffer = mpc.setup_solve_single(goal, 1) mpc.update_goal(goal_buffer) mpc_result = mpc.step(current_state, max_attempts=2) 8. # 开始模拟，利用 IsaacSim 环境显式观察；初始化 world 和 robot\nwhile simulation_app.is_running(): if not init_world:\t# 初始试运行 10 steps for _ in range(10): my_world.step(render=True) init_world = True my_world.step(render=True) if not my_world.is_playing():\t# 手动点击按钮运行 continue step_index = my_world.current_time_step_index if step_index \u0026lt;= 2:\t# 初始化机器人 my_world.reset() idx_list = [robot.get_dof_index(x) for x in j_names] robot.set_joint_positions(default_config, idx_list) robot._articulation_view.set_max_efforts( values=np.array([5000 for i in range(len(idx_list))]), joint_indices=idx_list ) if not init_curobo: init_curobo = True step += 1 9. # 逐步更新环境障碍物，获取 target 位置。\nstep_index = step if step_index % 1 == 0:\t# 每个step都更新 print(\u0026#34;Updating world\u0026#34;) obstacles = usd_help.get_obstacles_from_stage( ignore_substring=[\t# 不被视作障碍物的目录 robot_prim_path, \u0026#34;/World/target\u0026#34;, \u0026#34;/World/defaultGroundPlane\u0026#34;, \u0026#34;/curobo\u0026#34;, ], reference_prim_path=robot_prim_path, ).get_collision_check_world() obstacles.add_obstacle(world_cfg_table.cuboid[0]) mpc.world_coll_checker.load_collision_model(obstacles)\t# mpc加载障碍物 cube_position, cube_orientation = target.get_world_pose()\t# 获取 target 位置 dy_cube_position, dy_cube_orientation = dy_cuboid1.get_world_pose() if past_pose is None: past_pose = cube_position + 1.0 10. # 使用 mpc 方式追踪改变位置后的 target，若 target 位置不改变，则无需执行。\nif np.linalg.norm(cube_position - past_pose) \u0026gt; 1e-3: ee_translation_goal = cube_position ee_orientation_teleop_goal = euler_angles_to_quats([np.pi, -0.5*np.pi, 0]) ik_goal = Pose( position=tensor_args.to_device(ee_translation_goal), quaternion=tensor_args.to_device(ee_orientation_teleop_goal), ) goal_buffer.goal_pose.copy_(ik_goal)\t# 将目标放入mpc的 goal_buffer 中 mpc.update_goal(goal_buffer) past_pose = cube_position 11. # 获取机器人关节状态，进行计算轨迹并末端执行。\nsim_js = robot.get_joints_state() sim_js_names = robot.dof_names cu_js = JointState( position=tensor_args.to_device(sim_js.positions), velocity=tensor_args.to_device(sim_js.velocities) * 0.0, acceleration=tensor_args.to_device(sim_js.velocities) * 0.0, jerk=tensor_args.to_device(sim_js.velocities) * 0.0, joint_names=sim_js_names, ) cu_js = cu_js.get_ordered_joint_state(mpc.rollout_fn.joint_names)\t# 只控制必要的关节 if cmd_state_full is None: current_state.copy_(cu_js) else: current_state_partial = cmd_state_full.get_ordered_joint_state(mpc.rollout_fn.joint_names) current_state.copy_(current_state_partial) current_state.joint_names = current_state_partial.joint_names current_state.copy_(cu_js) mpc_result = mpc.step(current_state, max_attempts=2)\t# 计算结果 ## 更新 cmd_state_full cmd_state_full = mpc_result.js_action idx_list = [] common_js_names = [] for x in sim_js_names: if x in cmd_state_full.joint_names: idx_list.append(robot.get_dof_index(x)) common_js_names.append(x) cmd_state = cmd_state_full.get_ordered_joint_state(common_js_names) cmd_state_full = cmd_state ## 末端控制器执行 art_action = ArticulationAction( joint_positions=cmd_state.position.cpu().numpy(), joint_indices=idx_list, ) for _ in range(3): articulation_controller.apply_action(art_action) simulation_app.close()\t# 最后进行close（这里还是需要手动点击按钮停止，因为一旦开始运行就不会退出循环） ","date":"2024-11-24","externalUrl":null,"permalink":"/docs/mpc_code/","section":"Notes","summary":"","title":"MPC（Model Predictive Control）代码逻辑：实时追踪物体","type":"docs"},{"content":"","date":"2024-11-24","externalUrl":null,"permalink":"/tags/microsoft/","section":"Tags","summary":"","title":"Microsoft","type":"tags"},{"content":" 微软商店（Microsoft Store）登录时转圈加载不出来 问题分析与解决 众所周知，微软商店和旗下的 Xbox 应用网络状况十分抽风，有时候快的离谱，有时候压根加载不出来。然而，我们如果想下载微软商店的应用或是第一次打开XGP的游戏，往往需要登录账号确认，此时加载不出来的问题就十分令人困扰。\n这里我们搜集整理各种解决问题的方法，希望有所帮助。\n方法一：修改DNS # 这种方法是我尝试过可行的，或许由于网络情况不稳定（校园网），也可能由于 IP 地址的频繁更换（科学上网），导致微软商店新登录账号转圈加载不出来。\n问题描述： # Win11系统，登录之前有记录的账号可以加载出来，微软商店界面和内容也能直接加载，只是登录新账号加载不出来。\n问题解决： # 首先打开控制面板（可以 Win+R 打开运行对话框，之后输入 Control 回车），接下来点击 网络和Internet ，点击 网络和共享中心，点击左侧 更改适配器设置，进入 网络连接 界面。\n找到你的网络连接，如果你是 WiFi，就在对应的上面右键找到 属性，宽带同理。找到 Internet协议版本 4（TCP/IPv4），点击右侧 属性，点击 使用下面的DNS 服务器地址，然后上面输入 4.2.2.1，下面输入 4.2.2.2，确定即可。\n此时，再次尝试登录新账号，就可以输入了。\n方法二：未完待续（等我再遇到这个问题且方法一失效时更） # ","date":"2024-11-24","externalUrl":null,"permalink":"/docs/microsoft_store/","section":"Notes","summary":"","title":"微软商店无法登录问题解决","type":"docs"},{"content":" 我的中国象棋学习之路 前言 # 作为中国人，我们或多或少会了解中国象棋，无论是叔伯大爷，还是街边公园，总能见到象棋的身影。然而，象棋上手较难，比起五子棋，围棋等，象棋的棋子丰富，种类繁多，下法也是多种多样，很容易劝退新人。两年前，我也还是仅仅停留在知道规则的地步，直到一个契机偶然入坑，不到一年，就提升到了业5水平，因此，我也想分享一下这段入门的经历，帮助一些小白进入象棋的殿堂。\n一、总起 # 这里要强调一点，虽然我会在本文中介绍许多象棋知识，但本文的重心在于介绍象棋的学习之路，即应该如何入门象棋，而不是单纯的学棋教程，如果你想系统的学习中国象棋，不如去各大视频网站搜索一些大师的教学，会更加权威和细致。本文重点介绍学棋的不同阶段应该做什么，以及如何快速上手。\n二、辅助工具 # 首先介绍几种辅助工具：\n象棋软件 # 当今时代，无论是爱好者还是职业棋手，都会在线上进行对弈，比较普及的有 天天象棋 和 JJ象棋 两种，选择哪种都可以。其中可以进行线上对战，还可以进行复盘和分析。我个人用天天象棋比较多，也就用此举例。\n教程来源 # 各大视频网站，搜索开局中局残局教学，以及各类专项教学。\n各大直播平台，搜索一些知名棋手和大师，可以看到直播下棋，学习思路。\n棋谱，不建议初学者看，天天象棋里就有，可以看着玩。\n三、启蒙篇 # 这里按照惯例，先介绍象棋本身，包括棋盘和棋子，走法和规则，以及一些术语和俗语。\n棋盘 # 楚河汉界（简称河界）：棋盘是对称的，中间一条空白的就是河界，分隔开双方阵营。（红先黑后，原型是历史上刘邦和项羽）\n九宫：即为老将所在的米字格，共有九个点，称为九宫。\n棋子 # 双方各有16个棋子，分别是 5个兵/卒、1个帅/将、2个炮/砲、2个仕/士、2个相/象、2个马、2个车（車）\n走法（以红棋举例，中国象棋中棋子若想移动，则不能在其移动轨迹上有其他棋子） # 帅只能在九宫内活动，且只能上下左右移动 1 格，共有 9 个位置。\n士只能在九宫内活动，且只能沿着九宫内斜线移动 1 格，共有 5 个位置。\n相只能在己方半区移动，且只能沿着田字格的对角线移动 2 格，共 7 个位置，俗称相走田。（注意：由于是沿着田字格对角线动 2 格，那么在对角线上有其他棋子时不能移动，称为别象腿或堵象眼）\n兵在过河前只能向前移动 1 格，过河后可以左右平移 1 格或是向前 1 格。\n车可以在横或竖方向上移动任意格。\n马可以在日字形的对角线上移动，俗称马走日。具体分为两步，先向上下左右某一方向移动 1 格，再沿该方向斜着移动 1 格，最后表现是移动了一个日字形。因此，若在上下左右的某方向有其他棋子，则马就不能向该方向的两个日字形移动，称为别马腿。\n炮可以在横或竖方向上移动任意格，但在吃子时，只能隔 1 个棋子吃（炮架）。\n规则 # 胜利条件：杀死对方老将，即吃掉对方的将/帅。\n吃子：如果己方棋子可以移动到某个位置，且该位置有敌方棋子，则可以直接移动到该位置，并将敌方棋子拿掉，即为吃子。（炮除外，炮隔子才能吃子，移动并不能吃子）\n将帅不能碰面：将和帅不能纵向在一条线上，且中间无子相隔。一旦碰面，另一方即可直接把老将吃掉。\n术语（读谱记谱） # 中国象棋具有棋谱，棋谱的意思是将一盘棋从开局时的状态开始，把双方的每一步都记录下来，最终达成一种残局或是决胜状态。\n棋路（纵线）：棋盘上的纵向就是棋路，红棋用汉字的一到九，黑棋用数字的 1 到 9，都是各自从右往左数。那么红二路就对应黑 8 路，红五路对应黑 5 路，也称中路。既然有汉字和数字的区别，那么就无需记录黑还是红。\n其中四路和六路又称肋道（因为在老将两肋），五路线称为中线，一路和九路称为边路。\n横线：横线一共有十条，以河界对称。从两边到中心，第一条线称为底线，第二条为底二路，因为这两条都接近于棋盘边沿。第三条线称为宫顶线（以九宫之顶命名），第四条为兵行线或卒林线（因为兵和卒初始就在这条线），第五条为巡河线，也可以叫河界。一般会以己方视角称呼对方的巡河线为己方的骑河线（巡河是防守，骑河就是侵略了）\n记谱方式：棋谱的招数记录是由四个字组成的，第一个字表示棋子名称，第二个字表示纵线的序号（汉字数字代表不同的阵营），第三个字代表移动的方向（向前则为“进”，向后则为“退”，平移则为“平”），第四个字为移动的结果（进退则表示移动的步数，平移则表示移动到哪一路）\n对于马、士、相，由于它们不走直线，所以只用“进/退”来表达，但第四个字意思是移动到哪一路。如马二进四指的是二路马前进到四路线（马二退四与之不同）\n如果两个相同的子在同一路，又如何表示呢？这时我们可以采用“前/后”来表达，如前炮进一，前车平二，后马退七等。（如果三个及以上的兵在一路怎么表示呢？三个兵则称“前中后”，四个兵则称“前二三后”，五个兵则称“前二三四后”，如果同时有两组兵，每组都是两个一路，那么就省去兵这个字，称前二平三，后四平三这样。但实际上这些情况出现很少，属于是冷门小知识了）\n俗语 # 这里收录的是一些谚语和小技巧。\n生根：指的是我们某一个子有另一个子保护，如果被保护的子被吃，下一步可以直接吃回来。被保护的子称为有根，保护别的子的子叫根。\n象棋的智慧：河界三分阔，智谋万丈深。象棋似布阵，点子如点兵。\n象棋策略：兵贵神速，抢先入局。宁失一子，不失一先。\n棋子走法：马行日，象走田，炮隔山打，车走直线，将帅不出城，小卒一去不复返。\n下棋心态：临杀勿急，稳中取胜。一招不慎，满盘皆输。死子不急吃。棋优不顾家，好比睁眼瞎。攻不忘守。\n棋子威力：一车十子寒，车正永无沉底月。车结“霸王”，铁壁铜墙。马有八面威风，马跳连环不用车。空头炮，凶恶难当。有炮需留对方士。残棋炮归家。 卒坐宫心，老帅发昏。小卒过河当大车。一马换双象，其势必英雄。卒坐宫心马一绕，将帅发呆死期到。最险不过当头炮，难防莫非拐角马。得意之时休大意，小卒过河亦英雄。\n棋子劣势：输棋只因出车迟，低头车，阵势虚。马退窝心，不死也昏。马跳边，易被歼。炮进冷巷，难兴风浪，孤炮难鸣。单车寡炮瞎胡闹。高将多危，老卒无功。\n多子配合：三车闹士，神仙难治。三子归边，将帅归天。大刀剜心，老将抽筋。插上铁门闩，老帅受熬煎。天地炮响，神兵难挡。\n棋子克制关系：开局炮胜马，残局马胜炮。当头炮，马来跳。摆上羊角士，不怕马来将。马卒难破士相全，单车难破士相全。缺士怕马，缺相怕炮，缺士怕双车。\n象棋忌讳：象眼谨防塞，马怕蹩脚，车不立险地，炮勿轻发，臭棋乱飞象，无事不支士。\n杀招：连车重炮卧槽马，城里老将挨死打。车临头，马挂角，老将活不了。小卒坐大堂，将帅活不长。\n棋品：观棋不语真君子，落子无悔大丈夫。当局者迷，旁观者清。\n四、入门篇 # 在入门之前，一定要先将启蒙篇的内容看完，至于棋谱部分可以先略过，如果想要互动式学习，可以在天天象棋中的 学棋 中找到启蒙课程。\n在基础知识了解后，我们可以先上手体验一番，但一旦你遇到了稍稍会玩的人，就会不堪一击。这是因为光是了解规则远远不够，象棋的入门门槛较高，但一旦跨过去，施展空间很大。\n那么我们该从何学起呢？其实只有两部分知识需要掌握，一为杀法，二为战术。\n杀法原理 # 象棋讲究的是排兵布阵，而非一意孤行，因此如何将子力有效的配合是制胜的关键。尤其是在子力和位置都满足条件时，如何准确快速的取得胜利，将死对方，主要就在于在对杀法的掌握。\n一般来说，我们的目的是将死对方，也就是吃掉对方老将，而不是将对方的棋子全吃光。所以，我们只需要考虑什么情况下对方的老将无处可逃，不得不被吃，这也就诞生了多种多样的杀法。\n由于老将只能在九宫内移动，因此限制老将的活动空间就是杀法的核心。一旦出现老将前后左右都无法移动的情况，且此时老将不得不移动，那么这样就将死了。一般来说，我们有一部分的子力用于限制老将的位置，使得老将无法移动，另外某些子力进行攻杀，引发将军。\n将帅类杀法：对面笑（白脸将）\n车类杀法：双车错，大刀剜心\n马类杀法：有八角马，拔簧马，钓鱼马，高钓马，挂角马，卧槽马\n炮类杀法：重炮，闷宫，天地炮，平顶灌，铁门栓（三把手），炮碾丹砂，双杯献酒\n兵卒类杀法：二鬼拍门，凤凰三点头，小鬼坐龙庭，小刀剜心\n组合类杀法：海底捞月，车马冷招，侧面虎，白马现蹄，双马饮泉，马后炮，夹车炮\n特殊杀法：困毙，闷杀\n这些是较为常见的，可以自行学习研究，思考其背后的原理（其实就是限制老将的活动空间，使得老将无处可逃）\n战术原理 # 刚才我们介绍了杀法原理，明确了下棋的目的。然而，难道我们从开局就要急切的将军、攻杀吗？并不是如此，我们需要了解象棋的策略和智慧，巧妙地达成我们的目的。\n布局三原则：大子先行，左右均衡，切忌一子多动。\n大子先行：什么是大子？车马炮就是大子，相比起来兵士象就是小子，大子要先动，前10步棋如果包含6步以上是车马炮，那么开局阵型一般不会太差。\n左右均衡：大子先行的前提下，不能只动一边的大子，另一边一点不动，这样会导致左右不平衡，阵型失调。\n切忌一子多动：一子多动，相对的，其他子就会少动。而这对于开局布阵来说是不利的，一旦多动的子被兑换掉，那么很可能会失先。\n此外，我们还需要掌握一些小技巧：双将，捉双，抽子，兑换，对捉，闪击，串打，牵制，等招，顿挫，弃子争先，先弃后取，移形换位等。\n双将：动一步却产生两个子力的将军，对方防其中一个则防不了另一个，无奈只能逃将或被将死。\n捉双：动一步同时捉两个子，对方只能舍弃一个逃一个，从而得子。\n抽子：通过将军等手段，让对方不得不应将，此时移动一个子，或是叫杀或是将军，但同时又捉一个子，对方只能应将而舍弃一子，从而得子。\n兑换：当对方有位置优势的子，我们可以选择用我们有根的劣势位置的子与之兑换，从而双双从棋盘中拿掉。主动找对方兑换叫做邀兑，不想与对方兑换从而躲开叫做避兑。\n对捉：当我们有子被捉时，与其想办法逃跑，不如选择捉对方另一个子，一旦我们的子被吃，我们也可以立刻吃掉对方的，总体上不亏。（对捉后，对方可能会逃跑，我们通过腾挪，最终可以把我们被捉的子也救出来）\n闪击：通过移形换位，从而做到捉双，且移形换位前难以让人发现，通常是出人意料的位置。\n串打：也可以叫打串，类似于捉双，通常是用炮打。意思是一条线上有两个子，其中一个被炮捉着，一旦它离开，另一个子就受攻，必丢其一。\n牵制：一般是一个子给另一个子生根，或者是两个子互相生根。然而，我们可以用有杀伤性的子将其牵制（通常是车），让这两个子难以移动，一子移动，另一子则受攻；或者只能先移动某一子，另一子才能移动。\n等招：这个技巧比较高级，通常是对方无子可动或是只能走闲时使用。我们走闲，让对方逐渐无子可动，最终困毙。\n顿挫：通过强迫对方应招，而调整自己阵型或位置的方法。通常表现为捉对方重要子力或是将军，对方躲开后，继续追击或将军，对方可能回到原位，此时相当于对方未走，而我方白白走了两步。\n弃子争先：有时必要的弃子也是成立的。对方可能因为吃你的子从而走了两三步闲棋，而你通过这个间隙创造攻势，一举制胜。\n先弃后取：往往和弃子争先同时出现，虽然弃子，但是争先，通过一系列的周转，最终让对方不得不也弃掉一子，这时相当于抹平了差距。而我们是主动弃子，对方是被动弃子，我们占优。\n移形换位：也可以叫腾挪，通过以上种种方法，我们表面上是捉双，顿挫，串打，牵制，实则移形换位，找寻时机，构建杀法，一招毙命。\n五、进阶篇 # 当你了解了入门篇的各类杀法和战术，就可以逐步开始实战练习。在正式实战前，建议先学习一套比较固定的开局。并且只学习一种开局就够了，运用熟练也能打上业 5 业 6，主要还是看杀法和战术掌握得如何。\n接下来就是广阔的象棋世界了，在这个过程中，我的建议是多复盘。天天象棋中有复盘时的评分，可以多思考自己的错棋为什么错，系统推荐的棋为什么好，这样实力很快就能提升了。\n","date":"2024-11-24","externalUrl":null,"permalink":"/play/china_chess/","section":"Funny","summary":"","title":"如何上手中国象棋","type":"play"},{"content":"","date":"2024-11-21","externalUrl":null,"permalink":"/categories/literature/","section":"Categories","summary":"","title":"Literature","type":"categories"},{"content":"","date":"2024-11-21","externalUrl":null,"permalink":"/tags/poetry/","section":"Tags","summary":"","title":"Poetry","type":"tags"},{"content":" 打油诗与定场诗诗集（包括作者原创和收集摘录的） 绝命原创（由新到旧） # 天外飞仙——作于飞机上 # 恍惚仿佛隔世间，轻舟已过万重山。\n云山雾海何人见，不可亵玩惟远观。\n良辰美景度经年，古人何处赏今颜。\n此番腾云天际线，胜似神仙落九天。\n叹水课 # 低声细语无人爱，照本宣科本无奈。\n忽闻下课铃声骇，师生无言别见怪。\n教师赞 # 琼畟入墨盅，已是日暮时分。\n巷尾点香球，化作月夜星辰。\n夜半犹灯火，感念用心良苦。\n便是践红毹，难忘诲人之恩。\n君莫叹 # 君莫叹，往事竟如烟。\n自古多情难厮守，人生难得一成全。\n相逢便是缘。\n约会 # 值此秋末晚阳天，偷得浮生半日闲。\n闲情信步赏美景，嬉笑欢闹拥芳筵。\n美食美景有何恋？只因爱人在身边。\n愿君两情长相守，头上花枝岁岁年。\n黎明飞仙（其一）——夜半作于飞机上 # 过万重山薄雾酣，山薄雾酣云淡天。\n云淡天轻舟已过，轻舟已过万重山。\n黎明飞仙（其二）——夜半作于飞机上 # 于黎明前路漫漫，前路漫漫其修远。\n漫其修远何人处？何人处于黎明前？\n冬夜期末长 # 又逢雪降，举笔环望，心彷徨。\n凝望手中书，只感冬寒期末长。\n遥想亲朋尽归乡，更添无限凄凉。\n吾身依旧在，心已悄然飘远方。\n夜读——留校备战夏令营 # 长安夜上雨初停，孤单单，冷清清。\n偌大夜幕，竟无半点星灯。万家灯火皆通明，何时故乡行？\n回想三年失意处，不若今夜动人情。\n长安夏，一声令，有谁赢？何人安眠何人醒？不过一纸功名。\n中元念故人 # 昔时未曾拜祀堂，今日驾鹤还故乡。\n三更月满中元夜，你我再叙情一场。\n蒙蒙细雨撒苍茫，短暂停泊再启航。\n秋风吹散归来客，聚日无多别时长。\n军训记 # 我向潇湘君向秦，虽似过客情乃真。\n前路漫漫其修远，愿君亦怀报国心。\n男儿何必伤离别，我辈岂是蓬蒿人！\n文能提笔安天下，武能上马定乾坤。\n和鼠头鸭脖讽（原讽为同学所作） # 鼠头鸭脖讽 # 一看你，心事一桩又一桩。\n一看你，悲剧一场接一场。\n不愿再面对空白的墙，只想静想。\n头痛时间愈长，苦闷愈难伪装。\n再能躲藏也要见光，唯有悲伤。\n可悲伤又能怎样，凄凉，可笑也可丧。\n莫笑，莫丧，莫悲伤！\n古今多少事，从来一样。\n寒来暑往，国事兴亡。\n善恶中循环，凭依真相。\n伤愁一时爽，却无妨。\n苦闷凄凉，不如投身报国郎！\n我辈青年，何不大干一场？\n莫等白头，空梦黄粱。\n清明 # 清明时节雨纷纷，路上情人胜旧魂。\n试问吾心何处往？若无缘起便封心。\n离乡（其一） # 良辰美景终到头，分分合合几时休？\n元月十五宵月夜，借此龙灯驾飞舟。\n离乡（其二） # 聚时有尽别时多，人生何必分分合？\n聚时不知别时味，别时才懂聚难得。\n默言 # 日月穿梭天天天，人生在世年年年。\n一世英名墨寞默，忍辱负重难难难。\n江东雪飘无声寒，暮秋叶落竟无言。\n何人订立生死簿，敢教日月换新天。\n秋雨 # 无边细雨洒朦朦，忽至狂风舞腾空。\n细雨不忍红枫落，何必秋风请寒冬？\n浓雾 # 前路薄云浓雾，迷醉不知归处。\n忽闻耳边厢，似有窃窃嘀咕。\n且住，且住，前方禁止进入。\n长安游 # 古迹可寻，光阴难在，宫阙楼台追往事。\n终南不老，渭水长流，诗文钟鼓入新声。\n早发白帝城（改） # 朝辞彩云白帝行，一日千里还江陵。\n猿声不住啼两岸，山过万重已舟轻。\n杀秋 # 风急雨骤，旧走新留。\n又是一年雨杀秋，数不尽万点零愁。\n万般皆从头，过往云烟一并休。\n登高楼，争上游，试问鹿死谁手？\n胜者王侯，败者寇。\n都只落得，四海漂流。\n离乡（其三） # 三更灯火五更鸡，聚时有尽又别离。\n天下何处无知己，相望何必泪戚戚。\n小马乍行嫌路窄，大鹏展翅恨天低。\n只恐人生难尽孝，何时陪伴父母亲？\n独留 # 八人寝室七人走，惟留一人守空楼。\n别离光景年年有，何必次次哀离愁。\n情真无需折杨柳，意切更比奏箜篌。\n分别不必多言语，何人相厮到白头？\n阵雨 # 来时如电去如风，未等阴时却转晴。\n正将撑伞寻庇所，却见风定放光明。\n端阳夜雨 # 端阳夜半雨瓢泼，思怀屈子葬汨河。\n若非楚君亲奸佞，谁人投河不投国？\n雷声点点思绪转，雨中游湖借纸伞。\n法海骗饮雄黄酒，却因蛇形惊许仙。\n灵芝仙草将命延，却又被骗至金山。\n金山寺内水漫漫，不及今夜雨帘天。\n高考 # 人生海海路漫漫，十八年来为一天。\n皆称人生转折点，命运前途从此变。\n人生短短命多舛，高考仅是第一关。\n劝君何必太在意，苦尽自然会回甘。\n强说愁 # 孤人孤月登孤楼，孤帆孤影驾孤舟。\n独言独饮独落寞，独梦独醒独说愁。\n知行合一 # 大道至简，亦复何言？\n修身克己，敬人自谦。\n坚忍格心，明德向善。\n欲致良知，必事中练。\n净心明理，同时实践。\n万事万物，皆有心生。\n物我同体，心即自然。\n疫情 # 连日阴来今日晴，屋内黯淡屋外明。\n疫情网课永不见，还我青春自由行。\n情深缘浅 # 一往情深深几许？深山夕照深秋雨。\n三世缘浅浅几何？浅池月影浅春鹅。\n卷 # 天上一弯新月，地下万点寒光。\n蜂拥教室学习忙，却无书声朗朗。\n每天身心疲惫，浑身困累难当。\n本想打卡操场，谁知排队巨长。\n摆——酬卷（来自于室友） # 君不见棠梨花落石板路，晚樱花开染满树。\n君不见池塘春水映斜阳，春分已过日渐长。\n习题未有做完时，青春好景不长留。\n岂因打卡恼心神？操场夜跑又无人。\n学得习，摆的烂，赏青春，谁笑我？\n闲散人如斯，终是难入卷王丛。\n条条大路通罗马，何须再论卷与摆。\n不扰他人功名路，不改此生心归处。\n众生皆在埋头卷，何人听我摆烂言？\n宅 # 清明时节连日晴，友人无踪皆出行。\n唯有揽卷遣寂寞，无己无功亦无名。\n母亲赞 # 素来温文且尔雅，天生丽质显芳华。\n生来本是千金体，贤妻良母终为她。\n闲来能舞琴棋画，忙时油盐酱醋茶。\n名媛才女遍天下，无人能比咱的妈。\n吃面 # 一月一人一碗面，亦真亦幻化独缘。\n正值孤单萧瑟处，对面无人便无言。\n三月春水融山暖，消解三冬寂寞寒。\n如此美味无处享，回首不禁泪潸然。\n舔狗叹 # 一面之缘，交流甚浅。\n万水千山，相谈甚欢。\n你情我愿，无人兑现。\n自娱自乐，可笑可叹。\n送室友 # 聚日有尽别时多，愿君归去莫蹉跎。\n不遂人愿遂天愿，人生无限待君歌。\n空街 # 孤街小雨薄纱，\n路上多少人家。\n莫非一人天下，\n谁怕？凄清寂寥无涯。\n月下孤灯 # 千家灯火万家忙，月下孤灯意彷徨。\n三皇五帝今何在，千秋百代亦黄粱。\n回家过年（收录自室友） # 相见时难别亦难，岁末终得一团圆。\n两地相思两相盼，今宵与君共无眠。\n新近三秦飘白雪，常忆北国三冬寒。\n不辞归途千里远，小爷回家过大年。\n留校过年 # 寒假留长安，归乡亦何难？\n勿撒儿女泪，尽书英雄言。\n虽无相见欢，仍有情相连。\n待到花开日，残月亦团圆。\n腊八凭栏 # 和风煦，腊八及，凭栏远望。\n笙歌起，故人离，心向何方？\n夭梦 # 梦来之快去亦快，情生之怪灭亦怪。\n有缘无分竟无奈，命是运非空谈爱。\n裸考痛 # 冬日霜寒睡意浓，却有早八闹钟。\n期中过了，不堪回首，往事从头。\n灯下独坐笔不动，无人伴，心自空。\n期末裸考，谁痛？无言上西楼。\n哀莫大于心亡 # 信至未回只因忙，等它三日又何妨？\n千金易得缘难遇，惟期此忙非心亡。\n初见 # 闲人闲时动心弦，信去未还入愁眠。\n信至却道忙中乱，欲言又止恐生憾。\n一见钟情难为情，日久年深情乃见。\n只求月老言好事，赐此良缘在人间。\n人劝既有寻情心，怎可对月空嗟叹？\n我言水到渠自成，莽撞怕是梦难圆。\n再见 # 相见时难别亦难，见时当面竟无言。\n前夜辗转难入睡，今日回思梦亦甜。\n梦 # 繁星春水惊鸿梦，玉洁冰清风骨寒。\n微风拂面心弦动，相识容易相交难。\n立冬 # 北风潜入悄无声，未品浓秋已立冬。\n雕栏玉砌今犹在，不见当年李莲峰。\n高中 # 毕业未至，意已难平。\n三年飞逝，白驹不停。\n他年同学再聚会，勿忘今日故人情。\n扶摇直上九万里，青云之巅再相逢。\n母校 # 再回母校，气象万千。\n红砖绿瓦，沧海桑田。\n师生见面，心心相念。\n再见不知，何月何年。\n师恩难忘，铭记心间。\n别八班 # 忆往昔，岁月悠悠不知分别日。\n念今朝，白驹过隙转瞬即相离。\n吾只感，家贫门寒贵人相助无留憾。\n吾只愿，姐妹兄弟同窗十载登彼巅。\n虽有蜀道之难，难于上青天，遇见知音犹可谈。\n为君歌一曲，杨柳有情亦安然。\n与其争名逐利，不如安享闲恬。\n日上三竿犹在眠，不似神仙胜神仙。\n此一去山高路远，此一别万水千山。\n劝君更进一杯酒，天下难得再八班。\n会考谈 # 天寒文难理闲，交卷不让提前。\n煎熬令人心烦，真想回家爽玩。\n还是有点遗憾，作业还没写完。\n主科落下一月，欠帐何时来还？\n莫念，莫愿，大不了明年再见。\n假期 # 国庆中秋，双节合一。\n娱乐学习，两日假期。\n考试打赌，比谁分低。\n失落惊喜，终被人欺。\n做题做事，实属不易。\n何必当真，玩笑儿戏。\n全心全意，五体投地。\n高抬贵手，容我生计。\n自省 # 天寒题难心烦，寒假连接新年。\n热度只存三天，学业步履维艰。\n能否挑战极限？能否不再平凡？\n能否突破自我？能否一飞冲天？\n高中已过大半，学习效率依然。\n今日立此省言，腰横三尺龙泉。\n笔尖牵动心尖，扶摇直上云天。\n七夕 # 鹊伴相依间，佳期又一年。\n问君何事愁？七夕亦孤单。\n有人秀恩爱，有人无人伴。\n恩爱前世福，单身命该然。\n百年同船渡，千年共枕眠。\n天公不作美，何人赐良缘？\n幻想乡 # 现世，构筑于沙土之上。\n天上，轮回着太阳月亮。\n日月，彳亍在宇宙之间。\n宇宙，蕴含了梦的回想。\n街市愈发肮脏，我却充满幻想。\n孤独凄清惆怅，寂寞戚婉迷茫。\n思绪随风飘荡，骊歌空谷传响。\n我应皈依何方？我该何从何往。\n我凝视你的脸庞，忧伤还是希望？\n感情已覆水难当，追寻你的梦想。\n你像一朵丁香，在我的心头荡漾。\n我心已成变量，因你而缘起缘荡。\n虽不及五帝三皇，也要威风堂堂。\n固然非王侯将相，还有诗和远方。\n或许是一枕黄粱，但我不再迷惘。\n胜利已在前方，指引道路的圣光。\n废除了条条框框，脱颖于人海茫茫。\n我心皈依幻想乡，此生无悔向东方。\n附东方厨同学的真幻想乡 # 红雾弥散，春雪飘扬。\n永夜未昼，花冢咲放。\n风神隐匿，地灵涌怆。\n星莲之渡，神灵无恙。\n奔月绀珠，天穹启航。\n皈依幻想，无悔东方。\n望月 # 今夜月盘大又圆，宛若白雪洒墨潭。\n千磨万击还坚劲，只留清白在人间。\n收集摘录（以下皆为非原创） # 定场诗（一） # 大将生来胆气豪，腰横秋水雁翎刀。 风吹鼍鼓山河动，电闪旌旗日月高。 天上麒麟原有种，穴中蝼蚁岂能逃。 太平待诏归来日，朕与先生解战袍。\n定场诗（二） # 曲木为直终必弯，养狼当犬看家难。 墨染鸬鹚黑不久，粉刷乌鸦白不坚。 蜜饯黄莲终需苦，强摘瓜果不能甜。 好事总得善人做，哪有凡人做神仙。\n定场诗（三） # 金山竹影几千秋，云锁高峰水自流。 万里长江飘玉带，一轮明月滚金球。 远至湖北三千里。近到江南十六州。 美景一时观不透，天缘有分画中游。\n定场诗（四） # 说书唱戏劝人方，三条大路走中央。 善恶到头终有报，人间正道是沧桑。\n定场诗（五） # 八月中秋白露，路上行人凄凉。 小桥流水杏花香，日夜千思万想。 心中不得宁静，清早览罢文章。 十年寒苦在书房，方显才高智广。\n定场诗（六） # 道德三皇五帝，功名夏侯商周。 五霸七雄闹春秋，顷刻兴亡过手。 青史几行名姓，北氓无数荒丘。 前人播种后人收，说甚龙争虎斗。\n定场诗（七） # 守法朝朝忧闷，强梁夜夜欢歌。 损人利己骑马骡，正值公平挨饿。 修桥补路瞎眼，杀人放火人多。 取道西天问我佛，佛说：我也没辙。\n定场诗（八） # 伤情最是晚凉天，憔悴斯人不堪怜。 邀酒摧肠三杯醉，寻香惊梦五更寒。 钗头凤斜卿有泪，荼蘼花了我无缘。 小楼寂寞心与月，也难如钩也难圆。\n定场诗（九） # 酒是穿肠毒药，色是刮骨钢刀。 财是惹祸根苗，气是无烟火炮。\n定场诗（十） # 依山傍水房数间，行也安然，住也安然。 一头耕牛半顷田，收也凭天，荒也凭天。 布衣得暖胜丝棉，长也可穿，短也可穿。 粗茶淡饭饱三餐，早也香甜，晚也香甜。 雨过天晴驾小船，鱼在一边，酒在一边。 路逢骚客问诗篇，好也几言、歹也几言。 夜归儿女话灯前，今也谈谈，古也谈谈。 日上三竿犹在眠，不是神仙，胜似神仙。\n定场诗（十一） # 劳劳车马未离鞍，临事方知一死难， 三百年来伤国步，八千里路吊民残。 秋风宝剑孤臣泪，落日征旗大将坛， 寰海尘氛纷未已，诸君莫作等闲看。\n定场诗（十二） # 走遍天下游遍舟，人心怎比水长流。 初次相交甜如蜜，日久情疏喜变忧。 庭前背后言长短，恩来无意反为仇。 只见桃园三结义，哪个相交到白头。\n定场诗（十三） # 天为罗盖地为毯，日月星辰伴我眠。 何人撒下名利网，富贵贫穷不一般。 也有骑马与坐轿，也有推车把担担。 骑马座坐轿修来的福，推车担担命该然。 骏马驮得痴呆汉，美妇人常伴拙夫眠。 八十老翁门前站，三岁顽童染黄泉。 不是老天不睁眼，善恶到头这报应循环。\n定场诗（十四） # 菊花发，我未发，我若发时地结沙。 遍地黄金甲，江山一把拿。 做檄文，观天下，金凤一动跨战马，独立为尊方显杂。\n定场诗（十五） # 山前梅鹿山后狼，狼鹿结拜在山岗。 狼有难来鹿搭救，鹿有难来狼躲藏。 箭射乌鸦蓬头起，箭头落在狼身上。 劝君交友需谨慎，千万莫交无义郎。\n定场诗（十六） # 隔河看见一锭金，山又高来水又深。 有心过河把金捡，恐怕王八咬脚跟。 舍了罢来舍了罢，外财不富命穷人。 猛虎虽瘦雄心在，君子身贫志不贫。\n定场诗（十七） # 荒山野岭遇强盗，至亲护送百里迢。 人间自有真情在，相逢一笑泯恩仇。 数载浮游客异乡，遥望桑梓衣未荣。 苦海难寻慈悲岸，穷穴埋没大英雄。\n定场诗（十八） # 铁甲将军夜入关，朝房待漏五更寒。 山寺日高僧未起，看来名利不如闲。\n定场诗（十九） # 拐李仙师剑法高，钟离辞官别汉朝。 国舅手持阴阳板，彩和单扬品玉萧。 洞宾背剑清风客，国老骑驴过赵桥。 仙姑进来长生酒，湘子花篮献寿桃。\n定场诗（二十） # 金银财宝价最高，光阴似箭斩人刀。 日月穿梭催人老，三道金光把人熬。\n定场诗（二十一） # 一治一乱圣人留，争名夺利几时休。 汉高祖灭秦楚，龙争虎斗。 传留到汉宪帝，三国分头。 曹孟德占天时，人称魁首。 吴孙权得地利，驾坐龙楼。 汉刘备占人和，舍命交友。 落得个无处安身，四海漂流。\n定场诗（二十二） # 野草闲花遍地愁，龙争虎斗几时休。 抬头吴越楚，再看梁唐晋汉周。\n定场诗（二十三） # 听戏听韵味，听高山流水深谷走云皆有意。 品戏品人生，品善恶忠奸离和悲欢总关情。\n定场诗（二十四） # 难难难，道德玄，不对知音不可谈。 对了知音谈几句，不对知音枉费舌尖。\n定场诗（二十五） # 一时恩爱知多少，尽在今宵了。 此情之外更无加，顿觉明珠减价。 霎时散却千金节，生死从今决。 千万莫忘情，从来守口要如瓶，莫教外人明。\n定场诗（二十六） # 南北大街东西走，十字街头人咬狗。 拣起狗来砍砖头，倒叫砖头咬了手。 有个老头才十九，嘴里喝藕就着酒。 从没见过这宗事，三轮拉着火车走。\n定场诗（二十七） # 百万大军困襄阳，外无救兵内无粮。 有朝一日城破了，女子哭爹儿喊娘。\n定场诗（二十八） # 斗大黄金印，天高白玉堂。 不读书万卷，怎能伴贤良。\n定场诗（二十九） # 三尺龙泉万卷书，上天生我亦何如？ 不能报国安天下，妄称男儿大丈夫。\n定场诗（三十） # 春天萌芽出土，夏天荷花飘飘。 秋天树叶被风摇，冬天百草戴孝。 四字并成一字，不差半点分毫。 暑去寒来杀人刀，及时行乐最好。\n定场诗（三十一） # 马有垂缰之义，犬有施草之恩。 羊羔跪乳报母恩，猿偷仙果自奔。 蛛织罗网护体，鼠盗余粮防身。 梅鹿见食等成群，无义之人可恨。\n定场诗（三十二） # 离却昆仑到地方，子牙今日娶新房。 六十八岁黄花女，七十二岁作新郎。\n定场诗（三十三） # 三皇五帝治世，朝代不断变更。 明争暗斗苦经营，何人造福百姓？\n定场诗（三十四） # 登古道，过黄庄，见一美女碾黄粮。 玉腕竿头抱，金莲裙下忙。 勤打扫，慢簸扬。 汗流粉面花含露，糠麸蛾眉柳叶霜。 勤而俭，贤而良。 窈窕不知谁家女，可惜佳人配农郎。\n定场诗（三十五） # 无情岁月紧紧催，有限光阴去不回。 人生难得几回醉，管他是是与非非。\n定场诗（三十六） # 山河表里，铁马云雕。漫嗟荣辱，酒酣听萧。 瑞雪飘飘似鹅毛，飘扬柳絮满琼瑶。 冷夜疏星飞啼鸟，粉面乌鸦把翅摇。 过路人跌跌撞撞行大道，白头翁踏雪寻梅过小桥。 山川景，举目瞧。飘飘落，荡荡摇。 云衡秦岭崎岖路，粉饰南洋旧草毛。 长空似有玉龙闹，梦回头，村内酒旗飘，上下摇。\n定场诗（三十七） # 马瘦毛长蹄子肥，儿子偷爹不算贼。 瞎大爷娶个瞎大奶奶，老两口过了多半辈儿，谁也没看见谁。\n定场诗（三十八） # 好色风流，不是冤家不聚头。 只为淫人妇，难保妻儿否。 嬉戏眼前谋，孽满身后。 报应从头，万恶淫为首。 因此上，美色邪淫一笔勾。\n定场诗（三十九） # 马瘦毛长蹄子胖，老两口子抢热炕。 老头儿要在炕头睡，老婆子还偏不让。 老头儿说他捡的柴，老婆儿说她烧的炕。 老头儿拿起掏灰耙，老婆儿抄起擀面杖。 老两口乒登乓当，打到了大天亮。 炕也晾了个冰凉，谁也没睡着热炕。\n定场诗（四十） # 饮酒不醉最为高， 好色不乱乃英豪。 无义之财君莫取， 忍气饶人祸自消。\n定场诗（四十一） # 六月三伏好热天，京西有个王家湾。 老两口儿院里正吃饭，来个苍蝇讨人嫌。 苍蝇叼走一粒儿饭，老头儿一怒追到四川。 老婆儿在家等仨月，书没捎来信没传。 找个先生算一算，先生说按卦中看，伤财惹气赔盘缠。\n定场诗（四十二） # 大燕打食四海飘，为儿孙垒下窝巢。 终日打食几百遭，唯恐儿孙不饱。 小燕将养数日，臂膀扎下翎毛。 忘了父母养育劳，展翅摇翎飞跑。 飞到旷野荒郊，遇见忍饥的狸猫。 连皮带骨一齐嚼，小燕的残生丧了。\n定场诗（四十三） # 天上一阵黑咕咚，好似白面往下扔。 倒比棉花来的冲，如柳栽花一般同。 黑狗不久身上白，白狗一会身上肿。 坟头总比馒头大，井口是个大窟窿。\n定场诗（四十四） # 腊月三十月光明，树梢不动刮大风。 刮得轱辘满街跑，让鸡蛋撞个大窟窿。 鸡蛋坏了用钉子钉，轱辘破了用线缝。 从没见过这宗事，臭虫坐月子，养活一个大狗熊。\n定场诗（四十五） # 天地玄黄宇宙浑，八月十五打了春。 那年事情好奇怪，要提起来吓坏人。 种茄子愣接独头蒜，老窝瓜变成狗头金。 杨八姐游春骑着车，哈哈大笑又泪纷纷。 她一眼哭来一眼笑，哭了声，小白脸儿的丈夫程咬金。 你大破天门阵死得苦，那本是刘伯温害你命归阴。 心中恼怒黄三太，也不该手榴弹炸死潘巧云。 乱七八糟大杂烩，到下面，三堂会审窦尔墩。\n定场诗（四十六） # 远瞧忽忽悠悠，进看飘飘摇摇。 不是葫芦不是瓢，在水中一冲一冒。 这个说像皮球，那个说像水泡。 二人打赌江边瞧，原来是两个和尚洗澡！\n定场诗（四十七） # 浪说曾分鲍叔金，谁人辨得伯牙琴？ 于今交道奸如鬼，湖海空悬一片心。 势利交怀势利心，斯文谁复念知音？ 伯牙不作钟期逝，千古令人说破琴。\n定场诗（四十八） # 手把青秧插野田，低头便见水中天。 六根清净方为道，退步原来是向前。\n定场诗（四十九） # 不是冤家不聚头，冤家相聚几时休？ 早知死后无情义，索把生前恩爱勾。\n定场诗（五十） # 忆昔去年春，江边曾会君。 今日重来访，不见知音人。 但见一抔土，惨然伤我心。\n定场诗（五十一） # 摔碎瑶琴凤尾寒，子期不在对谁弹？ 春风满面皆朋友，欲觅知音难上难。\n定场诗（五十二） # 满帘明月满庭霜，被冷香销拂卧床。 燕子楼前清夜雨，秋来只为一人长。\n定场诗（五十三） # 海鳖曾欺井内蛙，大鹏张翅绕天涯。 强中更有强中手，莫向人前满自夸。\n定场诗（五十四） # 堪羡当年李谪仙，吟诗斗酒有连篇。 蟠胸锦绣欺时彦，落笔风云迈古贤。 书草和番威远塞，词歌倾国媚新弦。 莫言才干风流尽，明月长悬采石边。\n定场诗（五十五） # 得便宜处欣欣乐，不顺心时闷闷忧。 不讨便宜不折本，也无欢乐也无愁。 广知世事休开口，纵会人前只点头。 假若连头俱不点，一生无恼亦无愁。\n定场诗（五十六） # 项托曾为孔子师，荆公反把子瞻嗤。 为人第一谦虚好，学问茫茫无尽知。\n定场诗（五十七） # 得岁月，延岁月；得欢悦，且欢悦。 万事乘除总在天，何必愁肠千万结。 金谷繁华眼底尘，淮阴事业锋去血。 临潼会上胆气消，丹阳县里萧声绝。 到头弱草胜春花，运上精金逊顽铁。 逍遥快乐是便宜，到老方知滋味别。 粗衣淡饭足家常，养得浮生一世爷。\n定场诗（五十八） # 赠君一法决狐疑，不用占龟与祝蓍。 试玉要烧三日满，辨才需待七年期。 周公恐惧流言日，王莽谦恭下士时。 假使当时身便死，一生真伪有谁知？\n定场诗（五十九） # 毁誉从来不可听，是非终久自分明。 一时轻信人言语，自有明人话不平。 祖宗制度至详明，百载余黎乐太平。 白眼无端偏固执，纷纷变乱拂人情。\n定场诗（六十） # 五叶明良致太平，相君何事苦纷更？ 既言尧舜宜为法，当效伊周辅圣明。 排尽旧臣居散地，尽为新法误苍生。 翻思安乐窝中老，先识洛阳杜宇声。\n定场诗（六十一） # 文章谩说自天成，曲学偏邪识者轻。 强辨钨刑非正道，误餐鱼饵岂真情。 好谋己遂生前志，执拗空遗死后名。 亲见亡儿阴受梏，始知天理报分明。\n定场诗（六十二） # 风兮凤兮思故乡，邀游四海求其凰。 时未遇时无所将，何如今夕升斯堂？\n定场诗（六十三） # 夜静瑶台月正圆，清风浙沥满林峦。 朱弦慢促相思调，不是知音不与弹。\n定场诗（六十四） # 朵朵峰峦拥翠华，倚云楼阁是僧家。 凭栏尽日无人语，濯足寒泉数落花。\n定场诗（六十五） # 昔年司马逢童杨，今日俞良际上皇。 若使文章皆遇主，功名迟早又何妨。\n定场诗（六十六） # 山色晴岚景物佳，暖烘回雁起平沙。 东郊渐觉花供眼，南陌依稀草吐芽。 堤上柳，未藏鸦，寻芳趁步到山家。 陇头几树红梅落，红杏枝头未着花。\n每日青楼醉梦中，不知城外又春浓。 杏花初落疏疏雨，杨柳轻摇淡淡风。 浮画肪，跃青呜，小桥门外绿阴笼。 行人不入神仙地，人在珠帘第几重？\n先自春光似酒浓，时听燕语透帘栊。 小桥杨柳飘香絮，山寺绯桃散落红。 鸯渐老，蝶西东，春归难觅恨无穷。 侵阶草色迷朝雨，满地梨花逐晓风。\n定场诗（六十七） # 每羡鸳鸯交颈，又看连理花开。 无知花乌动情怀，岂可人无欢爱。 君子好逑淑女，佳人贪恋多才。 红罗帐里两和谐，一刻干金难买。\n定场诗（六十八） # 双足立地头顶天，乌云遮盖是枉然。 左手抄起量天尺，右手推出一泰山。\n定场诗（六十九） # 闲向书斋阐古今，生非草木岂无情。 佳人才子多奇遇，难比张生遇莺莺。\n定场诗（七十） # 一尘不染，跳出三界外。 万虑皆空，不在五行中。 扫地不伤蝼蚁命，爱惜飞蛾纱罩灯。 池中有鱼钩不钓，笼中灵鸟放长生。 闷来山前观虎斗，无事林中听鸟鸣。 无忧无虑无烦恼，世态炎凉皆看清。\n定场诗（七十一） # 古来表白多白表，向来情书难抒情。 笑看少年真年少，常与生人话人生。\n定场诗（七十二） # 一吕二赵三典韦，四关五马六张飞。 黄许孙太两夏侯，二张徐庞甘周魏。 神枪张绣与文颜，虽勇无奈命太悲。 三国二十四名将，攒底邓艾与姜维。\n定场诗（七十三） # 一蓑一笠一扁舟，一丈丝纶一寸钩。 一曲高歌一樽酒，一人独钓一江秋。\n定场诗（七十四） # 灵山十万载，佛坐九莲台。 猪八戒七情六欲未丢开，孙行者五行山下苦难挨。 师徒四人朝西走，去取那三藏真经。 心无二意，一路西来。\n定场诗（七十五） # 银鞍照白马，飒沓如流星。 十步杀一人，千里不留行。 事了拂衣去，深藏身与名。 闲过信陵饮，脱剑膝前横。\n定场诗（七十六） # 人生在世天天天，日月如梭年年年。 富贵之家有有有，贫苦之人寒寒寒。 升官发财美美美，两腿一蹬完完完。\n定场诗（七十七） # 有有无无且耐烦，劳劳碌碌几时闲。 人心曲曲弯弯水，世路重重叠叠山。 古古今今多变改，善善恶恶有循环。 将将就就随时过，苦苦甜甜过眼完。\n定场诗（七十八） # 恩重山丘，五鼎三牲未足酬。亲得离尘垢，子道方成就。嗏，出世大因由，凡情怎剖，孝子贤孙，好向真空究，因此把五色金章一笔勾。\n凤侣鸾俦，恩爱牵缠何日休？活鬼两相守，缘尽还分手，嗏，为你两绸缪，披枷带杻，觑破冤家，各自寻门走，因此把鱼水夫妻一笔勾。\n身似疮疣，莫为儿孙作远忧。忆昔燕山窦，今日还在否？嗏，毕竟有时休，总归无后，谁识当人，万古常如旧，因此把贵子兰孙一笔勾。\n独占鳌头，谩说男儿得意秋，金印悬如斗，声势非常久。嗏，多少枉驰求，童颜皓首，梦觉黄粱，一笑无何有。因此把富贵功名一笔勾。\n富比王侯，你道欢时我道愁，求者多生受，得者忧倾覆。嗏，淡饭胜珍馐，衲衣如绣，天地吾庐，大厦何须搆。因此把家舍田园一笔勾。\n学海长流，文阵光芒射斗牛。百艺丛中走，斗酒诗千首，嗏，锦绣满胸头，何须夸口，生死跟前，半时难相救。因此把盖世文章一笔勾。\n夏赏春游，歌舞场中乐事稠，烟雨迷花柳，棋酒娱亲友，嗏!眼底逞风流，苦归身后，可惜光阴，懡儸空回首，因此把风月情怀一笔勾。\n定场诗（七十九） # 清茶竹串春三暖，纸墨梅烟梦五寒。 一捧熙熙如我愿，哪管名利奈何然。 不知云中公卿贵，且养山间草木年。 世事纷争如嚼蜡，观月听风莫等闲。\n定场诗（八十） # 帝王说待我君临天下，许你四海为家。 国君说待我了无牵挂，许你浪迹天涯。 将军说待我半生戎马，许你共话桑麻。 书生说待我功成名达，许你花前月下。 侠客说待我名满华夏，许你当歌纵马。 琴师说待我弦断音垮，许你青丝白发。 面首说待我不再有她，许你淡饭粗茶。 情郎说待我高头大马，许你嫁衣红霞。 农夫说待我富贵荣华，许你十里桃花。 僧人说待我一袭袈裟，许你相思放下。\n定场诗（八十一） # 上九流： 一佛祖，二仙，三圣贤，四官，五公卿，六相，七僧，八道，九庄田； 中九流： 一评书，二医，三卜筮（算命），四棋（棋师），五丹青（画匠），六仕（兵卒），七横（说客），八义（侠客），九打渔； 下九流： 一高台（唱戏），二吹（吹鼓手），三马戏，四剃（剃头），五池子（开澡堂），六搓背，七修脚，八配（配种的），九娼妓。 定场诗（八十二） # 十里长亭无客走，九重天上现星辰。 八河船只皆收港，七千州县尽关门。 六官五府回官宰，四海三江罢钓纶。 两座楼头钟鼓响，一轮明月满乾坤。\n定场诗（八十三） # 春有百花秋有月，夏有凉风冬有雪。 若无闲事挂心头，便是人间好时节。\n相关资料 # 1.贯口及戏曲词等文集\n2.定场诗、贯口收集\n","date":"2024-11-21","externalUrl":null,"permalink":"/play/poetry/","section":"Funny","summary":"","title":"我的诗集","type":"play"},{"content":"","date":"2024-11-19","externalUrl":null,"permalink":"/tags/configuration/","section":"Tags","summary":"","title":"Configuration","type":"tags"},{"content":" “NVIDIA-SMI has failed because it couldn\u0026rsquo;t communicate with the NVIDIA driver. Make sure that the latest NVIDIA driver is installed and running.”问题分析与解决 前言 # 今天在运行 vscode 代码时，报错 RuntimeError: No CUDA GPUs are available ，令人差异，遂进入命令行检查，发现似乎掉显卡驱动了。（注：本文出乎意料的包含但不限于重装显卡驱动，重装WIFI驱动，修改Linux内核版本等问题的解决，如果此过程仍未解决你的问题，欢迎留言讨论）\n问题描述 # 1.命令行输入：\nnvidia-smi 输出：\nNVIDIA-SMI has failed because it couldn\u0026#39;t communicate with the NVIDIA driver. Make sure that the latest NVIDIA driver is installed and running. 2.此时检查 cuda，输入：\nnvcc -V 意外的输出：\nnvcc: NVIDIA (R) Cuda compiler driver Copyright (c) 2005-2022 NVIDIA Corporation Built on Wed_Sep_21_10:33:58_PDT_2022 Cuda compilation tools, release 11.8, V11.8.89 Build cuda_11.8.r11.8/compiler.31833905_0 说明驱动存在。\n3.输入\nls /usr/src | grep nvidia 可以得到当前的驱动版本号：nvidia-535.183.01\n解决办法 # 1. # 根据网上的解决办法，首先尝试：\nsudo apt-get install dkms sudo dkms install -m nvidia -v 535.183.01 其中第 2 行 535.183.01 表示的是驱动版本号，应该替换为自己的驱动版本号）\n可是结果却是：\nModule nvidia/535.183.01 already installed on kernel 6.8.0-48-generic (x86_64). 再次输入 nvidia-smi 依然报错。\n2. # 尝试另一种办法，在 ubuntu 开机启动项中选择 advanced 模式，其中选择版本号不同的上一内核启动，依然无效。\n经过询问，猜测可能是内核版本自动更新过高，导致装不上驱动（本机内核版本为 6.8.0-48-generic），于是开始搜索如何安装低版本内核。\n3. # 安装低版本内核，这里以 5.15.0-25-generic 举例。首先查看 grub 版本：\ngrub-install --version 结果是：grub-install (GRUB) 2.06-2ubuntu7.2\n其中版本很重要，我的是 2.06 ，大于 2.00，若是小于 2.00 的在下面的步骤中有区别。\n接下来查看自己现有的内核版本（在Ubuntu启动项页面，查看advance项也能看到），输入：\ngrep \u0026#39;menuentry\u0026#39; /boot/grub/grub.cfg 可以得到如下结果：（7-10行就是 linux 内核）\nif [ x\u0026#34;${feature_menuentry_id}\u0026#34; = xy ]; then menuentry_id_option=\u0026#34;--id\u0026#34; menuentry_id_option=\u0026#34;\u0026#34; export menuentry_id_option menuentry \u0026#39;Ubuntu\u0026#39; --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option \u0026#39;gnulinux-simple-81fae8c4-e902-410a-a709-dd3d57a11e8b\u0026#39; { submenu \u0026#39;Advanced options for Ubuntu\u0026#39; $menuentry_id_option \u0026#39;gnulinux-advanced-81fae8c4-e902-410a-a709-dd3d57a11e8b\u0026#39; { menuentry \u0026#39;Ubuntu, with Linux 6.8.0-48-generic\u0026#39; --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option \u0026#39;gnulinux-6.8.0-48-generic-advanced-81fae8c4-e902-410a-a709-dd3d57a11e8b\u0026#39; { menuentry \u0026#39;Ubuntu, with Linux 6.8.0-48-generic (recovery mode)\u0026#39; --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option \u0026#39;gnulinux-6.8.0-48-generic-recovery-81fae8c4-e902-410a-a709-dd3d57a11e8b\u0026#39; { menuentry \u0026#39;Ubuntu, with Linux 6.8.0-47-generic\u0026#39; --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option \u0026#39;gnulinux-6.8.0-47-generic-advanced-81fae8c4-e902-410a-a709-dd3d57a11e8b\u0026#39; { menuentry \u0026#39;Ubuntu, with Linux 6.8.0-47-generic (recovery mode)\u0026#39; --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option \u0026#39;gnulinux-6.8.0-47-generic-recovery-81fae8c4-e902-410a-a709-dd3d57a11e8b\u0026#39; { menuentry \u0026#39;Windows Boot Manager (on /dev/nvme0n1p1)\u0026#39; --class windows --class os $menuentry_id_option \u0026#39;osprober-efi-BE9A-11EB\u0026#39; { menuentry \u0026#39;UEFI Firmware Settings\u0026#39; $menuentry_id_option \u0026#39;uefi-firmware\u0026#39; { 接下来安装想要的旧版本，输入：\nsudo apt install linux-image-5.15.0-25-generic 之后修改 /etc/default/grub 文件，输入：\nsudo gedit /etc/default/grub 将 GRUB_DEFAULT=0 的 0 替换为一段文本：这里与前面的 grub 版本有关：\n如果是小于2的版本，先复制上面第6行的 submenu 后面的句子 Advanced options for Ubuntu，接下来输入一个 \u0026gt;，接下来复制上面第7行 menuentry 后面的句子，并把版本改为上面新下载的版本 Ubuntu, with Linux 5.15.0-25-generic。最终结果为 GRUB_DEFAULT=\u0026quot;Advanced options for Ubuntu\u0026gt;Ubuntu, with Linux 5.15.0-25-generic\u0026quot; 如果是大于2的版本，先复制上面第6行的 $menuentry_id_option 后面的句子 gnulinux-advanced-81fae8c4-e902-410a-a709-dd3d57a11e8b，接下来输入一个 \u0026gt;，接下来复制上面第7行 $menuentry_id_option 后面的句子，并把版本改为上面新下载的版本 gnulinux-5.15.0-25-generic-advanced-81fae8c4-e902-410a-a709-dd3d57a11e8b 。最终结果为 GRUB_DEFAULT=\u0026quot;gnulinux-advanced-81fae8c4-e902-410a-a709-dd3d57a11e8b\u0026gt;gnulinux-5.15.0-25-generic-advanced-81fae8c4-e902-410a-a709-dd3d57a11e8b\u0026quot; 值得注意的是，GRUB_DEFAULT= 后面的文本要带有双引号，中间的大于号不要忘了。 对于 ubuntu22.04 系统，还需要在末尾加入一段 GRUB_DISABLE_OS_PROBER=false 最后执行更新命令：\nsudo update-grub 为避免出现 kernel headers are incomplete 的问题，直接将 kernel header 装一下：\nsudo apt-get install linux-headers-5.15.0-25-generic 接下来重启，结果在启动Ubuntu时，载入内核时报错：Shim签名无效\n无奈只能解决签名无效的问题。\n4. # 经过搜索，最简单的方法是在 bios 中将安全启动关闭，尝试有效，输入：\nuname -r 输出：5.15.0-25-generic\n处于崩溃边缘的我看到了一丝希望，这时重新安装驱动，诶？我wifi图标去哪了？\n使用 iwconfig 命令，结果是：lo no wireless extensions.。并且发现使用原来的 6.8.0-48-generic 内核启动，可以正常连 wifi。？？？，去官网得知最新的版本驱动只支持内核版本 6.1 以上的，推测是内核改动导致驱动不识别，需要找一个适合内核版本的驱动。\n5. # 首先查看网卡型号（可以使用能联网的内核启动查看），我的型号是 Intel AX211 Wi-Fi6，在能联网的内核启动，执行：\nsudo apt install flex bison git clone https://github.com/intel/backport-iwlwifi.git 接下来到无驱动的内核，输入：\ncd backport-iwlwifi cd iwlwifi-stack-dev sudo make defconfig-iwlwifi-public sudo make sudo make install 接下来重启，wifi图标回来了。\n6. # 回到我们的正题，安装显卡驱动，首先在官网下载驱动安装包。\n接下来先禁用 nouveau：\nsudo gedit /etc/modprobe.d/blacklist-nouveau.conf 在文件中加入两行：\nblacklist nouveau options nouveau modeset=0 更新一下：\nsudo update-initramfs -u 之后重启，重启之后验证一下是否禁用成功：\nlsmod | grep nouveau 如果无输出，则禁用成功。\n接下来开始驱动安装，首先找到驱动文件（通常在主目录下的 Downloads 目录），进入目录：\ncd Downloads 这里以我下载的 NVIDIA-Linux-x86_64-535.154.05.run 举例。\n卸载原有驱动，并给新下载的 .run 文件赋予执行权限（第3行的 -no-opengl-files 意思是只安装驱动文件，不安装 OpenGL 文件）：\nsudo apt-get remove nvidia-* sudo chmod a+x NVIDIA-Linux-x86_64-535.154.05.run sudo ./NVIDIA-Linux-x86_64-535.154.05.run -no-opengl-files 一路 Enter，最后挂载驱动：\nsudo modprobe nvidia 最后的最后，我们检查一下驱动安装情况：\nnvidia-smi 成功显示！但是这里我又遇到了问题，虽然成功显示了 nvidia-smi 界面，但显卡栏并未读出来显卡，反而显示无显卡设备，代码也依然跑不起来。\n7. # 换一种安装方法吧，这里换成用PPA方法命令行安装。\n首先先将上面的所有驱动全部删除（前3行是删除命令行安装的驱动；4-7行是卸载用 .run 文件安装的驱动）：\nsudo apt-get --purge remove nvidia* sudo apt-get --purge remove \u0026#34;*nvidia*\u0026#34; sudo apt-get remove --purge nvidia-*（/nvidia*) cd /usr/bin ls nvidia-* sudo nvidia-uninstall sudo /usr/bin/nvidia-uninstall 全部尝试过后，查看一下是否卸载干净：\nls /usr/src | grep nvidia 接下来添加PPA镜像源，开始安装：\nsudo add-apt-repository ppa:graphics-drivers/ppa sudo apt-get update ubuntu-drivers devices 会出现许多推荐的驱动版本，没有我们想要的也没关系。（我的显示如下）\n== /sys/devices/pci0000:00/0000:00:01.0/0000:01:00.0 == modalias : pci:v000010DEd00002783sv00001B4Csd000018CAbc03sc00i00 vendor : NVIDIA Corporation manual_install: True driver : nvidia-driver-560-open - third-party non-free driver : nvidia-driver-550-server - distro non-free driver : nvidia-driver-550-open - third-party non-free driver : nvidia-driver-550 - third-party non-free driver : nvidia-driver-560 - third-party non-free recommended driver : nvidia-driver-555 - third-party non-free driver : nvidia-driver-550-server-open - distro non-free driver : nvidia-driver-555-open - third-party non-free driver : xserver-xorg-video-nouveau - distro free builtin 但是这里我们想安装 535 版本的驱动，直接尝试：\nsudo apt install nvidia-driver-535 安装完成后重启，再次检测：\nnvidia-smi 成功显示显卡型号！\n在系统设置中的关于也可以看到显卡能检测为 NVIDIA 显卡：\n最后的最后，跑代码也能顺利运行，真正成功！\n8. # 为了避免以后遇到同样的问题，可以将系统更新，内核更新等全部关掉。\n输入：\nsudo gedit /etc/apt/apt.conf.d/10periodic sudo gedit /etc/apt/apt.conf.d/20auto-upgrades 将这些后面参数全部设为 0。\n再输入：\nsudo apt-mark hold linux-image-5.15.0-25-generic sudo apt-mark hold linux-headers-5.15.0-25-generic sudo apt-mark hold linux-modules-5.15.0-25-generic 使得软件包保持现状，可以查看hold的软件包：\nsudo apt-mark showhold 若想取消hold，可以输入：\nsudo apt-mark unhold linux-image-5.15.0-25-generic sudo apt-mark unhold linux-headers-5.15.0-25-generic sudo apt-mark unhold linux-modules-5.15.0-25-generic 另外，在 Software \u0026amp; Updates（软件和更新）中，找到 update（更新）标签，将 Automatically check for updates（自动检查更新）选项设为 Never（从不），如图：\n后记 # 这个问题真是浅入深出啊，本来以为是个简单的掉驱动问题，没想到解决了一圈，花了一整天时间，Ubuntu 你罪该万死啊！ 参考文献 # 1.NVIDIA驱动失效简单解决方案：NVIDIA-SMI has failed because it couldn‘t communicate with the NVIDIA driver.\n2.显卡驱动报错：NVIDIA-SMI has failed because it couldn’t communicate with the NVIDIA driver.v\n3.Ubuntu22.04回退系统内核\n4.Secure Boot时，提示内核签名无效\n5.ubuntu20.04.6安装Intel AX211网卡驱动 2024.8\n6.Ubuntu下安装nvidia显卡驱动\n7.Ubuntu中之前安装好Nvidia驱动driver但是检测不到的解决(仅供参考）\n8.Ubuntu 在线安装NVIDIA驱动——PPA方式\n9.从 apt 升级中排除/保留/阻止特定软件包的三种方法 10.ubuntu20.04关闭内核自动更新、禁止/取消系统自动更新的方法\n","date":"2024-11-19","externalUrl":null,"permalink":"/docs/nvidia_driver/","section":"Notes","summary":"","title":"NVIDIA显卡驱动安装与修复","type":"docs"},{"content":"注意：作者并没有真正教育过其他小孩，也没有见识过别人教育小孩的过程。因此，本文主要由作者童年的经历以及理论上的推理组成。请在实践时有所变通、因材施教。\n摘要：小孩的教育主要来源于家庭和学校，而家庭的教育应该重点在三观和思想的培养，以及健全的心灵，坚韧的意志等，初中之后就不应该再进行。学校的教育只能间接参与，不应施加过多压力，导致家庭学校包夹孩子。\n​\t教育是一个很大的词，我不是教育学专业，也并未读过什么教育相关资料，所以我不想讨论教育本身，而是聊一些有趣的现象，希望能有所启发。\n​\t正如题目所言，本文的主题是小孩的教育，那么首先我们可以思考一下小孩教育的构成。我们每个人都当过小孩，一般来说，我们受到的教育会分为三部分：来自家庭的（包括父母和亲戚）、来自学校的（包括老师和同学）以及来自社会的（可能是媒体或其他）。那么我们的教育就要从这三方面去考虑，来自社会的影响我们很难去干预，因此只考虑前两种情况。\n​\t首先是来自家庭的教育，孩子和成年人不同的地方在于孩子容易接受新事物，换句话说就是容易塑造，并不像成年人有自己的舒适圈。因此对于父母而言，应该教会孩子的是一些根本上的理念和方法，而并非全是知识。当然，父母也要教一些常识，但更应该注意的是三观和哲学层面的东西。现在许多家长实行胎教、早教，早早的让孩子学英语、背古诗、参加各类兴趣班等，虽然孩子的学习能力十分强大，但不能本末倒置，而是应该把重心放在三观和思想的培养上。\n​\t上面说的是理论上的，接下来我想详细说一下实践的方案。\n对于一个刚出生的婴儿，我们能做的应该是营造一个良好的环境，而不是早早送去幼儿园或是什么机构进行教育，我们只需要让婴儿能健康快乐的长大就够了。 当婴儿在充满爱的环境中成长到2-3岁时，我们就可以进行熏陶，当然，这种熏陶往往是不经意的，往往父母什么样，孩子就会什么样；父母如果受过高等教育，注意言谈举止，爱好琴棋书画，那么孩子自然会潜移默化的模仿；反之，孩子也会模仿，只是在以后的阶段才会显现。 当孩子成长到5-6岁时，需要着重教育和培养一下服从性，这时需要恩威并施，通俗的话来讲，其实就是树立父母的威严，同时培养孩子的听话和懂事。至于恩威并施，其实就是父母要一个唱红脸，一个唱白脸，通常是和孩子异性的恩，和孩子同性的威（儿子的话就是父亲严厉，母亲温柔；女儿则相反）目的是让孩子有一个无条件服从的保障，当出现无法说理或是温柔教育不了的情况，可以实行强制措施，避免出现任性到无法无天的地步。如果你是一个成熟的人，就能理解到这一条并非对孩子不好，反而是父母的良苦用心。 服从性是后面教育的前提，如果没有服从性，父母说什么孩子都不听，又何谈教育呢？当孩子具有服从性后，我们也要注意不能滥用威严，也就是说不要让孩子从甘愿听从于你变成怕你，这时教育也会失效，因为孩子忽视了教育的内容本身，而是重视了你的个人威严。 当孩子具有服从性后，这是也到了上学的年纪，我们应该培养的一个观念就是：**要听老师的话，好好学习，好好听课。**而且这不能变成说教，而是应该变成一个潜移默化的观念。我觉得家长可以做的就是尊重老师，以及提高老师的话语权，使得孩子对家长的服从性过继到老师上；而不应该处处和老师对着干，溺爱孩子，这样会削弱老师的威严，从而孩子在学校也会无所管束、肆意生长。 小学毕业前，家长应该多进行教育，但不应该给过多压力，小孩的心灵还不够成熟，应该尽量培养孩子积极乐观的心态。但不应该把这种不成熟作为不尊重孩子的原因，依然应该**尊重孩子的人格，使得孩子感受到自己被重视、具有话语权。**孩子希望得到尊重和表扬，这样会使得小孩的心态变得积极阳光，同时也会自发的懂事和成熟。（也就是说，避免表现出“小孩懂啥？”“小孩能做到这样已经很好了！”类似的想法，而是应该用成人的标准去表扬他，例如“你这件事办得比我都好！”） 上了初中后，孩子会开始出现逆反心理，服从性也会降低，并不那么听话了，这时就需要家长也跟着改变。家长不再应该卖弄自己的权威，而是将孩子的地位提高，**尊重和理解孩子，多进行平等的沟通。**目的是使孩子将自己的地位提升，让孩子有这样一种认知“我已经是一个成熟的人了，有自己的想法和责任，没人再拿我当小孩了。”同时，对孩子的教育应该转变形式，将学校和老师作为白脸，父母应该唱红脸，和孩子站在统一战线，多做关心和平等交流，潜移默化的教育。 ​\t至此，来自家庭的教育就基本结束了。之后的高中、大学或者工作之后，来自家庭的教育占比会越来越小，但是重要性越来越高，家长的教育方式只需要延续初中阶段的即可。\n​\t另一方面就是来自学校的教育，而这里我们只能进行间接影响。首先就是我们可以为孩子选择一个好的学校。这里说的好学校指的是一个好小学和好初中，之后的学校影响不大。与其说是好学校，不如说是好老师，好应该好在哪呢？对于小学来说，应该是负责，有爱，能一视同仁，更注重人格而不是成绩；对于中学来说，应该负责，奖惩有度，尊重人格。但是这样的情况往往并不容易出现，我们只能因地制宜，对于老师所不具备的特质家长进行辅助。其次，我们可以多与老师沟通，把自己的想法通过老师传达出来。这里可以用相声中的师徒关系举例：父亲是不能收儿子为徒的，必须交给别人教，这是因为父亲很难抛开父子关系下狠心教育，同时儿子也很难听话，往往有偷懒心理。因此让别人教自己的孩子，老师也能管住、学生也能听话，而这个时候可以通过联系老师，从而传达自己的想法，间接实现自己的目的。最后，我们在某些情况要与孩子在统一战线，与孩子保持沟通，让孩子认为自己和父母是无话不谈的，这样才能及时获取孩子在学校的思想变化。但是也不能硬要窥探孩子的隐私，要以尊重为前提进行沟通，而不是让孩子一览无余。\n​\t综上所述，作为家长，我们只有初中及之前短短十几年的时间用来教育，而这十几年的教育往往决定人的一生。我们应该教育的是孩子学会如何去思考问题，培养自己的三观，拥有独立思想。应该培养我们与孩子的关系，让孩子具有充实的童年，积极乐观的心态，以及能够承受挫折的意志。一旦根本问题解决，我们就无需担心未来孩子的发展和变化。不夸张的讲，高中及以后的所有教育，都是在童年所受教育种子上的发芽与开花。甚至有些只是装饰，并不会触及种子的根系。教育看上去并没有我说的这么复杂，但实际上远远比我写的复杂得多。\n​\t最后说一句题外话，也是一个有趣的现象：我们都是只当一次孩子，父母也往往是第一次当父母。因此他们的教育方法，往往都是以自身的经历和他们的父母的方法结合而来，正所谓家传。他们父母的方法造就了他们，而人通常不会看到自己的问题，所以也会把自己认为好的东西传给下一代；但同时，他们在小时候也会有一些糟糕的经历，而这些他并不会传下去，甚至有可能做的完全相反。举个简单的例子，小时候经常挨打的父亲，通常不会经常打自己的孩子，甚至可能完全不打，导致孩子一点皮肉之苦也受不到，这或许也不是什么好事。而如果父亲小时候很穷，教育孩子的金钱观可能就不完整不合理，这也不是什么好事。因此，我们在教育时还是应该先反省自身，把适合于时代、适合于家庭情况的教育方法整理下来。\n","date":"2024-11-18","externalUrl":null,"permalink":"/about/educate_children/","section":"About me","summary":"","title":"如何教育小孩？","type":"about"},{"content":"摘要：当今时代，要求我们终身学习，那么如何保持学习能力和热情就变得十分重要。接受新事物，首先需要好奇心；在好奇心驱使下，我们会浅浅尝试；若浅尝得到了正反馈，我们逐渐就会形成兴趣，从而深入了解；在此过程中不可避免的会遇到困难，但若我们的热情超过了困难的阻碍，我们就会克服困难，从而小有成绩，达到一个资深状态；而达到这个状态之后，就已经解决了我们题目中的问题——新事物已经被完全接受并且不再新了。\n​\t人的一生，不可避免要接触新事物、涉猎新领域或诸如此类，无论多大年纪，无论身处何地，都不可避免地要善用此技能。\n​\t首先思考这样一种情况，让一个成年人和一个小孩子去接触新的事物，谁接受的更快？答案当然是小孩子，原因何在？抛开学习能力更强这种表层原因，我想，是因为小孩的好奇心更强，奇思妙想更多，因此容易对新事物感兴趣，也就更容易接受新事物。\n​\t由此，我们提出关键因素：好奇心。好奇心指的是：想要知道接触新事物后会有怎样的结果和反馈，并对这种结果和反馈充满热情。如果我们有了好奇，在此基础上，我们可以对新的事物进行浅尝，在浅尝之后，如果我们获得了正向的反馈或是令人愉悦的结果，那么我们逐渐就会形成兴趣；在兴趣的基础上，可能我们会进行更深入的了解，这时可能会遇到困难和阻碍，但当我们热情大于困难时，我们就能克服困难，最终达到一个较深的程度，即在这个新领域有所涉猎；更进一步就是在这个领域有所建树，这就不在我们此次的讨论范围了。\n​\t总的来说，我们由好奇心变为兴趣，由兴趣转为坚持，再由坚持变成研究等等。以上便描述了我们接受新事物并深入的过程。\n​\t现象我们清楚之后，如何才能做到主观地、主动地接受新事物，怎么样才能走出自己的舒适圈呢？\n​\t我们还是回到接受新事物的过程的原理。既然源头是好奇心，那我们在遇到新事物前就应该保有对世界的好奇心。对世界充满好奇，我们自然容易接受新事物。那么问题又来了，我们如何产生好奇心呢？回到最初的例子，一个成年人和一个小孩，当然是小孩的好奇心胜于成人。而我们每个人都有过童年，因此，解决办法很简单，只要我们回想一下童年，保持一颗童心，卸下成人的伪装，以单纯的心灵感触事物，就能重新拥有好奇心，也就从源头上解决了接受不了新事物的问题。这个结论看起来十分天真、理想化，但这恰恰可以印证本文的论点。如果你能够接受这个结论，那么说明你已经有了这种单纯的心灵，很容易就能接受新事物；反之，你还是在坚持自己的成熟和框架，并不允许自己接触天真。\n​\t那么好奇心有了，接下来就是兴趣。这个过程在我看来起决定性作用的就是正反馈。如果在好奇心的驱使下，我们接触了新事物，并且得到了正反馈，我们就会产生更多好奇，最终就成了兴趣；反之，如果得到的是负反馈，就会产生挫败心理，认为此物不适合自己，从而放弃，更无兴趣可言。以学习编程举例，如果我们看到一个有趣的程序，想知道它是怎么写出来的，这就是好奇。在好奇的驱使下，如果我们想直接写一个复杂程序，一般很难成功，这时我们会感觉到编程很难，产生挫败感，那么多半就会就此放弃；反之，如果我们选择写一个入门程序，通过简单的尝试我们就能成功，此时可能会感到编程并不难上手，这种正反馈给了我们更多的好奇和动力，于是就产生了兴趣。\n​\t再深入思考一下如何构建兴趣，由于兴趣是在好奇的基础上获得正反馈（或者说避免负反馈），那么我们容易想到的办法就是在入门时尽量做简单的尝试，使好奇心不因为尝试而损耗，反而因为尝试而增多。但这种尝试又因人而异，有的人适合有挑战性的尝试，有的人一点点困难都受不了，但这都是正常的，寻找适合自己的尝试的方法才是最困难的。\n​\t如果我们很幸运，成功地将好奇转变为了兴趣，就会遇到另一个难题：如何将兴趣坚持下去。一旦将兴趣坚持下去，我们就能在这个领域有一定的成果，也就真正踏足这个新的领域，兴趣也就可以被称为一种热爱。其实，兴趣能否坚持下去，取决于这个兴趣对自己的意义。如果你在探索这个兴趣的过程中，发现了这个兴趣对你非同寻常的意义，那就很有可能坚持下去。这个意义可能是让你找到自信，可能是让你生活充实，也可能是让你找到自身的价值。总之，当你找到了这个兴趣对你独特的意义，你就很可能克服暂时的困难，主动的深入研究这个兴趣，最终将兴趣转变为所擅长的一个领域。\n​\t举个例子，假设我们想要接触“自媒体”这个新领域。首先，要保持好奇。做视频也好、直播也好，看起来又轻松又有趣，还能创作自己的内容，分享自己的才艺，如果我要是也做自媒体，会有怎样的快乐呢？其次，要选择适合自己的尝试方法，目的使自己获得正反馈。我喜欢分享，不如拍点自己的读书心得，写点影评、游戏测评；我喜欢互动，不如做一场聊天直播、做一些话题讨论；我喜欢技术，不如学学剪辑、配音，做一个系列的技术教学视频\u0026hellip;接下来，要注重正反馈的获取。获得的第一个点赞、收藏、关注，收到的第一条互动评论，做一系列视频的成就感，将自己的视频分享给朋友的满足感等等，这都会形成正反馈，慢慢就会形成兴趣。最后，找到做自媒体的意义。如果只是三分钟热度，播放量不温不火，那么正反馈并不能持续获得，兴趣也就慢慢平淡了；如果找到了些许意义，那么就能将自媒体这件事持续下去。我做视频的过程中有创作的愉悦感，我直播和人们互动时有聊天的热闹感，我发视频时分享给朋友有分享的喜悦感，我看后台数据慢慢上涨时有养成的幸福感\u0026hellip;这些都可以成为做自媒体的意义，而拥有某种或某些意义，就能使我们的兴趣慢慢培养成热爱，最终可能会有所成绩。\n","date":"2024-11-15","externalUrl":null,"permalink":"/about/accept_new/","section":"About me","summary":"","title":"如何接受新事物？","type":"about"},{"content":"摘要：迷茫是我们都会经历的状态，解决的办法就是规划，或者说安排；而具体如何做到有安排、有规划？就要靠我们持续的获取信息。\n​\t人生中无非两种状态，一种是迷茫，一种是暂时的不迷茫。\n​\t我们不妨回想一下，什么时候不迷茫呢？我想，我们最不迷茫的时候就是学生时代，大学之前，我们只知道专心读书考大学，或许有时会短暂的迷茫，但最终都会回到正轨。例如小学时，我们清楚知道自己要上6年小学，并且毕业后会去初中，因此我们根本不会思考未来要怎样，也并不会产生迷茫；但当我们面临大学毕业的选择时，未来的路是未知的，我们并不能对未来有清楚的认知，因此可能会陷入迷茫。\n​\t综上所述，如果我们对今后一个阶段甚至几个阶段有较为清楚的认知，我们当下就不容易变得迷茫，而这种认知就是规划和安排。\n​\t规划和安排并不一定是既定的，也可能是我们主观上的计划（这也正是我想强调的）。以大学毕业的选择为例，有的人保研了，有的人在考研，有的人拿到了工作的offer。那么，谁比较迷茫呢？答案是，没有人迷茫。保研的人已经决定了接下来三年的学校，工作的人确定了接下来一段时间的工作单位，而考研的人呢，他们在考研阶段只需要安心准备复习，在这个阶段，他们是有安排的，因此并不会（至少不该）迷茫。那么为什么还是会有人迷茫？正是因为对未来的范围理解不同。\n​\t无论是哪种人，如果认为未来就是下一秒，那他永远都不会迷茫，因为下一秒大概率是已知的；那么如果认为未来是30年后，那永远都不会脱离迷茫。同样一个人，如果让他预测明年的情况，他一定说的十分肯定；但若是问他五年后会怎样，他多半会迷茫。我们总是劝迷茫的人要有个目标，其实更确切的说应该是有个看得见的目标，再进一步说就是可预测的未来。\n​\t既然已经知道明确的安排或是可预测的未来可以避免迷茫，那么如何才能有明确的安排和可预测的未来？我认为是信息。\n​\t当我们对下一个阶段拥有足够多（哪怕仅仅是我们自认为足够多）的信息，我们就不会对未来的下一个阶段产生迷茫。依然用学生生涯举例，我们之所以小学不迷茫就是因为我们对初中足够了解（至少我们认为和小学没有本质区别）；在高考结束后，我们因为知道将会上大学，因此不迷茫（至少我们对大学这个概念有一些了解）；但在刚进入大学时，多半会迷茫，正是因为大学生活与我们想象中并不很一样；但经过一段时间的获取信息，我们对大学有了了解，因此大学生活也就不迷茫了\u0026hellip;\n​\t这里我们要强调一下，获取足够的信息、拥有确定的安排可以使得我们对下一个阶段不迷茫，但并不能代表我们要完全掌握未来，并不是意味着未来变得索然无味、没有可探索的地方。生活本身依然充满未知，我们依然要经历新奇事物，只是我们在心理上，在前提上对这个阶段有所预期。\n​\t总结一下，人生离不开迷茫，而对抗迷茫的方法就是有所预期，而预期的构建取决于能否获得足够的信息。因此，我们应该时刻了解未来的信息，时刻编制未来的规划。获取的信息越多，我们的规划也就越贴合真实的未来，我们也就更容易避免迷茫。\n","date":"2024-11-14","externalUrl":null,"permalink":"/about/confused/","section":"About me","summary":"","title":"如何对待迷茫？","type":"about"},{"content":"注意：本篇内容十分抽象，姑妄言之，姑妄听之～\n​\t中二 ，是一个常见却又难以界定的词。人们通常对它的理解就是表现出天真、幼稚或是说出一番自以为是的话，令人无语又哭笑不得。而wiki上对于中二病的解释为“泛指一种自我认知心态，用以形容一些经常自以为是地活在自己世界、做出自我满足的特别言行，或做出自己一些自认为帅气的动作但同时稚气未脱的人”。\n​\t总的来说，中二是一种自我意识过盛的状态，是思想不成熟，沉迷在幻想之中的表现。\n​\t但是，每个人的童年或多或少都会经历这一状态：模仿动画中的角色也好，模仿电视剧中的人物也罢，甚至觉得自己也能像书中的人物一样经历千奇百怪的冒险，使用千变万化的能力\u0026hellip;也正是这些经历使我们的童年生活变得丰富多彩，在有限的现实中畅游无限的幻想。\n​\t因此，中二并非是一无是处，也并非是幼稚和抽象的代名词。在某种程度上说，中二可以使人的精神世界丰满，当然，这样的丰满是华而不实的，由于没有精神上的输入与积累，最终只能堕落于虚空之中。并且，以中二的状态是无法在现实中生存的，也无法与 现充 （顾名思义，现充就是认为现实足够充实的人）交往，因此在现实生活中，很少能见到中二病（见到的话一般称之为神经病）。\n​\t然而，如果对中二加以改造，一边丰富精神世界，一边立身于现实；既可以做一个现实的成年人，也能保留一点童真；既切实的生活在现实社会中，又能创造一个并行不悖的幻想世界中。在这个充满幻想的精神世界中，我们是无所不能的；我们可以自圆其说，我们的思想都能自洽，那么建设更加坚实的、更加有深度的思想就并非难事了。\n​\t为了避免混淆，下面将这种中二定义为绝命特色的中二思想体系。在这种体系下，中二并非为逃避现实的工具，反而是为了更好的接受现实。在这里我们可以得到心灵的慰藉，思想的净土。在这里我们无所不能，也就不会被琐事困扰，在这里我们可以接受自己，可以原谅自己，仍然可以做自己的英雄！不必求别人理解或是认同，也不接受别人的否定甚至批判。\n​\t简而言之，中二的本质是自我意识过盛，而现实生活中我们往往无处释放自我意识，总是被现实牵着鼻子走。那么与其在现实中寻求短暂的麻痹，不如在中二的世界中修养思想，让自我意识合理的释放，让精神与肉体共同进行悠长的旅行。\n​\t如果你能看到这，并且还能有些许认同，恭喜你，你也是个中二病～\n","date":"2024-11-10","externalUrl":null,"permalink":"/about/zhong_er/","section":"About me","summary":"","title":"对于中二的理解","type":"about"},{"content":"只要你看到了这篇文章，就说明我创建博客成功啦！\n这也是学无止境的第一步吧～\n","date":"2024-11-10","externalUrl":null,"permalink":"/docs/hello_world/","section":"Notes","summary":"","title":"Hello_World","type":"docs"},{"content":"","date":"2024-11-10","externalUrl":null,"permalink":"/tags/test/","section":"Tags","summary":"","title":"Test","type":"tags"},{"content":"","date":"2024-11-10","externalUrl":null,"permalink":"/categories/test/","section":"Categories","summary":"","title":"Test","type":"categories"},{"content":"注意：本故事由真实事件改编，但也只是个故事，姑妄言之，姑妄听之。\n​\t很久很久以前，在中国东北部某不知名的知名城市。\n​\t一个不知名区的不知名小学中，一个平凡又不甘平凡、普通又不想普通的小学生正突发奇想、天马行空。\n​\t正巧，他看了一部动漫，动漫的名字叫做《数码宝贝》又叫《数码暴龙》，原版名称叫《DEGIMON》 ​\t他认为他的性格与八神太一的朋友石田大和十分相似，因此他十分喜欢石田大和的数码宝贝——加鲁鲁兽。\n​\t他想，如果加鲁鲁兽可以继续进化下去，最终可以变成什么呢？同时由于小学生特有的想法，他想：如果我要是加鲁鲁，那该有多好啊～\n​\t于是他开始了无尽的想象～\n​\t现在，我们将这种现象客观的称之为中二，但当时的他对此毫无概念。\n​\t从那之后，他在创作（xiabian）的过程中，认为加鲁鲁进化到极致就是绝命加鲁鲁，但绝命加鲁鲁还是可以继续进化或合体进化成未知的数码宝贝，因此具有无限的可能性。 ​\t同时他将绝命加鲁鲁寄附于自身，认为自己就是绝命加鲁鲁，可谓中二到了极致。\n​\t之后，他和志同道合（同样中二）的几个好兄弟讨论了此事，他们认为，世上不应该也不可能只有一个绝命加鲁鲁，而应该有与之对立统一（那时只是朴素的认为应该有一个劲敌罢了）的另一个数码宝贝（后来确定为夺命暴龙兽，由另一名中二病出演）\n​\t绝命加鲁鲁（简称绝）与夺命暴龙兽（简称夺）都是普通的数码宝贝进化到极致，属于神的存在，但其又是数码宝贝，免不了会有争斗。 ​\t因此，从异世界来了一个中间人（后来称为忍者神龟（简称忍），又由另一个幸运的中二病出演），将二人的关系调和，进而三人成了莫逆之交，史称三剑客。\n​\t这段历史，被称为地段三结义。（别问我地段是什么）\n​\t从此，他以绝命加鲁鲁自居，丰富绝命加鲁鲁的设定及三剑客的世界观，把这样一个从小学诞生的星星之火发扬光大，成为可以燎原的一个设定体系。\n​\t按理说，这样的经历每个人都或多或少会有，也没什么的稀奇的（当然，能记录自己黑历史的也算是勇士了）。但与平常的中二小学生不同，他并没有在成长的过程中厌恶甚至抛弃之前中二的过去，而是以此为基础，不断改进，不断完善，不以此感到羞耻，而是将这种中二转变为适应环境、顺应时代的自己安身立命的精神支撑（的基础，人当然不能只靠中二活着）。\n​\t我们相信，绝命加鲁鲁这个名字，会陪伴他十年，二十年，五十年，一百年\u0026hellip; ​\t直到绝命加鲁鲁的名字被人们所忘记，直到绝命加鲁鲁在历史的长河中，在人们的记忆中湮灭、消逝\u0026hellip;\n​\t亦或是继续等待下一个，天马行空的、突发奇想的被选召的孩子将其继承～\n​\tTo be continue\n​\t后记：这篇故事是之前写的，文笔比较稚嫩，但现在读还挺有趣的（虽然很尬，但不自觉的笑），后续可能会继续更新这个故事，也可能会写一些作者思想的变化和发展，敬请期待～\n","date":"2024-11-10","externalUrl":null,"permalink":"/about/dhgm_origin/","section":"About me","summary":"","title":"绝命加鲁鲁:起源","type":"about"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]